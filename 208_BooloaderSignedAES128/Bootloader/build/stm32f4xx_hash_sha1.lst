ARM GAS  /tmp/cc29Xthf.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hash_sha1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c"
  20              		.section	.text.HASH_SHA1,"ax",%progbits
  21              		.align	1
  22              		.global	HASH_SHA1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HASH_SHA1:
  28              	.LFB110:
   1:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
   2:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
   3:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @file    stm32f4xx_hash_sha1.c
   4:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @author  MCD Application Team
   5:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @version V1.0.2
   6:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @date    05-March-2012
   7:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief   This file provides high level functions to compute the HASH SHA1 and
   8:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          HMAC SHA1 Digest of an input message.
   9:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          peripheral.
  11:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  12:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @verbatim
  13:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * 
  14:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  15:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *                                   How to use this driver
  16:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  17:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          1. Enable The HASH controller clock using 
  18:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  20:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          2. Calculate the HASH SHA1 Digest using HASH_SHA1() function.
  21:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  22:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          3. Calculate the HMAC SHA1 Digest using HMAC_SHA1() function.
  23:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  24:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @endverbatim
  25:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  26:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  27:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @attention
  28:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  29:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  30:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
ARM GAS  /tmp/cc29Xthf.s 			page 2


  31:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  32:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * You may not use this file except in compliance with the License.
  33:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * You may obtain a copy of the License at:
  34:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  35:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  36:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  37:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * Unless required by applicable law or agreed to in writing, software 
  38:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  39:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  40:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * See the License for the specific language governing permissions and
  41:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * limitations under the License.
  42:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  43:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  44:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  45:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  46:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Includes ------------------------------------------------------------------*/
  47:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #include "stm32f4xx_hash.h"
  48:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  49:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  50:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  51:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  52:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  53:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH 
  54:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief HASH driver modules
  55:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  56:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  57:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  58:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private typedef -----------------------------------------------------------*/
  59:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private define ------------------------------------------------------------*/
  60:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #define SHA1BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  61:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  62:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private macro -------------------------------------------------------------*/
  63:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private variables ---------------------------------------------------------*/
  64:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private function prototypes -----------------------------------------------*/
  65:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private functions ---------------------------------------------------------*/
  66:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  67:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Private_Functions
  68:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  69:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */ 
  70:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  71:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Group6 High Level SHA1 functions
  72:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *  @brief   High Level SHA1 Hash and HMAC functions 
  73:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *
  74:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @verbatim   
  75:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  76:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                           High Level SHA1 Hash and HMAC functions
  77:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  78:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  79:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  80:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @endverbatim
  81:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  82:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  83:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  84:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
  85:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HASH SHA1 digest.
  86:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
  87:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
ARM GAS  /tmp/cc29Xthf.s 			page 3


  88:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
  89:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
  90:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
  91:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
  92:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  93:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HASH_SHA1(uint8_t *Input, uint32_t Ilen, uint8_t Output[20])
  94:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
  29              		.loc 1 94 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 120
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 9EB0     		sub	sp, sp, #120
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 128
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
  95:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
  96:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
  97:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
  47              		.loc 1 97 17
  48 000c 0023     		movs	r3, #0
  49 000e FB82     		strh	r3, [r7, #22]	@ movhi
  98:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
  50              		.loc 1 98 12
  51 0010 0023     		movs	r3, #0
  52 0012 7B67     		str	r3, [r7, #116]
  99:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
  53              		.loc 1 99 17
  54 0014 0023     		movs	r3, #0
  55 0016 3B61     		str	r3, [r7, #16]
 100:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
  56              		.loc 1 100 12
  57 0018 0023     		movs	r3, #0
  58 001a BB66     		str	r3, [r7, #104]
 101:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
  59              		.loc 1 101 15
  60 001c 0123     		movs	r3, #1
  61 001e 87F87330 		strb	r3, [r7, #115]
 102:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 102 12
  63 0022 FB68     		ldr	r3, [r7, #12]
  64 0024 FB66     		str	r3, [r7, #108]
 103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
  65              		.loc 1 103 12
  66 0026 7B68     		ldr	r3, [r7, #4]
  67 0028 7B66     		str	r3, [r7, #100]
 104:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 105:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
ARM GAS  /tmp/cc29Xthf.s 			page 4


 106:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  68              		.loc 1 106 19
  69 002a BB68     		ldr	r3, [r7, #8]
  70 002c 9BB2     		uxth	r3, r3
  71 002e 03F00303 		and	r3, r3, #3
  72 0032 9BB2     		uxth	r3, r3
  73 0034 DB00     		lsls	r3, r3, #3
  74 0036 9BB2     		uxth	r3, r3
  75 0038 FB82     		strh	r3, [r7, #22]	@ movhi
 107:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 108:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 109:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
  76              		.loc 1 109 3
  77 003a FFF7FEFF 		bl	HASH_DeInit
 110:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 111:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 112:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
  78              		.loc 1 112 46
  79 003e 0023     		movs	r3, #0
  80 0040 FB62     		str	r3, [r7, #44]
 113:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  81              		.loc 1 113 41
  82 0042 0023     		movs	r3, #0
  83 0044 3B63     		str	r3, [r7, #48]
 114:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  84              		.loc 1 114 41
  85 0046 2023     		movs	r3, #32
  86 0048 7B63     		str	r3, [r7, #52]
 115:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
  87              		.loc 1 115 3
  88 004a 07F12C03 		add	r3, r7, #44
  89 004e 1846     		mov	r0, r3
  90 0050 FFF7FEFF 		bl	HASH_Init
 116:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 117:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the data */
 118:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  91              		.loc 1 118 3
  92 0054 FB8A     		ldrh	r3, [r7, #22]	@ movhi
  93 0056 9BB2     		uxth	r3, r3
  94 0058 1846     		mov	r0, r3
  95 005a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 119:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 120:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Input block in the IN FIFO */
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
  96              		.loc 1 121 8
  97 005e 0023     		movs	r3, #0
  98 0060 7B67     		str	r3, [r7, #116]
  99              		.loc 1 121 3
 100 0062 0AE0     		b	.L2
 101              	.L3:
 122:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 123:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
 102              		.loc 1 123 18
 103 0064 FB6E     		ldr	r3, [r7, #108]
 104              		.loc 1 123 5
 105 0066 1B68     		ldr	r3, [r3]
 106 0068 1846     		mov	r0, r3
ARM GAS  /tmp/cc29Xthf.s 			page 5


 107 006a FFF7FEFF 		bl	HASH_DataIn
 124:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     inputaddr+=4;
 108              		.loc 1 124 14
 109 006e FB6E     		ldr	r3, [r7, #108]
 110 0070 0433     		adds	r3, r3, #4
 111 0072 FB66     		str	r3, [r7, #108]
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 112              		.loc 1 121 21 discriminator 3
 113 0074 7B6F     		ldr	r3, [r7, #116]
 114 0076 0433     		adds	r3, r3, #4
 115 0078 7B67     		str	r3, [r7, #116]
 116              	.L2:
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 117              		.loc 1 121 13 discriminator 1
 118 007a 7A6F     		ldr	r2, [r7, #116]
 119 007c BB68     		ldr	r3, [r7, #8]
 120 007e 9A42     		cmp	r2, r3
 121 0080 F0D3     		bcc	.L3
 125:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 126:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 127:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 128:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 122              		.loc 1 128 3
 123 0082 FFF7FEFF 		bl	HASH_StartDigest
 124              	.L5:
 129:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 130:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 131:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 132:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 133:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 125              		.loc 1 133 18
 126 0086 0820     		movs	r0, #8
 127 0088 FFF7FEFF 		bl	HASH_GetFlagStatus
 128 008c 0346     		mov	r3, r0
 129              		.loc 1 133 16 discriminator 1
 130 008e BB66     		str	r3, [r7, #104]
 134:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 131              		.loc 1 134 12
 132 0090 3B69     		ldr	r3, [r7, #16]
 133 0092 0133     		adds	r3, r3, #1
 134 0094 3B61     		str	r3, [r7, #16]
 135:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 135              		.loc 1 135 20 discriminator 2
 136 0096 3B69     		ldr	r3, [r7, #16]
 137              		.loc 1 135 41 discriminator 2
 138 0098 B3F5803F 		cmp	r3, #65536
 139 009c 02D0     		beq	.L4
 140              		.loc 1 135 41 is_stmt 0 discriminator 1
 141 009e BB6E     		ldr	r3, [r7, #104]
 142 00a0 002B     		cmp	r3, #0
 143 00a2 F0D1     		bne	.L5
 144              	.L4:
 136:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 137:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 145              		.loc 1 137 6 is_stmt 1
 146 00a4 BB6E     		ldr	r3, [r7, #104]
 147 00a6 002B     		cmp	r3, #0
ARM GAS  /tmp/cc29Xthf.s 			page 6


 148 00a8 03D0     		beq	.L6
 138:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 139:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 149              		.loc 1 139 13
 150 00aa 0023     		movs	r3, #0
 151 00ac 87F87330 		strb	r3, [r7, #115]
 152 00b0 38E0     		b	.L7
 153              	.L6:
 140:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 141:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 143:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Read the message digest */
 144:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_GetDigest(&SHA1_MessageDigest);
 154              		.loc 1 144 5
 155 00b2 07F11803 		add	r3, r7, #24
 156 00b6 1846     		mov	r0, r3
 157 00b8 FFF7FEFF 		bl	HASH_GetDigest
 145:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 158              		.loc 1 145 33
 159 00bc BA69     		ldr	r2, [r7, #24]
 160              		.loc 1 145 6
 161 00be 7B6E     		ldr	r3, [r7, #100]
 162 00c0 3A64     		str	r2, [r7, #64]
 163              	.LBB22:
 164              	.LBB23:
 165              		.file 2 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h"
   1:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
   7:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @note
   8:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  10:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  11:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  15:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  16:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  22:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  24:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  27:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  28:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   @{
ARM GAS  /tmp/cc29Xthf.s 			page 7


  32:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** */
  33:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  34:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  37:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif
  40:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  41:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  42:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  44:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  46:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  48:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  49:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  51:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  54:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  56:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  57:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  59:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  62:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  64:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  65:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  67:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  69:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  71:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  72:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  74:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  78:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  80:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  81:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  83:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  86:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  88:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cc29Xthf.s 			page 8


  89:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  91:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  94:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  96:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  97:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  99:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 101:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 104:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 106:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 107:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 109:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 111:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 114:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 116:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 119:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 120:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 121:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 123:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 125:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 128:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 130:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 133:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 134:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 135:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 137:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 139:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 141:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 144:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cc29Xthf.s 			page 9


 146:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 147:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 149:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 151:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 154:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 156:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 157:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 159:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 161:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 164:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 166:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 167:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 169:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 171:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 174:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 176:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 177:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 179:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 181:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 186:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 188:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 189:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 191:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 193:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 198:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 200:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 201:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cc29Xthf.s 			page 10


 203:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 205:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 210:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 212:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 213:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 215:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 217:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 218:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 220:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 221:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 223:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 225:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 229:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 231:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 232:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 234:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 236:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 240:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 242:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 243:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 245:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 247:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 250:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 252:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 254:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 255:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 256:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 259:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
ARM GAS  /tmp/cc29Xthf.s 			page 11


 260:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 261:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 262:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 265:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 267:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 269:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 271:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 273:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 274:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 275:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 277:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 280:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 282:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 284:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 285:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 286:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 288:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 291:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 293:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 295:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 296:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 297:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 299:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 301:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 303:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 305:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 306:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 307:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 309:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 313:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 315:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
ARM GAS  /tmp/cc29Xthf.s 			page 12


 317:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 318:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 319:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 321:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 324:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 326:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 328:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 329:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 330:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 332:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 335:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 337:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 339:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 340:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 341:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 343:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 345:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 347:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 348:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 350:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 351:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 166              		.loc 2 352 3
 167 00c2 3A6C     		ldr	r2, [r7, #64]
 168              		.syntax unified
 169              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 170 00c4 12BA     		rev r2, r2
 171              	@ 0 "" 2
 172              		.thumb
 173              		.syntax unified
 174 00c6 FA63     		str	r2, [r7, #60]
 353:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 175              		.loc 2 353 9
 176 00c8 FA6B     		ldr	r2, [r7, #60]
 177              	.LBE23:
 178              	.LBE22:
 179              		.loc 1 145 31 discriminator 1
 180 00ca 1A60     		str	r2, [r3]
 146:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 181              		.loc 1 146 15
 182 00cc 7B6E     		ldr	r3, [r7, #100]
 183 00ce 0433     		adds	r3, r3, #4
 184 00d0 7B66     		str	r3, [r7, #100]
ARM GAS  /tmp/cc29Xthf.s 			page 13


 147:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 185              		.loc 1 147 33
 186 00d2 FA69     		ldr	r2, [r7, #28]
 187              		.loc 1 147 6
 188 00d4 7B6E     		ldr	r3, [r7, #100]
 189 00d6 BA64     		str	r2, [r7, #72]
 190              	.LBB24:
 191              	.LBB25:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 192              		.loc 2 352 3
 193 00d8 BA6C     		ldr	r2, [r7, #72]
 194              		.syntax unified
 195              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 196 00da 12BA     		rev r2, r2
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200 00dc 7A64     		str	r2, [r7, #68]
 201              		.loc 2 353 9
 202 00de 7A6C     		ldr	r2, [r7, #68]
 203              	.LBE25:
 204              	.LBE24:
 205              		.loc 1 147 31 discriminator 1
 206 00e0 1A60     		str	r2, [r3]
 148:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 207              		.loc 1 148 15
 208 00e2 7B6E     		ldr	r3, [r7, #100]
 209 00e4 0433     		adds	r3, r3, #4
 210 00e6 7B66     		str	r3, [r7, #100]
 149:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 211              		.loc 1 149 33
 212 00e8 3A6A     		ldr	r2, [r7, #32]
 213              		.loc 1 149 6
 214 00ea 7B6E     		ldr	r3, [r7, #100]
 215 00ec 3A65     		str	r2, [r7, #80]
 216              	.LBB26:
 217              	.LBB27:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 218              		.loc 2 352 3
 219 00ee 3A6D     		ldr	r2, [r7, #80]
 220              		.syntax unified
 221              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 222 00f0 12BA     		rev r2, r2
 223              	@ 0 "" 2
 224              		.thumb
 225              		.syntax unified
 226 00f2 FA64     		str	r2, [r7, #76]
 227              		.loc 2 353 9
 228 00f4 FA6C     		ldr	r2, [r7, #76]
 229              	.LBE27:
 230              	.LBE26:
 231              		.loc 1 149 31 discriminator 1
 232 00f6 1A60     		str	r2, [r3]
 150:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 233              		.loc 1 150 15
 234 00f8 7B6E     		ldr	r3, [r7, #100]
 235 00fa 0433     		adds	r3, r3, #4
ARM GAS  /tmp/cc29Xthf.s 			page 14


 236 00fc 7B66     		str	r3, [r7, #100]
 151:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 237              		.loc 1 151 33
 238 00fe 7A6A     		ldr	r2, [r7, #36]
 239              		.loc 1 151 6
 240 0100 7B6E     		ldr	r3, [r7, #100]
 241 0102 BA65     		str	r2, [r7, #88]
 242              	.LBB28:
 243              	.LBB29:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 244              		.loc 2 352 3
 245 0104 BA6D     		ldr	r2, [r7, #88]
 246              		.syntax unified
 247              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 248 0106 12BA     		rev r2, r2
 249              	@ 0 "" 2
 250              		.thumb
 251              		.syntax unified
 252 0108 7A65     		str	r2, [r7, #84]
 253              		.loc 2 353 9
 254 010a 7A6D     		ldr	r2, [r7, #84]
 255              	.LBE29:
 256              	.LBE28:
 257              		.loc 1 151 31 discriminator 1
 258 010c 1A60     		str	r2, [r3]
 152:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 259              		.loc 1 152 15
 260 010e 7B6E     		ldr	r3, [r7, #100]
 261 0110 0433     		adds	r3, r3, #4
 262 0112 7B66     		str	r3, [r7, #100]
 153:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 263              		.loc 1 153 33
 264 0114 BA6A     		ldr	r2, [r7, #40]
 265              		.loc 1 153 6
 266 0116 7B6E     		ldr	r3, [r7, #100]
 267 0118 3A66     		str	r2, [r7, #96]
 268              	.LBB30:
 269              	.LBB31:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 270              		.loc 2 352 3
 271 011a 3A6E     		ldr	r2, [r7, #96]
 272              		.syntax unified
 273              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 274 011c 12BA     		rev r2, r2
 275              	@ 0 "" 2
 276              		.thumb
 277              		.syntax unified
 278 011e FA65     		str	r2, [r7, #92]
 279              		.loc 2 353 9
 280 0120 FA6D     		ldr	r2, [r7, #92]
 281              	.LBE31:
 282              	.LBE30:
 283              		.loc 1 153 31 discriminator 1
 284 0122 1A60     		str	r2, [r3]
 285              	.L7:
 154:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 155:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;
ARM GAS  /tmp/cc29Xthf.s 			page 15


 286              		.loc 1 155 10
 287 0124 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 156:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 288              		.loc 1 156 1
 289 0128 1846     		mov	r0, r3
 290 012a 7837     		adds	r7, r7, #120
 291              	.LCFI3:
 292              		.cfi_def_cfa_offset 8
 293 012c BD46     		mov	sp, r7
 294              	.LCFI4:
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 012e 80BD     		pop	{r7, pc}
 298              		.cfi_endproc
 299              	.LFE110:
 301              		.section	.text.HMAC_SHA1,"ax",%progbits
 302              		.align	1
 303              		.global	HMAC_SHA1
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	HMAC_SHA1:
 309              	.LFB111:
 157:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 158:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
 159:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HMAC SHA1 digest.
 160:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Key: pointer to the Key used for HMAC.
 161:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Keylen: length of the Key used for HMAC.  
 162:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
 163:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
 164:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
 165:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
 166:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
 167:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
 168:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
 169:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HMAC_SHA1(uint8_t *Key, uint32_t Keylen, uint8_t *Input,
 170:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                       uint32_t Ilen, uint8_t Output[20])
 171:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
 310              		.loc 1 171 1
 311              		.cfi_startproc
 312              		@ args = 4, pretend = 0, frame = 128
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI5:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 A0B0     		sub	sp, sp, #128
 320              	.LCFI6:
 321              		.cfi_def_cfa_offset 136
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI7:
 324              		.cfi_def_cfa_register 7
 325 0006 F860     		str	r0, [r7, #12]
 326 0008 B960     		str	r1, [r7, #8]
 327 000a 7A60     		str	r2, [r7, #4]
 328 000c 3B60     		str	r3, [r7]
ARM GAS  /tmp/cc29Xthf.s 			page 16


 172:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
 173:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
 174:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
 329              		.loc 1 174 17
 330 000e 0023     		movs	r3, #0
 331 0010 7B83     		strh	r3, [r7, #26]	@ movhi
 175:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitskey = 0;
 332              		.loc 1 175 17
 333 0012 0023     		movs	r3, #0
 334 0014 3B83     		strh	r3, [r7, #24]	@ movhi
 176:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
 335              		.loc 1 176 12
 336 0016 0023     		movs	r3, #0
 337 0018 FB67     		str	r3, [r7, #124]
 177:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
 338              		.loc 1 177 17
 339 001a 0023     		movs	r3, #0
 340 001c 7B61     		str	r3, [r7, #20]
 178:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
 341              		.loc 1 178 12
 342 001e 0023     		movs	r3, #0
 343 0020 FB66     		str	r3, [r7, #108]
 179:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
 344              		.loc 1 179 15
 345 0022 0123     		movs	r3, #1
 346 0024 87F87B30 		strb	r3, [r7, #123]
 180:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t keyaddr    = (uint32_t)Key;
 347              		.loc 1 180 12
 348 0028 FB68     		ldr	r3, [r7, #12]
 349 002a 7B67     		str	r3, [r7, #116]
 181:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 350              		.loc 1 181 12
 351 002c 7B68     		ldr	r3, [r7, #4]
 352 002e 3B67     		str	r3, [r7, #112]
 182:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
 353              		.loc 1 182 12
 354 0030 D7F88830 		ldr	r3, [r7, #136]
 355 0034 BB66     		str	r3, [r7, #104]
 183:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 184:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 185:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 356              		.loc 1 185 19
 357 0036 3B68     		ldr	r3, [r7]
 358 0038 9BB2     		uxth	r3, r3
 359 003a 03F00303 		and	r3, r3, #3
 360 003e 9BB2     		uxth	r3, r3
 361 0040 DB00     		lsls	r3, r3, #3
 362 0042 9BB2     		uxth	r3, r3
 363 0044 7B83     		strh	r3, [r7, #26]	@ movhi
 186:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 187:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Key */
 188:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 364              		.loc 1 188 18
 365 0046 BB68     		ldr	r3, [r7, #8]
 366 0048 9BB2     		uxth	r3, r3
 367 004a 03F00303 		and	r3, r3, #3
 368 004e 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc29Xthf.s 			page 17


 369 0050 DB00     		lsls	r3, r3, #3
 370 0052 9BB2     		uxth	r3, r3
 371 0054 3B83     		strh	r3, [r7, #24]	@ movhi
 189:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 190:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 191:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
 372              		.loc 1 191 3
 373 0056 FFF7FEFF 		bl	HASH_DeInit
 192:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 193:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 374              		.loc 1 194 46
 375 005a 0023     		movs	r3, #0
 376 005c 3B63     		str	r3, [r7, #48]
 195:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 377              		.loc 1 195 41
 378 005e 4023     		movs	r3, #64
 379 0060 7B63     		str	r3, [r7, #52]
 196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 380              		.loc 1 196 41
 381 0062 2023     		movs	r3, #32
 382 0064 BB63     		str	r3, [r7, #56]
 197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if(Keylen > 64)
 383              		.loc 1 197 5
 384 0066 BB68     		ldr	r3, [r7, #8]
 385 0068 402B     		cmp	r3, #64
 386 006a 03D9     		bls	.L15
 198:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC long Key */
 200:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 387              		.loc 1 200 46
 388 006c 4FF48033 		mov	r3, #65536
 389 0070 FB63     		str	r3, [r7, #60]
 390 0072 01E0     		b	.L16
 391              	.L15:
 201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 203:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC short Key */
 205:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 392              		.loc 1 205 46
 393 0074 0023     		movs	r3, #0
 394 0076 FB63     		str	r3, [r7, #60]
 395              	.L16:
 206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
 396              		.loc 1 207 3
 397 0078 07F13003 		add	r3, r7, #48
 398 007c 1846     		mov	r0, r3
 399 007e FFF7FEFF 		bl	HASH_Init
 208:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the Key */
 210:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 400              		.loc 1 210 3
 401 0082 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 402 0084 9BB2     		uxth	r3, r3
 403 0086 1846     		mov	r0, r3
ARM GAS  /tmp/cc29Xthf.s 			page 18


 404 0088 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Key */
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 405              		.loc 1 213 8
 406 008c 0023     		movs	r3, #0
 407 008e FB67     		str	r3, [r7, #124]
 408              		.loc 1 213 3
 409 0090 0AE0     		b	.L17
 410              	.L18:
 214:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 215:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 411              		.loc 1 215 18
 412 0092 7B6F     		ldr	r3, [r7, #116]
 413              		.loc 1 215 5
 414 0094 1B68     		ldr	r3, [r3]
 415 0096 1846     		mov	r0, r3
 416 0098 FFF7FEFF 		bl	HASH_DataIn
 216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     keyaddr+=4;
 417              		.loc 1 216 12
 418 009c 7B6F     		ldr	r3, [r7, #116]
 419 009e 0433     		adds	r3, r3, #4
 420 00a0 7B67     		str	r3, [r7, #116]
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 421              		.loc 1 213 23 discriminator 3
 422 00a2 FB6F     		ldr	r3, [r7, #124]
 423 00a4 0433     		adds	r3, r3, #4
 424 00a6 FB67     		str	r3, [r7, #124]
 425              	.L17:
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 426              		.loc 1 213 13 discriminator 1
 427 00a8 FA6F     		ldr	r2, [r7, #124]
 428 00aa BB68     		ldr	r3, [r7, #8]
 429 00ac 9A42     		cmp	r2, r3
 430 00ae F0D3     		bcc	.L18
 217:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 220:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 431              		.loc 1 220 3
 432 00b0 FFF7FEFF 		bl	HASH_StartDigest
 433              	.L20:
 221:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 222:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 223:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 224:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 225:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 434              		.loc 1 225 18
 435 00b4 0820     		movs	r0, #8
 436 00b6 FFF7FEFF 		bl	HASH_GetFlagStatus
 437 00ba 0346     		mov	r3, r0
 438              		.loc 1 225 16 discriminator 1
 439 00bc FB66     		str	r3, [r7, #108]
 226:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 440              		.loc 1 226 12
 441 00be 7B69     		ldr	r3, [r7, #20]
 442 00c0 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc29Xthf.s 			page 19


 443 00c2 7B61     		str	r3, [r7, #20]
 227:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 444              		.loc 1 227 20 discriminator 2
 445 00c4 7B69     		ldr	r3, [r7, #20]
 446              		.loc 1 227 41 discriminator 2
 447 00c6 B3F5803F 		cmp	r3, #65536
 448 00ca 02D0     		beq	.L19
 449              		.loc 1 227 41 is_stmt 0 discriminator 1
 450 00cc FB6E     		ldr	r3, [r7, #108]
 451 00ce 002B     		cmp	r3, #0
 452 00d0 F0D1     		bne	.L20
 453              	.L19:
 228:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 229:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 454              		.loc 1 229 6 is_stmt 1
 455 00d2 FB6E     		ldr	r3, [r7, #108]
 456 00d4 002B     		cmp	r3, #0
 457 00d6 03D0     		beq	.L21
 230:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 231:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 458              		.loc 1 231 13
 459 00d8 0023     		movs	r3, #0
 460 00da 87F87B30 		strb	r3, [r7, #123]
 461 00de 9CE0     		b	.L22
 462              	.L21:
 232:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 233:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 234:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 235:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Configure the number of valid bits in last word of the Input data */
 236:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 463              		.loc 1 236 5
 464 00e0 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 465 00e2 9BB2     		uxth	r3, r3
 466 00e4 1846     		mov	r0, r3
 467 00e6 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 237:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 238:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Write the Input block in the IN FIFO */
 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 468              		.loc 1 239 10
 469 00ea 0023     		movs	r3, #0
 470 00ec FB67     		str	r3, [r7, #124]
 471              		.loc 1 239 5
 472 00ee 0AE0     		b	.L23
 473              	.L24:
 240:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 241:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 474              		.loc 1 241 20
 475 00f0 3B6F     		ldr	r3, [r7, #112]
 476              		.loc 1 241 7
 477 00f2 1B68     		ldr	r3, [r3]
 478 00f4 1846     		mov	r0, r3
 479 00f6 FFF7FEFF 		bl	HASH_DataIn
 242:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 480              		.loc 1 242 16
 481 00fa 3B6F     		ldr	r3, [r7, #112]
 482 00fc 0433     		adds	r3, r3, #4
 483 00fe 3B67     		str	r3, [r7, #112]
ARM GAS  /tmp/cc29Xthf.s 			page 20


 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 484              		.loc 1 239 23 discriminator 3
 485 0100 FB6F     		ldr	r3, [r7, #124]
 486 0102 0433     		adds	r3, r3, #4
 487 0104 FB67     		str	r3, [r7, #124]
 488              	.L23:
 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 489              		.loc 1 239 15 discriminator 1
 490 0106 FA6F     		ldr	r2, [r7, #124]
 491 0108 3B68     		ldr	r3, [r7]
 492 010a 9A42     		cmp	r2, r3
 493 010c F0D3     		bcc	.L24
 243:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 244:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Start the HASH processor */
 246:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_StartDigest();
 494              		.loc 1 246 5
 495 010e FFF7FEFF 		bl	HASH_StartDigest
 247:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 248:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 249:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* wait until the Busy flag is RESET */
 250:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter =0;
 496              		.loc 1 250 13
 497 0112 0023     		movs	r3, #0
 498 0114 7B61     		str	r3, [r7, #20]
 499              	.L26:
 251:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     do
 252:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 253:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 500              		.loc 1 253 20
 501 0116 0820     		movs	r0, #8
 502 0118 FFF7FEFF 		bl	HASH_GetFlagStatus
 503 011c 0346     		mov	r3, r0
 504              		.loc 1 253 18 discriminator 1
 505 011e FB66     		str	r3, [r7, #108]
 254:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter++;
 506              		.loc 1 254 14
 507 0120 7B69     		ldr	r3, [r7, #20]
 508 0122 0133     		adds	r3, r3, #1
 509 0124 7B61     		str	r3, [r7, #20]
 255:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 510              		.loc 1 255 22 discriminator 2
 511 0126 7B69     		ldr	r3, [r7, #20]
 512              		.loc 1 255 43 discriminator 2
 513 0128 B3F5803F 		cmp	r3, #65536
 514 012c 02D0     		beq	.L25
 515              		.loc 1 255 43 is_stmt 0 discriminator 1
 516 012e FB6E     		ldr	r3, [r7, #108]
 517 0130 002B     		cmp	r3, #0
 518 0132 F0D1     		bne	.L26
 519              	.L25:
 256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 257:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     if (busystatus != RESET)
 520              		.loc 1 257 8 is_stmt 1
 521 0134 FB6E     		ldr	r3, [r7, #108]
 522 0136 002B     		cmp	r3, #0
 523 0138 03D0     		beq	.L27
ARM GAS  /tmp/cc29Xthf.s 			page 21


 258:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 259:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       status = ERROR;
 524              		.loc 1 259 14
 525 013a 0023     		movs	r3, #0
 526 013c 87F87B30 		strb	r3, [r7, #123]
 527 0140 6BE0     		b	.L22
 528              	.L27:
 260:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 261:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     else
 262:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {  
 263:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Configure the number of valid bits in last word of the Key */
 264:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 529              		.loc 1 264 7
 530 0142 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 531 0144 9BB2     		uxth	r3, r3
 532 0146 1846     		mov	r0, r3
 533 0148 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 265:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 266:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Write the Key */
 267:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       keyaddr = (uint32_t)Key;
 534              		.loc 1 267 15
 535 014c FB68     		ldr	r3, [r7, #12]
 536 014e 7B67     		str	r3, [r7, #116]
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 537              		.loc 1 268 12
 538 0150 0023     		movs	r3, #0
 539 0152 FB67     		str	r3, [r7, #124]
 540              		.loc 1 268 7
 541 0154 0AE0     		b	.L28
 542              	.L29:
 269:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 270:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 543              		.loc 1 270 22
 544 0156 7B6F     		ldr	r3, [r7, #116]
 545              		.loc 1 270 9
 546 0158 1B68     		ldr	r3, [r3]
 547 015a 1846     		mov	r0, r3
 548 015c FFF7FEFF 		bl	HASH_DataIn
 271:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 549              		.loc 1 271 16
 550 0160 7B6F     		ldr	r3, [r7, #116]
 551 0162 0433     		adds	r3, r3, #4
 552 0164 7B67     		str	r3, [r7, #116]
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 553              		.loc 1 268 27 discriminator 3
 554 0166 FB6F     		ldr	r3, [r7, #124]
 555 0168 0433     		adds	r3, r3, #4
 556 016a FB67     		str	r3, [r7, #124]
 557              	.L28:
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 558              		.loc 1 268 17 discriminator 1
 559 016c FA6F     		ldr	r2, [r7, #124]
 560 016e BB68     		ldr	r3, [r7, #8]
 561 0170 9A42     		cmp	r2, r3
 562 0172 F0D3     		bcc	.L29
 272:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 273:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
ARM GAS  /tmp/cc29Xthf.s 			page 22


 274:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Start the HASH processor */
 275:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_StartDigest();
 563              		.loc 1 275 7
 564 0174 FFF7FEFF 		bl	HASH_StartDigest
 276:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 277:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* wait until the Busy flag is RESET */
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter =0;
 565              		.loc 1 278 15
 566 0178 0023     		movs	r3, #0
 567 017a 7B61     		str	r3, [r7, #20]
 568              	.L31:
 279:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       do
 280:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 281:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 569              		.loc 1 281 22
 570 017c 0820     		movs	r0, #8
 571 017e FFF7FEFF 		bl	HASH_GetFlagStatus
 572 0182 0346     		mov	r3, r0
 573              		.loc 1 281 20 discriminator 1
 574 0184 FB66     		str	r3, [r7, #108]
 282:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         counter++;
 575              		.loc 1 282 16
 576 0186 7B69     		ldr	r3, [r7, #20]
 577 0188 0133     		adds	r3, r3, #1
 578 018a 7B61     		str	r3, [r7, #20]
 283:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 579              		.loc 1 283 24 discriminator 2
 580 018c 7B69     		ldr	r3, [r7, #20]
 581              		.loc 1 283 45 discriminator 2
 582 018e B3F5803F 		cmp	r3, #65536
 583 0192 02D0     		beq	.L30
 584              		.loc 1 283 45 is_stmt 0 discriminator 1
 585 0194 FB6E     		ldr	r3, [r7, #108]
 586 0196 002B     		cmp	r3, #0
 587 0198 F0D1     		bne	.L31
 588              	.L30:
 284:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 285:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       if (busystatus != RESET)
 589              		.loc 1 285 10 is_stmt 1
 590 019a FB6E     		ldr	r3, [r7, #108]
 591 019c 002B     		cmp	r3, #0
 592 019e 03D0     		beq	.L32
 286:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 287:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         status = ERROR;
 593              		.loc 1 287 16
 594 01a0 0023     		movs	r3, #0
 595 01a2 87F87B30 		strb	r3, [r7, #123]
 596 01a6 38E0     		b	.L22
 597              	.L32:
 288:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 289:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       else
 290:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 291:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         /* Read the message digest */
 292:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_GetDigest(&SHA1_MessageDigest);
 598              		.loc 1 292 9
 599 01a8 07F11C03 		add	r3, r7, #28
 600 01ac 1846     		mov	r0, r3
ARM GAS  /tmp/cc29Xthf.s 			page 23


 601 01ae FFF7FEFF 		bl	HASH_GetDigest
 293:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 602              		.loc 1 293 37
 603 01b2 FA69     		ldr	r2, [r7, #28]
 604              		.loc 1 293 10
 605 01b4 BB6E     		ldr	r3, [r7, #104]
 606 01b6 7A64     		str	r2, [r7, #68]
 607              	.LBB32:
 608              	.LBB33:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 609              		.loc 2 352 3
 610 01b8 7A6C     		ldr	r2, [r7, #68]
 611              		.syntax unified
 612              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 613 01ba 12BA     		rev r2, r2
 614              	@ 0 "" 2
 615              		.thumb
 616              		.syntax unified
 617 01bc 3A64     		str	r2, [r7, #64]
 618              		.loc 2 353 9
 619 01be 3A6C     		ldr	r2, [r7, #64]
 620              	.LBE33:
 621              	.LBE32:
 622              		.loc 1 293 35 discriminator 1
 623 01c0 1A60     		str	r2, [r3]
 294:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 624              		.loc 1 294 19
 625 01c2 BB6E     		ldr	r3, [r7, #104]
 626 01c4 0433     		adds	r3, r3, #4
 627 01c6 BB66     		str	r3, [r7, #104]
 295:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 628              		.loc 1 295 37
 629 01c8 3A6A     		ldr	r2, [r7, #32]
 630              		.loc 1 295 10
 631 01ca BB6E     		ldr	r3, [r7, #104]
 632 01cc FA64     		str	r2, [r7, #76]
 633              	.LBB34:
 634              	.LBB35:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 635              		.loc 2 352 3
 636 01ce FA6C     		ldr	r2, [r7, #76]
 637              		.syntax unified
 638              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 639 01d0 12BA     		rev r2, r2
 640              	@ 0 "" 2
 641              		.thumb
 642              		.syntax unified
 643 01d2 BA64     		str	r2, [r7, #72]
 644              		.loc 2 353 9
 645 01d4 BA6C     		ldr	r2, [r7, #72]
 646              	.LBE35:
 647              	.LBE34:
 648              		.loc 1 295 35 discriminator 1
 649 01d6 1A60     		str	r2, [r3]
 296:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 650              		.loc 1 296 19
 651 01d8 BB6E     		ldr	r3, [r7, #104]
ARM GAS  /tmp/cc29Xthf.s 			page 24


 652 01da 0433     		adds	r3, r3, #4
 653 01dc BB66     		str	r3, [r7, #104]
 297:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 654              		.loc 1 297 37
 655 01de 7A6A     		ldr	r2, [r7, #36]
 656              		.loc 1 297 10
 657 01e0 BB6E     		ldr	r3, [r7, #104]
 658 01e2 7A65     		str	r2, [r7, #84]
 659              	.LBB36:
 660              	.LBB37:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 661              		.loc 2 352 3
 662 01e4 7A6D     		ldr	r2, [r7, #84]
 663              		.syntax unified
 664              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 665 01e6 12BA     		rev r2, r2
 666              	@ 0 "" 2
 667              		.thumb
 668              		.syntax unified
 669 01e8 3A65     		str	r2, [r7, #80]
 670              		.loc 2 353 9
 671 01ea 3A6D     		ldr	r2, [r7, #80]
 672              	.LBE37:
 673              	.LBE36:
 674              		.loc 1 297 35 discriminator 1
 675 01ec 1A60     		str	r2, [r3]
 298:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 676              		.loc 1 298 19
 677 01ee BB6E     		ldr	r3, [r7, #104]
 678 01f0 0433     		adds	r3, r3, #4
 679 01f2 BB66     		str	r3, [r7, #104]
 299:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 680              		.loc 1 299 37
 681 01f4 BA6A     		ldr	r2, [r7, #40]
 682              		.loc 1 299 10
 683 01f6 BB6E     		ldr	r3, [r7, #104]
 684 01f8 FA65     		str	r2, [r7, #92]
 685              	.LBB38:
 686              	.LBB39:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 687              		.loc 2 352 3
 688 01fa FA6D     		ldr	r2, [r7, #92]
 689              		.syntax unified
 690              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 691 01fc 12BA     		rev r2, r2
 692              	@ 0 "" 2
 693              		.thumb
 694              		.syntax unified
 695 01fe BA65     		str	r2, [r7, #88]
 696              		.loc 2 353 9
 697 0200 BA6D     		ldr	r2, [r7, #88]
 698              	.LBE39:
 699              	.LBE38:
 700              		.loc 1 299 35 discriminator 1
 701 0202 1A60     		str	r2, [r3]
 300:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 702              		.loc 1 300 19
ARM GAS  /tmp/cc29Xthf.s 			page 25


 703 0204 BB6E     		ldr	r3, [r7, #104]
 704 0206 0433     		adds	r3, r3, #4
 705 0208 BB66     		str	r3, [r7, #104]
 301:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 706              		.loc 1 301 37
 707 020a FA6A     		ldr	r2, [r7, #44]
 708              		.loc 1 301 10
 709 020c BB6E     		ldr	r3, [r7, #104]
 710 020e 7A66     		str	r2, [r7, #100]
 711              	.LBB40:
 712              	.LBB41:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 713              		.loc 2 352 3
 714 0210 7A6E     		ldr	r2, [r7, #100]
 715              		.syntax unified
 716              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 717 0212 12BA     		rev r2, r2
 718              	@ 0 "" 2
 719              		.thumb
 720              		.syntax unified
 721 0214 3A66     		str	r2, [r7, #96]
 722              		.loc 2 353 9
 723 0216 3A6E     		ldr	r2, [r7, #96]
 724              	.LBE41:
 725              	.LBE40:
 726              		.loc 1 301 35 discriminator 1
 727 0218 1A60     		str	r2, [r3]
 728              	.L22:
 302:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 303:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }  
 304:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 305:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;  
 729              		.loc 1 305 10
 730 021a 97F87B30 		ldrb	r3, [r7, #123]	@ zero_extendqisi2
 306:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 731              		.loc 1 306 1
 732 021e 1846     		mov	r0, r3
 733 0220 8037     		adds	r7, r7, #128
 734              	.LCFI8:
 735              		.cfi_def_cfa_offset 8
 736 0222 BD46     		mov	sp, r7
 737              	.LCFI9:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0224 80BD     		pop	{r7, pc}
 741              		.cfi_endproc
 742              	.LFE111:
 744              		.text
 745              	.Letext0:
 746              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 747              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 748              		.file 5 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 749              		.file 6 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
ARM GAS  /tmp/cc29Xthf.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_sha1.c
     /tmp/cc29Xthf.s:21     .text.HASH_SHA1:00000000 $t
     /tmp/cc29Xthf.s:27     .text.HASH_SHA1:00000000 HASH_SHA1
     /tmp/cc29Xthf.s:302    .text.HMAC_SHA1:00000000 $t
     /tmp/cc29Xthf.s:308    .text.HMAC_SHA1:00000000 HMAC_SHA1
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4.stm32f4xx.h.54.f84a67a8e71ba9719846fdff1868826c
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.2eefb68b261e70563a8ac654e712169f
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_conf.h.3.bc52e76ab6b5c9037500dbf5bb8f9be4
                           .group:00000000 wm4.misc.h.86.a3996e7f17199502fad3c7f62e5cdb3f
                           .group:00000000 wm4.stm32f4xx_adc.h.31.d96d805acd0f0c0392ec4633757dead3
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_cryp.h.31.94bbbb19b99df10306f31e78c333a77b
                           .group:00000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_usart.h.31.f8d29b14aa4d39de5495adcc92749d3c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stm32f4xx_hash.h.95.0ca7e03a3cda6499000de1ba9e3da660

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
