ARM GAS  /tmp/cc9XkHe1.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/src/main.c"
  20              		.section	.text.NVIC_SystemReset,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NVIC_SystemReset:
  27              	.LFB105:
  28              		.file 2 "../Shared/Libraries/CMSIS/Include/core_cm4.h"
   1:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @version  V2.10
   5:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @date     19. July 2011
   6:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *
   7:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @note
   8:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *
  10:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @par
  11:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *
  15:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * @par
  16:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *
  22:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  23:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  24:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
  26:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  27:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  28:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  extern "C" {
  29:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
  30:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 2


  31:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  34:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  35:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \mainpage CMSIS Cortex-M4
  36:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  37:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   This documentation describes the CMSIS Cortex-M Core Peripheral Access Layer.
  38:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   It consists of:
  39:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  40:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      - Cortex-M Core Register Definitions
  41:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      - Cortex-M functions
  42:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      - Cortex-M instructions
  43:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      - Cortex-M SIMD instructions
  44:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  45:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   The CMSIS Cortex-M4 Core Peripheral Access Layer contains C and assembly functions that ease
  46:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   access to the Cortex-M Core
  47:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
  48:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  49:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_MISRA_Exceptions  CMSIS MISRA-C:2004 Compliance Exceptions
  50:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   CMSIS violates following MISRA-C2004 Rules:
  51:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   
  52:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 8.5, object/function definition in header file.<br>
  53:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  54:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  55:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Required Rule 18.4, declaration of union type or object of union type: '{.
  56:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    
  58:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - Violates MISRA 2004 Advisory Rule 19.7, Function-like macro defined.<br>
  59:../Shared/Libraries/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  60:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  61:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
  62:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  63:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  64:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  65:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  66:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  67:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_definitions CMSIS Core Definitions
  68:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   This file defines all structures and symbols for CMSIS core:
  69:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - CMSIS version number
  70:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - Cortex-M core
  71:../Shared/Libraries/CMSIS/Include/core_cm4.h ****    - Cortex-M core Revision Number
  72:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
  73:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
  74:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  75:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  76:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  77:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  78:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | __CM4_CMSIS_VERSION_SUB) /*!<
  79:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  80:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                                       /*!<
  81:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  82:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  83:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  84:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  85:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  86:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  87:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
ARM GAS  /tmp/cc9XkHe1.s 			page 3


  88:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  89:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  90:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  91:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  92:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  93:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  94:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  95:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  96:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  97:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  98:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
  99:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 100:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 101:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*!< __FPU_USED to be checked prior to making use of FPU specific registers and functions */
 102:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 103:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 104:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 105:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 106:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #else
 107:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 108:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 109:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #endif
 110:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #else
 111:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 112:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 113:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 114:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 115:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 116:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 118:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #else
 119:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 121:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #endif
 122:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #else
 123:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 124:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 125:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 126:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 127:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 130:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #else
 131:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:../Shared/Libraries/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 133:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #endif
 134:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #else
 135:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 136:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 137:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 138:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 139:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 140:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 141:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 142:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 143:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /*!< standard types definitions                      */
 144:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /*!< Core Instruction Access                         */
ARM GAS  /tmp/cc9XkHe1.s 			page 4


 145:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /*!< Core Function Access                            */
 146:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #include <core_cm4_simd.h>               /*!< Compiler specific SIMD Intrinsics               */
 147:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 148:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 149:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 150:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 151:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 152:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 153:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 154:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 155:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 156:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 157:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 158:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 159:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 160:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 161:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 162:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 163:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 164:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 165:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 166:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 167:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 168:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 169:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 170:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 171:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 172:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 173:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 174:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 175:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 176:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 177:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 178:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 179:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 180:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #endif
 181:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 182:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 183:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 184:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 185:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< defines 'read only' permissions                 */
 186:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #else
 187:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< defines 'read only' permissions                 */
 188:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 189:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
 190:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
 191:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 192:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_definitions */
 193:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 194:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 195:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 196:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 197:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 198:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 199:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register CMSIS Core Register
 200:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Core Register contain:
 201:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core Register
ARM GAS  /tmp/cc9XkHe1.s 			page 5


 202:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 203:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 204:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 205:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 206:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 207:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 208:../Shared/Libraries/CMSIS/Include/core_cm4.h **** */
 209:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 210:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 211:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CORE CMSIS Core
 212:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Core Registers
 213:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 214:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 215:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 216:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 217:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 218:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef union
 219:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 220:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   struct
 221:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   {
 222:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 223:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 224:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #else
 225:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 226:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 227:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 228:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 229:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 230:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 231:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 232:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 233:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 234:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 235:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 236:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } APSR_Type;
 237:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 238:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 239:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 240:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 241:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef union
 242:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 243:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   struct
 244:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   {
 245:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 246:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 247:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 248:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 249:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 250:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 251:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 252:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 253:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 254:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef union
 255:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 256:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   struct
 257:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   {
 258:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
ARM GAS  /tmp/cc9XkHe1.s 			page 6


 259:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__CORTEX_M != 0x04)
 260:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 261:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #else
 262:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 263:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 264:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 265:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 266:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 267:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 268:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 269:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 270:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 271:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 272:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 273:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 274:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 275:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 276:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 277:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 278:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 279:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 280:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef union
 281:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 282:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   struct
 283:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   {
 284:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 285:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 286:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 287:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 288:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 289:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 290:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 291:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 292:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 293:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 294:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 295:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 296:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 297:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M NVIC Registers
 298:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 299:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 300:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 301:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 302:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 303:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 304:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 305:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 306:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 307:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 308:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 309:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 310:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 311:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 312:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 313:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 314:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 315:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
ARM GAS  /tmp/cc9XkHe1.s 			page 7


 316:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 317:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 318:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 319:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 320:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 321:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 322:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 323:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 324:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 325:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 326:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 327:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 328:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB CMSIS SCB
 329:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Control Block Registers
 330:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 331:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 332:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 333:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 334:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 335:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 336:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 337:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 338:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 339:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 340:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 341:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 342:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 343:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 344:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 345:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 346:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 347:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 348:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 349:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 350:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 351:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 352:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 353:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 354:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 355:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 356:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 357:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 358:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } SCB_Type;
 359:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 360:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 361:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 362:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 363:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 364:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 365:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 366:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 367:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 368:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 369:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 370:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 371:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 372:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 8


 373:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 374:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 375:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 376:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 377:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 378:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 379:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 380:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 381:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 382:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 383:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 384:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 385:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 386:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 387:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 388:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 389:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 390:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 391:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 392:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 393:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 394:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 395:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 396:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 397:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 398:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 399:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 400:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 401:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 402:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 403:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 404:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 405:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 406:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 407:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 408:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 409:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 410:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 411:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 412:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 413:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 414:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 415:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 416:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 417:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 418:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 419:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 420:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 421:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 422:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 423:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 424:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 425:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 426:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 427:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 428:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 429:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 9


 430:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 431:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 432:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 433:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 434:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 435:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 436:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 437:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 438:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 439:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 440:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 441:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 442:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 443:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 444:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 445:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 446:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 447:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 448:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 449:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 450:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 451:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 452:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 453:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 454:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 455:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 456:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 457:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 458:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 459:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 460:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 461:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 462:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 463:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 464:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 465:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 466:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 467:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 468:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 469:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 470:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 471:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 472:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 473:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 474:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 475:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 476:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 477:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 478:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 479:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 480:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 481:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 482:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 483:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 484:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 485:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 486:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 10


 487:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 488:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 489:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 490:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 491:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 492:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 493:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 494:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 495:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 496:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 497:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 498:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 499:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 500:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 501:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 502:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 503:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 504:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 505:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 506:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 507:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 508:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 509:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 510:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 511:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 512:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 513:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 514:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 515:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 516:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 517:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 518:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 519:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 520:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 521:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 522:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 523:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 524:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 525:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 526:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 527:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 528:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 529:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 530:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 531:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 532:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 533:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 534:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 535:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 536:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 537:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 538:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 539:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 540:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 541:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 542:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 543:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 11


 544:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 545:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB CMSIS System Control and ID Register not in the SCB
 546:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Control and ID Register not in the SCB
 547:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 548:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 549:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 550:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 551:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 552:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 553:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 554:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 555:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 556:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 557:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 558:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 559:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 560:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 561:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 562:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 563:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 564:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 565:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 566:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 567:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 568:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 569:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 570:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 571:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 572:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 573:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 574:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 575:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 576:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 577:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 578:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 579:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 580:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 581:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 582:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 583:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 584:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M System Timer Registers
 585:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 586:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 587:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 588:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 589:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 590:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 591:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 592:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 593:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 594:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 595:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 596:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 597:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 598:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 599:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 600:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  /tmp/cc9XkHe1.s 			page 12


 601:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 602:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 603:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 604:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 605:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 606:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 607:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 608:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 609:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 610:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 611:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 612:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 613:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 614:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 615:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 616:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 617:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 618:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 619:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 620:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 621:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 622:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 623:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 624:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 625:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 626:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 627:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 629:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 630:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 631:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 632:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 633:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM CMSIS ITM
 634:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 635:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 636:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 637:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 638:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 639:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 640:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 641:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 642:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __O  union
 643:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   {
 644:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 645:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 646:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 647:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 648:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 649:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 650:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 651:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 652:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 653:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 654:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } ITM_Type;
 655:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 656:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 657:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
ARM GAS  /tmp/cc9XkHe1.s 			page 13


 658:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 659:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 660:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 661:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 662:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 663:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 664:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 665:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 666:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 667:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 668:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 669:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 670:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 671:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 672:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 673:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 674:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 675:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 676:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 677:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 678:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 679:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 680:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 681:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 682:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 683:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 684:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 685:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 686:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 687:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 688:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 689:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 690:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 691:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 692:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 693:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU CMSIS MPU
 694:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 695:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 696:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 697:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 698:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 699:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 700:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 701:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 702:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 703:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 704:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 705:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 706:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 707:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 708:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 709:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 710:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 711:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 712:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 713:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } MPU_Type;
 714:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 14


 715:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
 716:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 717:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 718:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 719:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 720:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 721:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 722:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 723:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 724:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 725:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
 726:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 727:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 728:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 729:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 730:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 731:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 732:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 733:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 734:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 735:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
 736:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 737:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 738:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 739:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
 740:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 741:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 742:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 743:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 744:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 745:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 746:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 747:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 748:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 749:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
 750:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
 751:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 752:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 753:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 754:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 755:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 756:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 757:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 758:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 759:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
 760:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
 761:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 762:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
 763:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 764:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 765:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 766:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
 767:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 768:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU CMSIS FPU
 769:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Floating Point Unit (FPU)
 770:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 771:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/cc9XkHe1.s 			page 15


 772:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 773:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
 774:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 775:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 776:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 777:../Shared/Libraries/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 778:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
 779:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
 780:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
 781:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
 782:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
 783:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } FPU_Type;
 784:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 785:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
 786:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
 787:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
 788:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 789:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
 790:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
 791:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 792:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
 793:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
 794:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 795:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
 796:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
 797:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 798:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
 799:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
 800:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 801:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
 802:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
 803:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 804:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
 805:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
 806:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 807:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
 808:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
 809:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 810:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
 811:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
 812:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 813:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
 814:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
 815:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
 816:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 817:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
 818:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
 819:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
 820:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 821:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
 822:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
 823:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 824:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
 825:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
 826:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 827:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
 828:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
ARM GAS  /tmp/cc9XkHe1.s 			page 16


 829:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 830:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
 831:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
 832:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
 833:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 834:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
 835:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
 836:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 837:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
 838:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
 839:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 840:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
 841:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
 842:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 843:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
 844:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
 845:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 846:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
 847:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
 848:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 849:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
 850:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
 851:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 852:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
 853:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
 854:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 855:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
 856:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
 857:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
 858:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 859:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
 860:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
 861:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 862:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
 863:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
 864:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 865:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
 866:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
 867:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 868:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
 869:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 870:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 871:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 872:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 873:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 874:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Type definitions for the Cortex-M Core Debug Registers
 875:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 876:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 877:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 878:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 879:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 880:../Shared/Libraries/CMSIS/Include/core_cm4.h **** typedef struct
 881:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
 882:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 883:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 884:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 885:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
ARM GAS  /tmp/cc9XkHe1.s 			page 17


 886:../Shared/Libraries/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
 887:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 888:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
 889:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 890:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 891:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 892:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 893:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 894:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 895:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 896:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 897:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 898:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 899:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 900:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 901:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 902:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 903:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 904:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 905:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 906:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 907:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 908:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 909:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 910:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 911:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 912:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 913:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 914:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 915:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 916:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 917:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 918:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 919:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 920:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 921:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 922:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 923:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 924:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 925:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
 926:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 927:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 928:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 929:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 930:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 931:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 932:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
 933:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 934:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 935:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 936:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 937:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 938:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 939:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 940:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 941:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 942:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
ARM GAS  /tmp/cc9XkHe1.s 			page 18


 943:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 944:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 945:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 946:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 947:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 948:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 949:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 950:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 951:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 952:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 953:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 954:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 955:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 956:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 957:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 958:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 959:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 960:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 961:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 962:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 963:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 964:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 965:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 966:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 967:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 968:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 969:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 970:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 971:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 972:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
 973:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 974:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 975:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 976:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
 977:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
 978:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 979:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
 980:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 981:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 982:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 983:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 984:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 985:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 986:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 987:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
 988:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 989:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 990:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 991:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
 992:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 993:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 994:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
 995:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 996:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
 997:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
 998:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
 999:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
ARM GAS  /tmp/cc9XkHe1.s 			page 19


1000:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1001:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1002:../Shared/Libraries/CMSIS/Include/core_cm4.h **** #endif
1003:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1004:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*@} */
1005:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1006:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1007:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1008:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1009:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1010:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1011:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
1012:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1013:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1014:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1015:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1016:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1017:../Shared/Libraries/CMSIS/Include/core_cm4.h **** */
1018:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1019:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1020:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1021:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1022:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1023:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
1024:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   @{
1025:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1026:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1027:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1028:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1029:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   This function sets the priority grouping field using the required unlock sequence.
1030:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1031:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1032:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1033:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1034:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1035:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field
1036:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1037:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1038:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1039:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1040:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1041:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1042:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1043:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1044:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                 |
1045:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1046:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1047:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1048:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1049:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1050:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1051:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1052:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1053:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
1054:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1055:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1056:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field
ARM GAS  /tmp/cc9XkHe1.s 			page 20


1057:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1058:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1059:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1060:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1061:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1062:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1063:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1064:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1065:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1066:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function enables a device specific interrupt in the NVIC interrupt controller.
1067:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1068:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1069:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to enable
1070:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1071:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1072:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1073:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1074:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1075:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1076:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1077:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1078:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1079:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1080:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function disables a device specific interrupt in the NVIC interrupt controller.
1081:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1082:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1083:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to disable
1084:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1085:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1086:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1087:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1088:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1089:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1090:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1091:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1092:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1093:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function reads the pending register in the NVIC and returns the pending bit
1094:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     for the specified interrupt.
1095:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1096:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get pending
1097:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not pending
1098:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is pending
1099:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1100:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1101:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1102:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1103:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1104:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1105:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1106:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1107:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1108:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function sets the pending bit for the specified interrupt.
1109:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1110:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1111:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set pending
1112:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1113:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cc9XkHe1.s 			page 21


1114:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1115:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1116:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1117:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1118:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1119:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1120:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1121:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function clears the pending bit for the specified interrupt.
1122:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The interrupt number cannot be a negative value.
1123:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1124:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
1125:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1126:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1127:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1128:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1129:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1130:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1131:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1132:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Get Active Interrupt
1133:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1134:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function reads the active register in NVIC and returns the active bit.
1135:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get active
1136:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not active
1137:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is active
1138:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1139:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1140:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1141:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1142:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1143:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1144:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1145:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1146:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1147:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function sets the priority for the specified interrupt. The interrupt
1148:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1149:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1150:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1151:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     Note: The priority cannot be set for every core interrupt.
1152:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1153:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set priority
1154:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]  priority  Priority to set
1155:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1156:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1157:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1158:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1159:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1160:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   else {
1161:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1162:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1163:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1164:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1165:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1166:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1167:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function reads the priority for the specified interrupt. The interrupt
1168:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1169:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1170:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 22


1171:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The returned priority value is automatically aligned to the implemented
1172:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     priority bits of the microcontroller.
1173:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1174:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]   IRQn  Number of the interrupt for get priority
1175:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return             Interrupt Priority
1176:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1177:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1178:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1179:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1180:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   if(IRQn < 0) {
1181:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1182:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   else {
1183:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1184:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1185:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1186:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1187:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Encode Priority
1188:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1189:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function encodes the priority for an interrupt with the given priority group,
1190:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     preemptive priority value and sub priority value.
1191:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1192:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1193:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1194:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The returned priority value can be used for NVIC_SetPriority(...) function
1195:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1196:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1197:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0)
1198:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]       SubPriority  Sub priority value (starting from 0)
1199:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \return                        Encoded priority for the interrupt
1200:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1201:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1202:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1203:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1204:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1205:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1206:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1207:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1208:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1209:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1210:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   return (
1211:../Shared/Libraries/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1212:../Shared/Libraries/CMSIS/Include/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1213:../Shared/Libraries/CMSIS/Include/core_cm4.h ****          );
1214:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1215:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1216:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1217:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  Decode Priority
1218:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1219:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function decodes an interrupt priority value with the given priority group to
1220:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     preemptive priority value and sub priority value.
1221:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1222:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1223:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1224:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     The priority value can be retrieved with NVIC_GetPriority(...) function
1225:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1226:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]         Priority   Priority value
1227:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
ARM GAS  /tmp/cc9XkHe1.s 			page 23


1228:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0)
1229:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     \param [out]     pSubPriority  Sub priority value (starting from 0)
1230:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1231:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1232:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
1233:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1234:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1235:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1236:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1237:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1238:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1239:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1240:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1241:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1242:../Shared/Libraries/CMSIS/Include/core_cm4.h **** }
1243:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1244:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1245:../Shared/Libraries/CMSIS/Include/core_cm4.h **** /** \brief  System Reset
1246:../Shared/Libraries/CMSIS/Include/core_cm4.h **** 
1247:../Shared/Libraries/CMSIS/Include/core_cm4.h ****     This function initiate a system reset request to reset the MCU.
1248:../Shared/Libraries/CMSIS/Include/core_cm4.h ****  */
1249:../Shared/Libraries/CMSIS/Include/core_cm4.h **** static __INLINE void NVIC_SystemReset(void)
1250:../Shared/Libraries/CMSIS/Include/core_cm4.h **** {
  29              		.loc 2 1250 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  41              	.LBB6:
  42              	.LBB7:
  43              		.file 3 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h"
   1:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
   7:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @note
   8:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  10:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  11:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  15:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  16:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
ARM GAS  /tmp/cc9XkHe1.s 			page 24


  20:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  22:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  24:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  27:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  28:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   @{
  32:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** */
  33:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  34:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  37:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif
  40:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  41:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  42:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  44:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  46:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  48:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  49:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  51:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  54:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  56:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  57:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  59:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  62:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  64:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  65:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  67:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  69:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  71:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  72:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  74:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
ARM GAS  /tmp/cc9XkHe1.s 			page 25


  77:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  78:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  80:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  81:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  83:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  86:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  88:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  89:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  91:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  94:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  96:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  97:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  99:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 101:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 104:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 106:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 107:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 109:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 111:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 114:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 116:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 119:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 120:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 121:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 123:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 125:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 128:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 130:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 133:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 26


 134:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 135:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 137:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 139:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 141:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 144:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 146:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 147:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 149:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 151:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 154:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 156:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 157:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 159:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 161:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 164:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 166:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 167:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 169:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 171:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 174:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 176:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 177:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 179:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 181:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 186:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 188:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 189:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 27


 191:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 193:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 198:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 200:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 201:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 203:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 205:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 210:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 212:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 213:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 215:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 217:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 218:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 220:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 221:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 223:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 225:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 229:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 231:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 232:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 234:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 236:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 240:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 242:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 243:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 245:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 247:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
ARM GAS  /tmp/cc9XkHe1.s 			page 28


 248:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 250:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 252:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 254:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 255:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 256:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 259:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 261:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 262:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 265:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 267:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 269:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 271:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 273:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 274:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 275:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 277:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 280:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 282:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 284:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 285:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 286:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 288:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 291:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 293:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 295:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 296:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 297:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 299:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 301:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 303:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
ARM GAS  /tmp/cc9XkHe1.s 			page 29


 305:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 306:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 307:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 309:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 313:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 315:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 317:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 318:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 319:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 321:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 324:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 326:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
  44              		.loc 3 326 3
  45              		.syntax unified
  46              	@ 326 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
  47 0004 BFF34F8F 		dsb
  48              	@ 0 "" 2
 327:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
  49              		.loc 3 327 1
  50              		.thumb
  51              		.syntax unified
  52 0008 00BF     		nop
  53              	.LBE7:
  54              	.LBE6:
1251:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1252:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                                                                   buffered write are completed befo
1253:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1254:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  55              		.loc 2 1254 22
  56 000a 064B     		ldr	r3, .L3
  57 000c DB68     		ldr	r3, [r3, #12]
  58              		.loc 2 1254 30
  59 000e 03F4E062 		and	r2, r3, #1792
1253:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  60              		.loc 2 1253 6
  61 0012 0449     		ldr	r1, .L3
  62              		.loc 2 1254 56
  63 0014 044B     		ldr	r3, .L3+4
  64 0016 1343     		orrs	r3, r3, r2
1253:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  65              		.loc 2 1253 15
  66 0018 CB60     		str	r3, [r1, #12]
  67              	.LBB8:
  68              	.LBB9:
 326:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
  69              		.loc 3 326 3
  70              		.syntax unified
ARM GAS  /tmp/cc9XkHe1.s 			page 30


  71              	@ 326 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
  72 001a BFF34F8F 		dsb
  73              	@ 0 "" 2
  74              		.loc 3 327 1
  75              		.thumb
  76              		.syntax unified
  77 001e 00BF     		nop
  78              	.L2:
  79              	.LBE9:
  80              	.LBE8:
1255:../Shared/Libraries/CMSIS/Include/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1256:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1257:../Shared/Libraries/CMSIS/Include/core_cm4.h ****   while(1);                                                    /* wait until reset */
  81              		.loc 2 1257 8
  82 0020 00BF     		nop
  83 0022 FDE7     		b	.L2
  84              	.L4:
  85              		.align	2
  86              	.L3:
  87 0024 00ED00E0 		.word	-536810240
  88 0028 0400FA05 		.word	100270084
  89              		.cfi_endproc
  90              	.LFE105:
  92              		.global	SystemCoreClock
  93              		.section	.data.SystemCoreClock,"aw"
  94              		.align	2
  97              	SystemCoreClock:
  98 0000 007A030A 		.word	168000000
  99              		.section	.bss.state,"aw",%nobits
 102              	state:
 103 0000 00       		.space	1
 104              		.section	.bss.fwLength,"aw",%nobits
 105              		.align	2
 108              	fwLength:
 109 0000 00000000 		.space	4
 110              		.section	.bss.bytesWritten,"aw",%nobits
 111              		.align	2
 114              	bytesWritten:
 115 0000 00000000 		.space	4
 116              		.section	.bss.syncSequence,"aw",%nobits
 117              		.align	2
 120              	syncSequence:
 121 0000 00000000 		.space	4
 122              		.section	.bss.timer,"aw",%nobits
 123              		.align	2
 126              	timer:
 127 0000 00000000 		.space	12
 127      00000000 
 127      00000000 
 128              		.section	.bss.tempPacket,"aw",%nobits
 129              		.align	2
 132              	tempPacket:
 133 0000 00000000 		.space	18
 133      00000000 
 133      00000000 
 133      00000000 
 133      0000
ARM GAS  /tmp/cc9XkHe1.s 			page 31


 134              		.section	.rodata.secretKey,"a"
 135              		.align	2
 138              	secretKey:
 139 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 139      04050607 
 139      08090A0B 
 139      0C
 140 000d 0D0E0F   		.ascii	"\015\016\017"
 141              		.global	dataBuffer
 142              		.section	.bss.dataBuffer,"aw",%nobits
 143              		.align	2
 146              	dataBuffer:
 147 0000 00000000 		.space	128
 147      00000000 
 147      00000000 
 147      00000000 
 147      00000000 
 148              		.global	ringBuffer
 149              		.section	.bss.ringBuffer,"aw",%nobits
 150              		.align	2
 153              	ringBuffer:
 154 0000 00000000 		.space	16
 154      00000000 
 154      00000000 
 154      00000000 
 155              		.section	.text.main,"ax",%progbits
 156              		.align	1
 157              		.global	main
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	main:
 163              	.LFB113:
   1:Core/src/main.c **** #include "main.h"
   2:Core/src/main.c **** #include "aes.h"
   3:Core/src/main.c **** #include "bootloaderflash.h"
   4:Core/src/main.c **** #include "comms.h"
   5:Core/src/main.c **** #include "crc.h"
   6:Core/src/main.c **** #include "delay.h"
   7:Core/src/main.c **** #include "fw_info.h"
   8:Core/src/main.c **** #include "gpio.h"
   9:Core/src/main.c **** #include "rcc.h"
  10:Core/src/main.c **** #include "ring_buffer.h"
  11:Core/src/main.c **** #include "timer.h"
  12:Core/src/main.c **** #include "usart.h"
  13:Core/src/main.c **** 
  14:Core/src/main.c **** #define SYNC_SEQ_0 (0xC4)
  15:Core/src/main.c **** #define SYNC_SEQ_1 (0x55)
  16:Core/src/main.c **** #define SYNC_SEQ_2 (0x7E)
  17:Core/src/main.c **** #define SYNC_SEQ_3 (0x10)
  18:Core/src/main.c **** 
  19:Core/src/main.c **** #define DEFAULT_TIMEOUT (500000)
  20:Core/src/main.c **** 
  21:Core/src/main.c **** uint32_t SystemCoreClock = 168000000;
  22:Core/src/main.c **** 
  23:Core/src/main.c **** typedef enum bootloaderState_t
  24:Core/src/main.c **** {
ARM GAS  /tmp/cc9XkHe1.s 			page 32


  25:Core/src/main.c ****     bootloaderSyncState,
  26:Core/src/main.c ****     bootloaderWaitUpdareReqState,
  27:Core/src/main.c ****     bootloaderDeviceIDReqState,
  28:Core/src/main.c ****     bootloaderDeviceIDResState,
  29:Core/src/main.c ****     bootloaderFWLengthReqState,
  30:Core/src/main.c ****     bootloaderFWLengthResState,
  31:Core/src/main.c ****     bootloaderEraseAppState,
  32:Core/src/main.c ****     bootloaderReceiveFWState,
  33:Core/src/main.c ****     bootloaderDoneState,
  34:Core/src/main.c **** } bootloaderState_t;
  35:Core/src/main.c **** 
  36:Core/src/main.c **** static bootloaderState_t state = bootloaderSyncState;
  37:Core/src/main.c **** static uint32_t fwLength = 0;
  38:Core/src/main.c **** static uint32_t bytesWritten = 0;
  39:Core/src/main.c **** static uint8_t syncSequence[4] = {0};
  40:Core/src/main.c **** 
  41:Core/src/main.c **** static simpleTimer_t timer;
  42:Core/src/main.c **** static commsPacket_t tempPacket;
  43:Core/src/main.c **** 
  44:Core/src/main.c **** static const uint8_t secretKey[AES_BLOCK_SIZE] = {
  45:Core/src/main.c ****     0x00,
  46:Core/src/main.c ****     0x01,
  47:Core/src/main.c ****     0x02,
  48:Core/src/main.c ****     0x03,
  49:Core/src/main.c ****     0x04,
  50:Core/src/main.c ****     0x05,
  51:Core/src/main.c ****     0x06,
  52:Core/src/main.c ****     0x07,
  53:Core/src/main.c ****     0x08,
  54:Core/src/main.c ****     0x09,
  55:Core/src/main.c ****     0x0A,
  56:Core/src/main.c ****     0x0B,
  57:Core/src/main.c ****     0x0C,
  58:Core/src/main.c ****     0x0D,
  59:Core/src/main.c ****     0x0E,
  60:Core/src/main.c ****     0x0F,
  61:Core/src/main.c **** };
  62:Core/src/main.c **** 
  63:Core/src/main.c **** static void Jump_Application(void);
  64:Core/src/main.c **** static void AES_CBC_MAC_Step(
  65:Core/src/main.c ****     AES_Block_t stateAES, AES_Block_t previousStateAES, const AES_Block_t* keySchedule);
  66:Core/src/main.c **** 
  67:Core/src/main.c **** static bool Validate_Firmware_Image(void);
  68:Core/src/main.c **** 
  69:Core/src/main.c **** /*Global variables*/
  70:Core/src/main.c **** uint8_t dataBuffer[RING_BUFFER_SIZE] = {0U};
  71:Core/src/main.c **** ringBuffer_t ringBuffer = {0U};
  72:Core/src/main.c **** 
  73:Core/src/main.c **** static void Bootloader_Fail(void);
  74:Core/src/main.c **** static void Check_Timeout(void);
  75:Core/src/main.c **** static bool Device_ID_Packet(const commsPacket_t* packet);
  76:Core/src/main.c **** static bool FW_Length_Packet(const commsPacket_t* packet);
  77:Core/src/main.c **** 
  78:Core/src/main.c **** int main(void)
  79:Core/src/main.c **** {
 164              		.loc 1 79 1
 165              		.cfi_startproc
ARM GAS  /tmp/cc9XkHe1.s 			page 33


 166              		@ args = 0, pretend = 0, frame = 8
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI2:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 82B0     		sub	sp, sp, #8
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 16
 176 0004 00AF     		add	r7, sp, #0
 177              	.LCFI4:
 178              		.cfi_def_cfa_register 7
  80:Core/src/main.c ****     SysTick_Setup();
 179              		.loc 1 80 5
 180 0006 FFF7FEFF 		bl	SysTick_Setup
  81:Core/src/main.c ****     RCC_Setup();
 181              		.loc 1 81 5
 182 000a FFF7FEFF 		bl	RCC_Setup
  82:Core/src/main.c ****     GPIO_Setup();
 183              		.loc 1 82 5
 184 000e FFF7FEFF 		bl	GPIO_Setup
  83:Core/src/main.c ****     VirtualCOMPort_Setup();
 185              		.loc 1 83 5
 186 0012 FFF7FEFF 		bl	VirtualCOMPort_Setup
  84:Core/src/main.c ****     Comms_Setup();
 187              		.loc 1 84 5
 188 0016 FFF7FEFF 		bl	Comms_Setup
  85:Core/src/main.c **** 
  86:Core/src/main.c ****     Ring_Buffer_Setup(&ringBuffer, dataBuffer, RING_BUFFER_SIZE);
 189              		.loc 1 86 5
 190 001a 8022     		movs	r2, #128
 191 001c AE49     		ldr	r1, .L45
 192 001e AF48     		ldr	r0, .L45+4
 193 0020 FFF7FEFF 		bl	Ring_Buffer_Setup
  87:Core/src/main.c **** 
  88:Core/src/main.c ****     Simple_Timer_Setup(&timer, DEFAULT_TIMEOUT, false);
 194              		.loc 1 88 5
 195 0024 0022     		movs	r2, #0
 196 0026 AE49     		ldr	r1, .L45+8
 197 0028 AE48     		ldr	r0, .L45+12
 198 002a FFF7FEFF 		bl	Simple_Timer_Setup
  89:Core/src/main.c **** 
  90:Core/src/main.c ****     while (state != bootloaderDoneState)
 199              		.loc 1 90 11
 200 002e 77E1     		b	.L6
 201              	.L41:
  91:Core/src/main.c ****     {
  92:Core/src/main.c ****         if (state == bootloaderSyncState)
 202              		.loc 1 92 19
 203 0030 AD4B     		ldr	r3, .L45+16
 204 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205              		.loc 1 92 12
 206 0034 002B     		cmp	r3, #0
 207 0036 63D1     		bne	.L7
  93:Core/src/main.c ****         {
  94:Core/src/main.c ****             if (USART_Data_Available(USART3))
ARM GAS  /tmp/cc9XkHe1.s 			page 34


 208              		.loc 1 94 17
 209 0038 AC48     		ldr	r0, .L45+20
 210 003a FFF7FEFF 		bl	USART_Data_Available
 211 003e 0346     		mov	r3, r0
 212              		.loc 1 94 16 discriminator 1
 213 0040 002B     		cmp	r3, #0
 214 0042 5AD0     		beq	.L8
 215              	.LBB10:
  95:Core/src/main.c ****             {
  96:Core/src/main.c ****                 syncSequence[0] = syncSequence[1];
 216              		.loc 1 96 47
 217 0044 AA4B     		ldr	r3, .L45+24
 218 0046 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 219              		.loc 1 96 33
 220 0048 A94B     		ldr	r3, .L45+24
 221 004a 1A70     		strb	r2, [r3]
  97:Core/src/main.c ****                 syncSequence[1] = syncSequence[2];
 222              		.loc 1 97 47
 223 004c A84B     		ldr	r3, .L45+24
 224 004e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 225              		.loc 1 97 33
 226 0050 A74B     		ldr	r3, .L45+24
 227 0052 5A70     		strb	r2, [r3, #1]
  98:Core/src/main.c ****                 syncSequence[2] = syncSequence[3];
 228              		.loc 1 98 47
 229 0054 A64B     		ldr	r3, .L45+24
 230 0056 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 231              		.loc 1 98 33
 232 0058 A54B     		ldr	r3, .L45+24
 233 005a 9A70     		strb	r2, [r3, #2]
  99:Core/src/main.c ****                 syncSequence[3] = USART_Read_Byte(USART3);
 234              		.loc 1 99 35
 235 005c A348     		ldr	r0, .L45+20
 236 005e FFF7FEFF 		bl	USART_Read_Byte
 237 0062 0346     		mov	r3, r0
 238 0064 1A46     		mov	r2, r3
 239              		.loc 1 99 33 discriminator 1
 240 0066 A24B     		ldr	r3, .L45+24
 241 0068 DA70     		strb	r2, [r3, #3]
 100:Core/src/main.c **** 
 101:Core/src/main.c ****                 bool isMatch = syncSequence[0] == SYNC_SEQ_0;
 242              		.loc 1 101 44
 243 006a A14B     		ldr	r3, .L45+24
 244 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245              		.loc 1 101 22
 246 006e C42B     		cmp	r3, #196
 247 0070 0CBF     		ite	eq
 248 0072 0123     		moveq	r3, #1
 249 0074 0023     		movne	r3, #0
 250 0076 BB71     		strb	r3, [r7, #6]
 102:Core/src/main.c ****                 isMatch = isMatch && (syncSequence[1] == SYNC_SEQ_1);
 251              		.loc 1 102 35
 252 0078 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 253 007a 002B     		cmp	r3, #0
 254 007c 05D0     		beq	.L9
 255              		.loc 1 102 51 discriminator 1
 256 007e 9C4B     		ldr	r3, .L45+24
ARM GAS  /tmp/cc9XkHe1.s 			page 35


 257 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 258              		.loc 1 102 35 discriminator 1
 259 0082 552B     		cmp	r3, #85
 260 0084 01D1     		bne	.L9
 261              		.loc 1 102 35 is_stmt 0 discriminator 3
 262 0086 0123     		movs	r3, #1
 263              		.loc 1 102 35
 264 0088 00E0     		b	.L10
 265              	.L9:
 266              		.loc 1 102 35 discriminator 4
 267 008a 0023     		movs	r3, #0
 268              	.L10:
 269              		.loc 1 102 25 is_stmt 1 discriminator 6
 270 008c BB71     		strb	r3, [r7, #6]
 271 008e BB79     		ldrb	r3, [r7, #6]
 272 0090 03F00103 		and	r3, r3, #1
 273 0094 BB71     		strb	r3, [r7, #6]
 103:Core/src/main.c ****                 isMatch = isMatch && (syncSequence[2] == SYNC_SEQ_2);
 274              		.loc 1 103 35
 275 0096 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 276 0098 002B     		cmp	r3, #0
 277 009a 05D0     		beq	.L11
 278              		.loc 1 103 51 discriminator 1
 279 009c 944B     		ldr	r3, .L45+24
 280 009e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 281              		.loc 1 103 35 discriminator 1
 282 00a0 7E2B     		cmp	r3, #126
 283 00a2 01D1     		bne	.L11
 284              		.loc 1 103 35 is_stmt 0 discriminator 3
 285 00a4 0123     		movs	r3, #1
 286              		.loc 1 103 35
 287 00a6 00E0     		b	.L12
 288              	.L11:
 289              		.loc 1 103 35 discriminator 4
 290 00a8 0023     		movs	r3, #0
 291              	.L12:
 292              		.loc 1 103 25 is_stmt 1 discriminator 6
 293 00aa BB71     		strb	r3, [r7, #6]
 294 00ac BB79     		ldrb	r3, [r7, #6]
 295 00ae 03F00103 		and	r3, r3, #1
 296 00b2 BB71     		strb	r3, [r7, #6]
 104:Core/src/main.c ****                 isMatch = isMatch && (syncSequence[3] == SYNC_SEQ_3);
 297              		.loc 1 104 35
 298 00b4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 299 00b6 002B     		cmp	r3, #0
 300 00b8 05D0     		beq	.L13
 301              		.loc 1 104 51 discriminator 1
 302 00ba 8D4B     		ldr	r3, .L45+24
 303 00bc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 304              		.loc 1 104 35 discriminator 1
 305 00be 102B     		cmp	r3, #16
 306 00c0 01D1     		bne	.L13
 307              		.loc 1 104 35 is_stmt 0 discriminator 3
 308 00c2 0123     		movs	r3, #1
 309              		.loc 1 104 35
 310 00c4 00E0     		b	.L14
 311              	.L13:
ARM GAS  /tmp/cc9XkHe1.s 			page 36


 312              		.loc 1 104 35 discriminator 4
 313 00c6 0023     		movs	r3, #0
 314              	.L14:
 315              		.loc 1 104 25 is_stmt 1 discriminator 6
 316 00c8 BB71     		strb	r3, [r7, #6]
 317 00ca BB79     		ldrb	r3, [r7, #6]
 318 00cc 03F00103 		and	r3, r3, #1
 319 00d0 BB71     		strb	r3, [r7, #6]
 105:Core/src/main.c **** 
 106:Core/src/main.c ****                 if (isMatch)
 320              		.loc 1 106 20
 321 00d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 322 00d4 002B     		cmp	r3, #0
 323 00d6 0DD0     		beq	.L15
 107:Core/src/main.c ****                 {
 108:Core/src/main.c ****                     Comms_Create_Single_Byte_Packet(
 324              		.loc 1 108 21
 325 00d8 2021     		movs	r1, #32
 326 00da 8648     		ldr	r0, .L45+28
 327 00dc FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 109:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_SYNC_OBSERVED_DATA0);
 110:Core/src/main.c ****                     Comms_Write(&tempPacket);
 328              		.loc 1 110 21
 329 00e0 8448     		ldr	r0, .L45+28
 330 00e2 FFF7FEFF 		bl	Comms_Write
 111:Core/src/main.c ****                     Simple_Timer_Reset(&timer);
 331              		.loc 1 111 21
 332 00e6 7F48     		ldr	r0, .L45+12
 333 00e8 FFF7FEFF 		bl	Simple_Timer_Reset
 112:Core/src/main.c ****                     state = bootloaderWaitUpdareReqState;
 334              		.loc 1 112 27
 335 00ec 7E4B     		ldr	r3, .L45+16
 336 00ee 0122     		movs	r2, #1
 337 00f0 1A70     		strb	r2, [r3]
 338              	.LBE10:
 113:Core/src/main.c ****                 }
 114:Core/src/main.c ****                 else
 115:Core/src/main.c ****                 {
 116:Core/src/main.c ****                     Check_Timeout();
 117:Core/src/main.c ****                 }
 118:Core/src/main.c ****             }
 119:Core/src/main.c ****             else
 120:Core/src/main.c ****             {
 121:Core/src/main.c ****                 Check_Timeout();
 122:Core/src/main.c ****             }
 123:Core/src/main.c ****             continue;
 339              		.loc 1 123 13
 340 00f2 15E1     		b	.L6
 341              	.L15:
 342              	.LBB11:
 116:Core/src/main.c ****                 }
 343              		.loc 1 116 21
 344 00f4 FFF7FEFF 		bl	Check_Timeout
 345              	.LBE11:
 346              		.loc 1 123 13
 347 00f8 12E1     		b	.L6
 348              	.L8:
ARM GAS  /tmp/cc9XkHe1.s 			page 37


 121:Core/src/main.c ****             }
 349              		.loc 1 121 17
 350 00fa FFF7FEFF 		bl	Check_Timeout
 351              		.loc 1 123 13
 352 00fe 0FE1     		b	.L6
 353              	.L7:
 124:Core/src/main.c ****         }
 125:Core/src/main.c **** 
 126:Core/src/main.c ****         Comms_Update();
 354              		.loc 1 126 9
 355 0100 FFF7FEFF 		bl	Comms_Update
 127:Core/src/main.c **** 
 128:Core/src/main.c ****         switch (state)
 356              		.loc 1 128 9
 357 0104 784B     		ldr	r3, .L45+16
 358 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 359 0108 013B     		subs	r3, r3, #1
 360 010a 062B     		cmp	r3, #6
 361 010c 00F20581 		bhi	.L18
 362 0110 01A2     		adr	r2, .L20
 363 0112 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 364 0116 00BF     		.p2align 2
 365              	.L20:
 366 0118 35010000 		.word	.L26+1
 367 011c 7B010000 		.word	.L25+1
 368 0120 9F010000 		.word	.L24+1
 369 0124 DD010000 		.word	.L23+1
 370 0128 F9010000 		.word	.L22+1
 371 012c 57020000 		.word	.L21+1
 372 0130 77020000 		.word	.L19+1
 373              		.p2align 1
 374              	.L26:
 129:Core/src/main.c ****         {
 130:Core/src/main.c ****         case bootloaderWaitUpdareReqState:
 131:Core/src/main.c ****         {
 132:Core/src/main.c ****             if (Comms_Packets_Available())
 375              		.loc 1 132 17
 376 0134 FFF7FEFF 		bl	Comms_Packets_Available
 377 0138 0346     		mov	r3, r0
 378              		.loc 1 132 16 discriminator 1
 379 013a 002B     		cmp	r3, #0
 380 013c 1AD0     		beq	.L27
 133:Core/src/main.c ****             {
 134:Core/src/main.c ****                 Comms_Read(&tempPacket);
 381              		.loc 1 134 17
 382 013e 6D48     		ldr	r0, .L45+28
 383 0140 FFF7FEFF 		bl	Comms_Read
 135:Core/src/main.c ****                 if (Comms_Single_Byte_Packet(
 384              		.loc 1 135 21
 385 0144 3121     		movs	r1, #49
 386 0146 6B48     		ldr	r0, .L45+28
 387 0148 FFF7FEFF 		bl	Comms_Single_Byte_Packet
 388 014c 0346     		mov	r3, r0
 389              		.loc 1 135 20 discriminator 1
 390 014e 002B     		cmp	r3, #0
 391 0150 0DD0     		beq	.L28
 136:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_FW_UPDATE_REQUEST_DATA0))
ARM GAS  /tmp/cc9XkHe1.s 			page 38


 137:Core/src/main.c ****                 {
 138:Core/src/main.c ****                     Simple_Timer_Reset(&timer);
 392              		.loc 1 138 21
 393 0152 6448     		ldr	r0, .L45+12
 394 0154 FFF7FEFF 		bl	Simple_Timer_Reset
 139:Core/src/main.c ****                     Comms_Create_Single_Byte_Packet(
 395              		.loc 1 139 21
 396 0158 3721     		movs	r1, #55
 397 015a 6648     		ldr	r0, .L45+28
 398 015c FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 140:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_FW_UPDATE_RESPONSE_DATA0);
 141:Core/src/main.c ****                     Comms_Write(&tempPacket);
 399              		.loc 1 141 21
 400 0160 6448     		ldr	r0, .L45+28
 401 0162 FFF7FEFF 		bl	Comms_Write
 142:Core/src/main.c ****                     state = bootloaderDeviceIDReqState;
 402              		.loc 1 142 27
 403 0166 604B     		ldr	r3, .L45+16
 404 0168 0222     		movs	r2, #2
 405 016a 1A70     		strb	r2, [r3]
 143:Core/src/main.c ****                 }
 144:Core/src/main.c ****                 else
 145:Core/src/main.c ****                 {
 146:Core/src/main.c ****                     Bootloader_Fail();
 147:Core/src/main.c ****                 }
 148:Core/src/main.c ****             }
 149:Core/src/main.c ****             else
 150:Core/src/main.c ****             {
 151:Core/src/main.c ****                 Check_Timeout();
 152:Core/src/main.c ****             }
 153:Core/src/main.c ****         }
 154:Core/src/main.c ****         break;
 406              		.loc 1 154 9
 407 016c D8E0     		b	.L6
 408              	.L28:
 146:Core/src/main.c ****                 }
 409              		.loc 1 146 21
 410 016e FFF7FEFF 		bl	Bootloader_Fail
 411              		.loc 1 154 9
 412 0172 D5E0     		b	.L6
 413              	.L27:
 151:Core/src/main.c ****             }
 414              		.loc 1 151 17
 415 0174 FFF7FEFF 		bl	Check_Timeout
 416              		.loc 1 154 9
 417 0178 D2E0     		b	.L6
 418              	.L25:
 155:Core/src/main.c ****         case bootloaderDeviceIDReqState:
 156:Core/src/main.c ****         {
 157:Core/src/main.c ****             delayMS(500); // Host did not receive BOOTLOADER_PACKET_FW_UPDATE_RESPONSE_DATA0 if
 419              		.loc 1 157 13
 420 017a 4FF4FA70 		mov	r0, #500
 421 017e FFF7FEFF 		bl	delayMS
 158:Core/src/main.c ****                           // this delay is omitted
 159:Core/src/main.c ****             Simple_Timer_Reset(&timer);
 422              		.loc 1 159 13
 423 0182 5848     		ldr	r0, .L45+12
ARM GAS  /tmp/cc9XkHe1.s 			page 39


 424 0184 FFF7FEFF 		bl	Simple_Timer_Reset
 160:Core/src/main.c ****             Comms_Create_Single_Byte_Packet(
 425              		.loc 1 160 13
 426 0188 3C21     		movs	r1, #60
 427 018a 5A48     		ldr	r0, .L45+28
 428 018c FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 161:Core/src/main.c ****                 &tempPacket, BOOTLOADER_PACKET_DEVICE_ID_REQUEST_DATA0);
 162:Core/src/main.c ****             Comms_Write(&tempPacket);
 429              		.loc 1 162 13
 430 0190 5848     		ldr	r0, .L45+28
 431 0192 FFF7FEFF 		bl	Comms_Write
 163:Core/src/main.c ****             state = bootloaderDeviceIDResState;
 432              		.loc 1 163 19
 433 0196 544B     		ldr	r3, .L45+16
 434 0198 0322     		movs	r2, #3
 435 019a 1A70     		strb	r2, [r3]
 164:Core/src/main.c ****         }
 165:Core/src/main.c ****         break;
 436              		.loc 1 165 9
 437 019c C0E0     		b	.L6
 438              	.L24:
 166:Core/src/main.c ****         case bootloaderDeviceIDResState:
 167:Core/src/main.c ****         {
 168:Core/src/main.c ****             if (Comms_Packets_Available())
 439              		.loc 1 168 17
 440 019e FFF7FEFF 		bl	Comms_Packets_Available
 441 01a2 0346     		mov	r3, r0
 442              		.loc 1 168 16 discriminator 1
 443 01a4 002B     		cmp	r3, #0
 444 01a6 16D0     		beq	.L30
 169:Core/src/main.c ****             {
 170:Core/src/main.c ****                 Comms_Read(&tempPacket);
 445              		.loc 1 170 17
 446 01a8 5248     		ldr	r0, .L45+28
 447 01aa FFF7FEFF 		bl	Comms_Read
 171:Core/src/main.c ****                 if (Device_ID_Packet(&tempPacket) && (tempPacket.data[1] == DEVICE_ID))
 448              		.loc 1 171 21
 449 01ae 5148     		ldr	r0, .L45+28
 450 01b0 FFF7FEFF 		bl	Device_ID_Packet
 451 01b4 0346     		mov	r3, r0
 452              		.loc 1 171 20 discriminator 1
 453 01b6 002B     		cmp	r3, #0
 454 01b8 0AD0     		beq	.L31
 455              		.loc 1 171 70 discriminator 1
 456 01ba 4E4B     		ldr	r3, .L45+28
 457 01bc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 458              		.loc 1 171 51 discriminator 1
 459 01be 422B     		cmp	r3, #66
 460 01c0 06D1     		bne	.L31
 172:Core/src/main.c ****                 {
 173:Core/src/main.c ****                     Simple_Timer_Reset(&timer);
 461              		.loc 1 173 21
 462 01c2 4848     		ldr	r0, .L45+12
 463 01c4 FFF7FEFF 		bl	Simple_Timer_Reset
 174:Core/src/main.c ****                     state = bootloaderFWLengthReqState;
 464              		.loc 1 174 27
 465 01c8 474B     		ldr	r3, .L45+16
ARM GAS  /tmp/cc9XkHe1.s 			page 40


 466 01ca 0422     		movs	r2, #4
 467 01cc 1A70     		strb	r2, [r3]
 175:Core/src/main.c ****                 }
 176:Core/src/main.c ****                 else
 177:Core/src/main.c ****                 {
 178:Core/src/main.c ****                     Bootloader_Fail();
 179:Core/src/main.c ****                 }
 180:Core/src/main.c ****             }
 181:Core/src/main.c ****             else
 182:Core/src/main.c ****             {
 183:Core/src/main.c ****                 Check_Timeout();
 184:Core/src/main.c ****             }
 185:Core/src/main.c ****         }
 186:Core/src/main.c ****         break;
 468              		.loc 1 186 9
 469 01ce A7E0     		b	.L6
 470              	.L31:
 178:Core/src/main.c ****                 }
 471              		.loc 1 178 21
 472 01d0 FFF7FEFF 		bl	Bootloader_Fail
 473              		.loc 1 186 9
 474 01d4 A4E0     		b	.L6
 475              	.L30:
 183:Core/src/main.c ****             }
 476              		.loc 1 183 17
 477 01d6 FFF7FEFF 		bl	Check_Timeout
 478              		.loc 1 186 9
 479 01da A1E0     		b	.L6
 480              	.L23:
 187:Core/src/main.c ****         case bootloaderFWLengthReqState:
 188:Core/src/main.c ****         {
 189:Core/src/main.c ****             Simple_Timer_Reset(&timer);
 481              		.loc 1 189 13
 482 01dc 4148     		ldr	r0, .L45+12
 483 01de FFF7FEFF 		bl	Simple_Timer_Reset
 190:Core/src/main.c ****             Comms_Create_Single_Byte_Packet(
 484              		.loc 1 190 13
 485 01e2 4221     		movs	r1, #66
 486 01e4 4348     		ldr	r0, .L45+28
 487 01e6 FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 191:Core/src/main.c ****                 &tempPacket, BOOTLOADER_PACKET_FW_LENGTH_REQUEST_DATA0);
 192:Core/src/main.c ****             Comms_Write(&tempPacket);
 488              		.loc 1 192 13
 489 01ea 4248     		ldr	r0, .L45+28
 490 01ec FFF7FEFF 		bl	Comms_Write
 193:Core/src/main.c ****             state = bootloaderFWLengthResState;
 491              		.loc 1 193 19
 492 01f0 3D4B     		ldr	r3, .L45+16
 493 01f2 0522     		movs	r2, #5
 494 01f4 1A70     		strb	r2, [r3]
 194:Core/src/main.c ****         }
 195:Core/src/main.c ****         break;
 495              		.loc 1 195 9
 496 01f6 93E0     		b	.L6
 497              	.L22:
 196:Core/src/main.c ****         case bootloaderFWLengthResState:
 197:Core/src/main.c ****         {
ARM GAS  /tmp/cc9XkHe1.s 			page 41


 198:Core/src/main.c ****             if (Comms_Packets_Available())
 498              		.loc 1 198 17
 499 01f8 FFF7FEFF 		bl	Comms_Packets_Available
 500 01fc 0346     		mov	r3, r0
 501              		.loc 1 198 16 discriminator 1
 502 01fe 002B     		cmp	r3, #0
 503 0200 26D0     		beq	.L34
 199:Core/src/main.c ****             {
 200:Core/src/main.c ****                 Comms_Read(&tempPacket);
 504              		.loc 1 200 17
 505 0202 3C48     		ldr	r0, .L45+28
 506 0204 FFF7FEFF 		bl	Comms_Read
 201:Core/src/main.c ****                 fwLength =
 202:Core/src/main.c ****                     ((tempPacket.data[1]) | (tempPacket.data[2] << 8)
 507              		.loc 1 202 38
 508 0208 3A4B     		ldr	r3, .L45+28
 509 020a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 510 020c 1A46     		mov	r2, r3
 511              		.loc 1 202 61
 512 020e 394B     		ldr	r3, .L45+28
 513 0210 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 514              		.loc 1 202 65
 515 0212 1B02     		lsls	r3, r3, #8
 516              		.loc 1 202 43
 517 0214 1A43     		orrs	r2, r2, r3
 203:Core/src/main.c ****                      | (tempPacket.data[3] << 16) | (tempPacket.data[4] << 24));
 518              		.loc 1 203 40
 519 0216 374B     		ldr	r3, .L45+28
 520 0218 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 521              		.loc 1 203 44
 522 021a 1B04     		lsls	r3, r3, #16
 523              		.loc 1 203 22
 524 021c 1A43     		orrs	r2, r2, r3
 525              		.loc 1 203 69
 526 021e 354B     		ldr	r3, .L45+28
 527 0220 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 528              		.loc 1 203 73
 529 0222 1B06     		lsls	r3, r3, #24
 530              		.loc 1 203 51
 531 0224 1343     		orrs	r3, r3, r2
 532 0226 1A46     		mov	r2, r3
 201:Core/src/main.c ****                 fwLength =
 533              		.loc 1 201 26
 534 0228 334B     		ldr	r3, .L45+32
 535 022a 1A60     		str	r2, [r3]
 204:Core/src/main.c **** 
 205:Core/src/main.c ****                 if (FW_Length_Packet(&tempPacket) && (fwLength <= MAX_FW_LENGTH))
 536              		.loc 1 205 21
 537 022c 3148     		ldr	r0, .L45+28
 538 022e FFF7FEFF 		bl	FW_Length_Packet
 539 0232 0346     		mov	r3, r0
 540              		.loc 1 205 20 discriminator 1
 541 0234 002B     		cmp	r3, #0
 542 0236 08D0     		beq	.L35
 543              		.loc 1 205 64 discriminator 1
 544 0238 2F4B     		ldr	r3, .L45+32
 545 023a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9XkHe1.s 			page 42


 546              		.loc 1 205 51 discriminator 1
 547 023c B3F5F81F 		cmp	r3, #2031616
 548 0240 03D8     		bhi	.L35
 206:Core/src/main.c ****                 {
 207:Core/src/main.c ****                     state = bootloaderEraseAppState;
 549              		.loc 1 207 27
 550 0242 294B     		ldr	r3, .L45+16
 551 0244 0622     		movs	r2, #6
 552 0246 1A70     		strb	r2, [r3]
 208:Core/src/main.c ****                 }
 209:Core/src/main.c ****                 else
 210:Core/src/main.c ****                 {
 211:Core/src/main.c ****                     Bootloader_Fail();
 212:Core/src/main.c ****                 }
 213:Core/src/main.c ****             }
 214:Core/src/main.c ****             else
 215:Core/src/main.c ****             {
 216:Core/src/main.c ****                 Check_Timeout();
 217:Core/src/main.c ****             }
 218:Core/src/main.c ****         }
 219:Core/src/main.c ****         break;
 553              		.loc 1 219 9
 554 0248 6AE0     		b	.L6
 555              	.L35:
 211:Core/src/main.c ****                 }
 556              		.loc 1 211 21
 557 024a FFF7FEFF 		bl	Bootloader_Fail
 558              		.loc 1 219 9
 559 024e 67E0     		b	.L6
 560              	.L34:
 216:Core/src/main.c ****             }
 561              		.loc 1 216 17
 562 0250 FFF7FEFF 		bl	Check_Timeout
 563              		.loc 1 219 9
 564 0254 64E0     		b	.L6
 565              	.L21:
 220:Core/src/main.c ****         case bootloaderEraseAppState:
 221:Core/src/main.c ****         {
 222:Core/src/main.c ****             Bootloader_FLASH_Erase_Main_App();
 566              		.loc 1 222 13
 567 0256 FFF7FEFF 		bl	Bootloader_FLASH_Erase_Main_App
 223:Core/src/main.c **** 
 224:Core/src/main.c ****             Comms_Create_Single_Byte_Packet(
 568              		.loc 1 224 13
 569 025a 4821     		movs	r1, #72
 570 025c 2548     		ldr	r0, .L45+28
 571 025e FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 225:Core/src/main.c ****                 &tempPacket, BOOTLOADER_PACKET_FW_READY_FOR_DATA_DATA0);
 226:Core/src/main.c ****             Comms_Write(&tempPacket);
 572              		.loc 1 226 13
 573 0262 2448     		ldr	r0, .L45+28
 574 0264 FFF7FEFF 		bl	Comms_Write
 227:Core/src/main.c **** 
 228:Core/src/main.c ****             Simple_Timer_Reset(&timer);
 575              		.loc 1 228 13
 576 0268 1E48     		ldr	r0, .L45+12
 577 026a FFF7FEFF 		bl	Simple_Timer_Reset
ARM GAS  /tmp/cc9XkHe1.s 			page 43


 229:Core/src/main.c ****             state = bootloaderReceiveFWState;
 578              		.loc 1 229 19
 579 026e 1E4B     		ldr	r3, .L45+16
 580 0270 0722     		movs	r2, #7
 581 0272 1A70     		strb	r2, [r3]
 230:Core/src/main.c ****         }
 231:Core/src/main.c ****         break;
 582              		.loc 1 231 9
 583 0274 54E0     		b	.L6
 584              	.L19:
 232:Core/src/main.c ****         case bootloaderReceiveFWState:
 233:Core/src/main.c ****         {
 234:Core/src/main.c ****             if (Comms_Packets_Available())
 585              		.loc 1 234 17
 586 0276 FFF7FEFF 		bl	Comms_Packets_Available
 587 027a 0346     		mov	r3, r0
 588              		.loc 1 234 16 discriminator 1
 589 027c 002B     		cmp	r3, #0
 590 027e 49D0     		beq	.L38
 591              	.LBB12:
 235:Core/src/main.c ****             {
 236:Core/src/main.c ****                 Comms_Read(&tempPacket);
 592              		.loc 1 236 17
 593 0280 1C48     		ldr	r0, .L45+28
 594 0282 FFF7FEFF 		bl	Comms_Read
 237:Core/src/main.c **** 
 238:Core/src/main.c ****                 const uint8_t packetLength = (tempPacket.length & 0xFF) + 1;
 595              		.loc 1 238 57
 596 0286 1B4B     		ldr	r3, .L45+28
 597 0288 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598              		.loc 1 238 31
 599 028a 0133     		adds	r3, r3, #1
 600 028c FB71     		strb	r3, [r7, #7]
 239:Core/src/main.c ****                 Bootloader_FLASH_Write(
 601              		.loc 1 239 17
 602 028e 1B4B     		ldr	r3, .L45+36
 603 0290 1B68     		ldr	r3, [r3]
 604 0292 03F10063 		add	r3, r3, #134217728
 605 0296 03F58033 		add	r3, r3, #65536
 606 029a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 607 029c 1849     		ldr	r1, .L45+40
 608 029e 1846     		mov	r0, r3
 609 02a0 FFF7FEFF 		bl	Bootloader_FLASH_Write
 240:Core/src/main.c ****                     MAIN_APP_START + bytesWritten, tempPacket.data, packetLength);
 241:Core/src/main.c ****                 bytesWritten += packetLength;
 610              		.loc 1 241 30
 611 02a4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 612 02a6 154B     		ldr	r3, .L45+36
 613 02a8 1B68     		ldr	r3, [r3]
 614 02aa 1344     		add	r3, r3, r2
 615 02ac 134A     		ldr	r2, .L45+36
 616 02ae 1360     		str	r3, [r2]
 242:Core/src/main.c ****                 Simple_Timer_Reset(&timer);
 617              		.loc 1 242 17
 618 02b0 0C48     		ldr	r0, .L45+12
 619 02b2 FFF7FEFF 		bl	Simple_Timer_Reset
 243:Core/src/main.c **** 
ARM GAS  /tmp/cc9XkHe1.s 			page 44


 244:Core/src/main.c ****                 if (bytesWritten >= fwLength)
 620              		.loc 1 244 34
 621 02b6 114B     		ldr	r3, .L45+36
 622 02b8 1A68     		ldr	r2, [r3]
 623 02ba 0F4B     		ldr	r3, .L45+32
 624 02bc 1B68     		ldr	r3, [r3]
 625              		.loc 1 244 20
 626 02be 9A42     		cmp	r2, r3
 627 02c0 20D3     		bcc	.L39
 245:Core/src/main.c ****                 {
 246:Core/src/main.c ****                     Comms_Create_Single_Byte_Packet(
 628              		.loc 1 246 21
 629 02c2 5421     		movs	r1, #84
 630 02c4 0B48     		ldr	r0, .L45+28
 631 02c6 FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 247:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_UPDATE_SUCCESSFUL_DATA0);
 248:Core/src/main.c ****                     Comms_Write(&tempPacket);
 632              		.loc 1 248 21
 633 02ca 0A48     		ldr	r0, .L45+28
 634 02cc FFF7FEFF 		bl	Comms_Write
 249:Core/src/main.c ****                     state = bootloaderDoneState;
 635              		.loc 1 249 27
 636 02d0 054B     		ldr	r3, .L45+16
 637 02d2 0822     		movs	r2, #8
 638 02d4 1A70     		strb	r2, [r3]
 639              	.LBE12:
 250:Core/src/main.c ****                 }
 251:Core/src/main.c ****                 else
 252:Core/src/main.c ****                 {
 253:Core/src/main.c ****                     Comms_Create_Single_Byte_Packet(
 254:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_FW_READY_FOR_DATA_DATA0);
 255:Core/src/main.c ****                     Comms_Write(&tempPacket);
 256:Core/src/main.c ****                 }
 257:Core/src/main.c ****             }
 258:Core/src/main.c ****             else
 259:Core/src/main.c ****             {
 260:Core/src/main.c ****                 Check_Timeout();
 261:Core/src/main.c ****             }
 262:Core/src/main.c ****         }
 263:Core/src/main.c ****         break;
 640              		.loc 1 263 9
 641 02d6 23E0     		b	.L6
 642              	.L46:
 643              		.align	2
 644              	.L45:
 645 02d8 00000000 		.word	dataBuffer
 646 02dc 00000000 		.word	ringBuffer
 647 02e0 20A10700 		.word	500000
 648 02e4 00000000 		.word	timer
 649 02e8 00000000 		.word	state
 650 02ec 00480040 		.word	1073760256
 651 02f0 00000000 		.word	syncSequence
 652 02f4 00000000 		.word	tempPacket
 653 02f8 00000000 		.word	fwLength
 654 02fc 00000000 		.word	bytesWritten
 655 0300 01000000 		.word	tempPacket+1
 656              	.L39:
ARM GAS  /tmp/cc9XkHe1.s 			page 45


 657              	.LBB13:
 253:Core/src/main.c ****                         &tempPacket, BOOTLOADER_PACKET_FW_READY_FOR_DATA_DATA0);
 658              		.loc 1 253 21
 659 0304 4821     		movs	r1, #72
 660 0306 1648     		ldr	r0, .L47
 661 0308 FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 255:Core/src/main.c ****                 }
 662              		.loc 1 255 21
 663 030c 1448     		ldr	r0, .L47
 664 030e FFF7FEFF 		bl	Comms_Write
 665              	.LBE13:
 666              		.loc 1 263 9
 667 0312 05E0     		b	.L6
 668              	.L38:
 260:Core/src/main.c ****             }
 669              		.loc 1 260 17
 670 0314 FFF7FEFF 		bl	Check_Timeout
 671              		.loc 1 263 9
 672 0318 02E0     		b	.L6
 673              	.L18:
 264:Core/src/main.c **** 
 265:Core/src/main.c ****         default:
 266:Core/src/main.c ****         {
 267:Core/src/main.c ****             state = bootloaderSyncState;
 674              		.loc 1 267 19
 675 031a 124B     		ldr	r3, .L47+4
 676 031c 0022     		movs	r2, #0
 677 031e 1A70     		strb	r2, [r3]
 678              	.L6:
  90:Core/src/main.c ****     {
 679              		.loc 1 90 18
 680 0320 104B     		ldr	r3, .L47+4
 681 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 682 0324 082B     		cmp	r3, #8
 683 0326 7FF483AE 		bne	.L41
 268:Core/src/main.c ****         }
 269:Core/src/main.c ****         }
 270:Core/src/main.c ****     }
 271:Core/src/main.c **** 
 272:Core/src/main.c ****     delayUS(DEFAULT_TIMEOUT << 1);
 684              		.loc 1 272 5
 685 032a 0F48     		ldr	r0, .L47+8
 686 032c FFF7FEFF 		bl	delayUS
 273:Core/src/main.c ****     VirtualCOMPort_Teardown();
 687              		.loc 1 273 5
 688 0330 FFF7FEFF 		bl	VirtualCOMPort_Teardown
 274:Core/src/main.c ****     GPIO_Teardown();
 689              		.loc 1 274 5
 690 0334 FFF7FEFF 		bl	GPIO_Teardown
 275:Core/src/main.c ****     RCC_Teardown();
 691              		.loc 1 275 5
 692 0338 FFF7FEFF 		bl	RCC_Teardown
 276:Core/src/main.c ****     Systick_Teardown();
 693              		.loc 1 276 5
 694 033c FFF7FEFF 		bl	Systick_Teardown
 277:Core/src/main.c **** 
 278:Core/src/main.c ****     if (Validate_Firmware_Image())
ARM GAS  /tmp/cc9XkHe1.s 			page 46


 695              		.loc 1 278 9
 696 0340 FFF7FEFF 		bl	Validate_Firmware_Image
 697 0344 0346     		mov	r3, r0
 698              		.loc 1 278 8 discriminator 1
 699 0346 002B     		cmp	r3, #0
 700 0348 02D0     		beq	.L42
 279:Core/src/main.c ****     {
 280:Core/src/main.c ****         Jump_Application();
 701              		.loc 1 280 9
 702 034a FFF7FEFF 		bl	Jump_Application
 703 034e 01E0     		b	.L43
 704              	.L42:
 281:Core/src/main.c ****     }
 282:Core/src/main.c ****     else
 283:Core/src/main.c ****     {
 284:Core/src/main.c ****         NVIC_SystemReset();
 705              		.loc 1 284 9
 706 0350 FFF7FEFF 		bl	NVIC_SystemReset
 707              	.L43:
 285:Core/src/main.c ****     }
 286:Core/src/main.c **** 
 287:Core/src/main.c ****     // Never return
 288:Core/src/main.c ****     return 0;
 708              		.loc 1 288 12
 709 0354 0023     		movs	r3, #0
 289:Core/src/main.c **** }
 710              		.loc 1 289 1
 711 0356 1846     		mov	r0, r3
 712 0358 0837     		adds	r7, r7, #8
 713              	.LCFI5:
 714              		.cfi_def_cfa_offset 8
 715 035a BD46     		mov	sp, r7
 716              	.LCFI6:
 717              		.cfi_def_cfa_register 13
 718              		@ sp needed
 719 035c 80BD     		pop	{r7, pc}
 720              	.L48:
 721 035e 00BF     		.align	2
 722              	.L47:
 723 0360 00000000 		.word	tempPacket
 724 0364 00000000 		.word	state
 725 0368 40420F00 		.word	1000000
 726              		.cfi_endproc
 727              	.LFE113:
 729              		.section	.text.Jump_Application,"ax",%progbits
 730              		.align	1
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	Jump_Application:
 736              	.LFB114:
 290:Core/src/main.c **** 
 291:Core/src/main.c **** static void Jump_Application(void)
 292:Core/src/main.c **** {
 737              		.loc 1 292 1
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc9XkHe1.s 			page 47


 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 80B5     		push	{r7, lr}
 742              	.LCFI7:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 82B0     		sub	sp, sp, #8
 747              	.LCFI8:
 748              		.cfi_def_cfa_offset 16
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI9:
 751              		.cfi_def_cfa_register 7
 293:Core/src/main.c ****     typedef void (*void_func)(void);
 294:Core/src/main.c **** 
 295:Core/src/main.c ****     // uint32_t* reset_vector_entry = (uint32_t*)(MAIN_APP_START + 4U);
 296:Core/src/main.c ****     /*1. first address will be SP, and sizeof(uint32_t)) move to next which reset_handler*/
 297:Core/src/main.c ****     // uint32_t* reset_vector_entry = (uint32_t*)(MAIN_APP_START + sizeof(uint32_t));
 298:Core/src/main.c ****     /*2. another form of representation can be as */
 299:Core/src/main.c ****     uint32_t* main_vector_table = (uint32_t*)MAIN_APP_START;
 752              		.loc 1 299 15
 753 0006 064B     		ldr	r3, .L50
 754 0008 7B60     		str	r3, [r7, #4]
 300:Core/src/main.c **** 
 301:Core/src/main.c ****     // uint32_t* reset_vector_entry = &main_vector_table[1];
 302:Core/src/main.c ****     // uint32_t* reset_vector = (uint32_t*)(*reset_vector_entry);
 303:Core/src/main.c ****     /*3. above 2 lines can be replaced by */
 304:Core/src/main.c ****     // uint32_t* reset_vector = (uint32_t*)(main_vector_table[1]);
 305:Core/src/main.c **** 
 306:Core/src/main.c ****     // void_func jump_func = (void_func)reset_vector;
 307:Core/src/main.c ****     /*4. above 2 lines can be replaced by */
 308:Core/src/main.c ****     void_func jump_func = (void_func)main_vector_table[1];
 755              		.loc 1 308 55
 756 000a 7B68     		ldr	r3, [r7, #4]
 757 000c 0433     		adds	r3, r3, #4
 758 000e 1B68     		ldr	r3, [r3]
 759              		.loc 1 308 15
 760 0010 3B60     		str	r3, [r7]
 309:Core/src/main.c **** 
 310:Core/src/main.c ****     jump_func();
 761              		.loc 1 310 5
 762 0012 3B68     		ldr	r3, [r7]
 763 0014 9847     		blx	r3
 764              	.LVL0:
 311:Core/src/main.c **** 
 312:Core/src/main.c ****     /*5. if we had typdef struct vector_table_t which reset or reset handler was part of
 313:Core/src/main.c ****      * it, the 3 lines of code above could be written as */
 314:Core/src/main.c ****     // vector_table_t* main_vector_table = (vector_table_t*)MAIN_APP_START;
 315:Core/src/main.c ****     // main_vector_table->reset();
 316:Core/src/main.c **** 
 317:Core/src/main.c ****     /*All above set of code will generate similar assembly code in assembly converted file
 318:Core/src/main.c ****     of
 319:Core/src/main.c ****      * *.elf file: arm-none-eabi-objdump -D build/bootloader.elf > asm_dump
 320:Core/src/main.c ****     080001ac <main>:
 321:Core/src/main.c ****     80001ac:	b580      	push	{r7, lr}
 322:Core/src/main.c ****     80001ae:	af00      	add	r7, sp, #0
 323:Core/src/main.c ****     80001b0:	f000 f804 	bl	80001bc <jump_to_application>
 324:Core/src/main.c ****     80001b4:	2300      	movs	r3, #0
ARM GAS  /tmp/cc9XkHe1.s 			page 48


 325:Core/src/main.c ****     80001b6:	4618      	mov	r0, r3
 326:Core/src/main.c ****     80001b8:	bd80      	pop	{r7, pc}
 327:Core/src/main.c ****      */
 328:Core/src/main.c **** }
 765              		.loc 1 328 1
 766 0016 00BF     		nop
 767 0018 0837     		adds	r7, r7, #8
 768              	.LCFI10:
 769              		.cfi_def_cfa_offset 8
 770 001a BD46     		mov	sp, r7
 771              	.LCFI11:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 001c 80BD     		pop	{r7, pc}
 775              	.L51:
 776 001e 00BF     		.align	2
 777              	.L50:
 778 0020 00000108 		.word	134283264
 779              		.cfi_endproc
 780              	.LFE114:
 782              		.section	.text.AES_CBC_MAC_Step,"ax",%progbits
 783              		.align	1
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	AES_CBC_MAC_Step:
 789              	.LFB115:
 329:Core/src/main.c **** 
 330:Core/src/main.c **** static void AES_CBC_MAC_Step(
 331:Core/src/main.c ****     AES_Block_t stateAES, AES_Block_t previousStateAES, const AES_Block_t* keySchedule)
 332:Core/src/main.c **** {
 790              		.loc 1 332 1
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 24
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794 0000 80B5     		push	{r7, lr}
 795              	.LCFI12:
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 86B0     		sub	sp, sp, #24
 800              	.LCFI13:
 801              		.cfi_def_cfa_offset 32
 802 0004 00AF     		add	r7, sp, #0
 803              	.LCFI14:
 804              		.cfi_def_cfa_register 7
 805 0006 F860     		str	r0, [r7, #12]
 806 0008 B960     		str	r1, [r7, #8]
 807 000a 7A60     		str	r2, [r7, #4]
 808              	.LBB14:
 333:Core/src/main.c ****     /*CBC chain of operation*/
 334:Core/src/main.c ****     for (uint8_t i = 0; i < AES_BLOCK_SIZE; i++)
 809              		.loc 1 334 18
 810 000c 0023     		movs	r3, #0
 811 000e FB75     		strb	r3, [r7, #23]
 812              		.loc 1 334 5
 813 0010 10E0     		b	.L53
ARM GAS  /tmp/cc9XkHe1.s 			page 49


 814              	.L54:
 335:Core/src/main.c ****     {
 336:Core/src/main.c ****         ((uint8_t*)stateAES)[i] ^= ((uint8_t*)previousStateAES)[i];
 815              		.loc 1 336 29
 816 0012 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 817 0014 FA68     		ldr	r2, [r7, #12]
 818 0016 1344     		add	r3, r3, r2
 819 0018 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 820              		.loc 1 336 64
 821 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 822 001c BA68     		ldr	r2, [r7, #8]
 823 001e 1344     		add	r3, r3, r2
 824 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 825              		.loc 1 336 29
 826 0022 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 827 0024 F868     		ldr	r0, [r7, #12]
 828 0026 0344     		add	r3, r3, r0
 829              		.loc 1 336 33
 830 0028 4A40     		eors	r2, r2, r1
 831 002a D2B2     		uxtb	r2, r2
 832 002c 1A70     		strb	r2, [r3]
 334:Core/src/main.c ****     {
 833              		.loc 1 334 46 discriminator 3
 834 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 835 0030 0133     		adds	r3, r3, #1
 836 0032 FB75     		strb	r3, [r7, #23]
 837              	.L53:
 334:Core/src/main.c ****     {
 838              		.loc 1 334 27 discriminator 1
 839 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 840 0036 0F2B     		cmp	r3, #15
 841 0038 EBD9     		bls	.L54
 842              	.LBE14:
 337:Core/src/main.c ****     }
 338:Core/src/main.c **** 
 339:Core/src/main.c ****     AES_EncryptBlock(stateAES, keySchedule);
 843              		.loc 1 339 5
 844 003a 7968     		ldr	r1, [r7, #4]
 845 003c F868     		ldr	r0, [r7, #12]
 846 003e FFF7FEFF 		bl	AES_EncryptBlock
 340:Core/src/main.c ****     memcpy(previousStateAES, stateAES, AES_BLOCK_SIZE);
 847              		.loc 1 340 5
 848 0042 1022     		movs	r2, #16
 849 0044 F968     		ldr	r1, [r7, #12]
 850 0046 B868     		ldr	r0, [r7, #8]
 851 0048 FFF7FEFF 		bl	memcpy
 341:Core/src/main.c **** }
 852              		.loc 1 341 1
 853 004c 00BF     		nop
 854 004e 1837     		adds	r7, r7, #24
 855              	.LCFI15:
 856              		.cfi_def_cfa_offset 8
 857 0050 BD46     		mov	sp, r7
 858              	.LCFI16:
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 0052 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc9XkHe1.s 			page 50


 862              		.cfi_endproc
 863              	.LFE115:
 865              		.section	.text.Validate_Firmware_Image,"ax",%progbits
 866              		.align	1
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 871              	Validate_Firmware_Image:
 872              	.LFB116:
 342:Core/src/main.c **** 
 343:Core/src/main.c **** static bool Validate_Firmware_Image(void)
 344:Core/src/main.c **** {
 873              		.loc 1 344 1
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 224
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877 0000 90B5     		push	{r4, r7, lr}
 878              	.LCFI17:
 879              		.cfi_def_cfa_offset 12
 880              		.cfi_offset 4, -12
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
 883 0002 B9B0     		sub	sp, sp, #228
 884              	.LCFI18:
 885              		.cfi_def_cfa_offset 240
 886 0004 00AF     		add	r7, sp, #0
 887              	.LCFI19:
 888              		.cfi_def_cfa_register 7
 345:Core/src/main.c ****     fwInfo_t* fwInfo = (fwInfo_t*)FW_INFO_ADDRESS;
 889              		.loc 1 345 15
 890 0006 744B     		ldr	r3, .L68
 891 0008 C7F8D430 		str	r3, [r7, #212]
 346:Core/src/main.c ****     const uint8_t* signature = (const uint8_t*)SIGNATURE_ADDRESS;
 892              		.loc 1 346 20
 893 000c 734B     		ldr	r3, .L68+4
 894 000e C7F8D030 		str	r3, [r7, #208]
 347:Core/src/main.c **** 
 348:Core/src/main.c ****     if (fwInfo->sentinel != FW_INFO_SENTINEL)
 895              		.loc 1 348 15
 896 0012 D7F8D430 		ldr	r3, [r7, #212]
 897 0016 1B68     		ldr	r3, [r3]
 898              		.loc 1 348 8
 899 0018 714A     		ldr	r2, .L68+8
 900 001a 9342     		cmp	r3, r2
 901 001c 01D0     		beq	.L56
 349:Core/src/main.c ****     {
 350:Core/src/main.c ****         return false;
 902              		.loc 1 350 16
 903 001e 0023     		movs	r3, #0
 904 0020 D5E0     		b	.L67
 905              	.L56:
 351:Core/src/main.c ****     }
 352:Core/src/main.c **** 
 353:Core/src/main.c ****     if (fwInfo->deviceID != DEVICE_ID)
 906              		.loc 1 353 15
 907 0022 D7F8D430 		ldr	r3, [r7, #212]
 908 0026 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc9XkHe1.s 			page 51


 909              		.loc 1 353 8
 910 0028 422B     		cmp	r3, #66
 911 002a 01D0     		beq	.L58
 354:Core/src/main.c ****     {
 355:Core/src/main.c ****         return false;
 912              		.loc 1 355 16
 913 002c 0023     		movs	r3, #0
 914 002e CEE0     		b	.L67
 915              	.L58:
 356:Core/src/main.c ****     }
 357:Core/src/main.c **** 
 358:Core/src/main.c ****     /*    const uint8_t* startAddress = (const uint8_t*)FW_INFO_VALIDATE_ADDRESS;
 359:Core/src/main.c ****         const uint32_t computedCRC = crc32(startAddress,
 360:Core/src/main.c ****        FW_INFO_VALIDATE_LENGTH(fwInfo->length)); return computedCRC == fwInfo->crc32;
 361:Core/src/main.c ****     */
 362:Core/src/main.c ****     AES_Block_t roundKeys[NUM_ROUND_KEYS_128];
 363:Core/src/main.c ****     AES_KeySchedule128(secretKey, roundKeys);
 916              		.loc 1 363 5
 917 0030 07F12003 		add	r3, r7, #32
 918 0034 1946     		mov	r1, r3
 919 0036 6B48     		ldr	r0, .L68+12
 920 0038 FFF7FEFF 		bl	AES_KeySchedule128
 364:Core/src/main.c **** 
 365:Core/src/main.c ****     AES_Block_t stateAES = {0};
 921              		.loc 1 365 17
 922 003c 07F11003 		add	r3, r7, #16
 923 0040 0022     		movs	r2, #0
 924 0042 1A60     		str	r2, [r3]
 925 0044 5A60     		str	r2, [r3, #4]
 926 0046 9A60     		str	r2, [r3, #8]
 927 0048 DA60     		str	r2, [r3, #12]
 366:Core/src/main.c ****     AES_Block_t previousStateAES = {0};
 928              		.loc 1 366 17
 929 004a 3B46     		mov	r3, r7
 930 004c 0022     		movs	r2, #0
 931 004e 1A60     		str	r2, [r3]
 932 0050 5A60     		str	r2, [r3, #4]
 933 0052 9A60     		str	r2, [r3, #8]
 934 0054 DA60     		str	r2, [r3, #12]
 367:Core/src/main.c **** 
 368:Core/src/main.c ****     uint8_t bytesPadded = 16 - (fwInfo->length % 16);
 935              		.loc 1 368 39
 936 0056 D7F8D430 		ldr	r3, [r7, #212]
 937 005a DB68     		ldr	r3, [r3, #12]
 938              		.loc 1 368 48
 939 005c DBB2     		uxtb	r3, r3
 940 005e 03F00F03 		and	r3, r3, #15
 941 0062 DBB2     		uxtb	r3, r3
 942              		.loc 1 368 13
 943 0064 C3F11003 		rsb	r3, r3, #16
 944 0068 87F8DF30 		strb	r3, [r7, #223]
 369:Core/src/main.c ****     if (bytesPadded == 0)
 945              		.loc 1 369 8
 946 006c 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 947 0070 002B     		cmp	r3, #0
 948 0072 02D1     		bne	.L59
 370:Core/src/main.c ****     {
ARM GAS  /tmp/cc9XkHe1.s 			page 52


 371:Core/src/main.c ****         bytesPadded = 16;
 949              		.loc 1 371 21
 950 0074 1023     		movs	r3, #16
 951 0076 87F8DF30 		strb	r3, [r7, #223]
 952              	.L59:
 372:Core/src/main.c ****     }
 373:Core/src/main.c **** 
 374:Core/src/main.c ****     memcpy(stateAES, fwInfo, AES_BLOCK_SIZE);
 953              		.loc 1 374 5
 954 007a D7F8D430 		ldr	r3, [r7, #212]
 955 007e 07F11004 		add	r4, r7, #16
 956 0082 1868     		ldr	r0, [r3]	@ unaligned
 957 0084 5968     		ldr	r1, [r3, #4]	@ unaligned
 958 0086 9A68     		ldr	r2, [r3, #8]	@ unaligned
 959 0088 DB68     		ldr	r3, [r3, #12]	@ unaligned
 960 008a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 375:Core/src/main.c ****     AES_CBC_MAC_Step(stateAES, previousStateAES, roundKeys);
 961              		.loc 1 375 5
 962 008c 07F12002 		add	r2, r7, #32
 963 0090 3946     		mov	r1, r7
 964 0092 07F11003 		add	r3, r7, #16
 965 0096 1846     		mov	r0, r3
 966 0098 FFF7FEFF 		bl	AES_CBC_MAC_Step
 376:Core/src/main.c **** 
 377:Core/src/main.c ****     uint32_t offset = 0;
 967              		.loc 1 377 14
 968 009c 0023     		movs	r3, #0
 969 009e C7F8D830 		str	r3, [r7, #216]
 378:Core/src/main.c ****     while (offset < fwInfo->length)
 970              		.loc 1 378 11
 971 00a2 7EE0     		b	.L60
 972              	.L66:
 379:Core/src/main.c ****     {
 380:Core/src/main.c ****         /*Are we at the point where to skip the info and signature section?*/
 381:Core/src/main.c ****         if (offset == (FW_INFO_ADDRESS - MAIN_APP_START))
 973              		.loc 1 381 12
 974 00a4 D7F8D830 		ldr	r3, [r7, #216]
 975 00a8 B3F5D87F 		cmp	r3, #432
 976 00ac 05D1     		bne	.L61
 382:Core/src/main.c ****         {
 383:Core/src/main.c ****             offset += AES_BLOCK_SIZE * 2;
 977              		.loc 1 383 20
 978 00ae D7F8D830 		ldr	r3, [r7, #216]
 979 00b2 2033     		adds	r3, r3, #32
 980 00b4 C7F8D830 		str	r3, [r7, #216]
 384:Core/src/main.c ****             continue;
 981              		.loc 1 384 13
 982 00b8 73E0     		b	.L60
 983              	.L61:
 385:Core/src/main.c ****         }
 386:Core/src/main.c **** 
 387:Core/src/main.c ****         /*Are we at the last block?*/
 388:Core/src/main.c ****         if ((fwInfo->length - offset) > AES_BLOCK_SIZE)
 984              		.loc 1 388 20
 985 00ba D7F8D430 		ldr	r3, [r7, #212]
 986 00be DA68     		ldr	r2, [r3, #12]
 987              		.loc 1 388 29
ARM GAS  /tmp/cc9XkHe1.s 			page 53


 988 00c0 D7F8D830 		ldr	r3, [r7, #216]
 989 00c4 D31A     		subs	r3, r2, r3
 990              		.loc 1 388 12
 991 00c6 102B     		cmp	r3, #16
 992 00c8 15D9     		bls	.L63
 389:Core/src/main.c ****         {
 390:Core/src/main.c ****             /*The regular case*/
 391:Core/src/main.c ****             memcpy(stateAES, (void*)(MAIN_APP_START + offset), AES_BLOCK_SIZE);
 993              		.loc 1 391 53
 994 00ca D7F8D830 		ldr	r3, [r7, #216]
 995 00ce 03F10063 		add	r3, r3, #134217728
 996 00d2 03F58033 		add	r3, r3, #65536
 997              		.loc 1 391 13
 998 00d6 07F11004 		add	r4, r7, #16
 999 00da 1868     		ldr	r0, [r3]	@ unaligned
 1000 00dc 5968     		ldr	r1, [r3, #4]	@ unaligned
 1001 00de 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1002 00e0 DB68     		ldr	r3, [r3, #12]	@ unaligned
 1003 00e2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 392:Core/src/main.c ****             AES_CBC_MAC_Step(stateAES, previousStateAES, roundKeys);
 1004              		.loc 1 392 13
 1005 00e4 07F12002 		add	r2, r7, #32
 1006 00e8 3946     		mov	r1, r7
 1007 00ea 07F11003 		add	r3, r7, #16
 1008 00ee 1846     		mov	r0, r3
 1009 00f0 FFF7FEFF 		bl	AES_CBC_MAC_Step
 1010 00f4 50E0     		b	.L64
 1011              	.L63:
 393:Core/src/main.c ****         }
 394:Core/src/main.c ****         else
 395:Core/src/main.c ****         {
 396:Core/src/main.c ****             /*The irregular case: the case of padding*/
 397:Core/src/main.c ****             if (bytesPadded == 16)
 1012              		.loc 1 397 16
 1013 00f6 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 1014 00fa 102B     		cmp	r3, #16
 1015 00fc 24D1     		bne	.L65
 398:Core/src/main.c ****             {
 399:Core/src/main.c ****                 /*Add a whole extra block of padding*/
 400:Core/src/main.c ****                 memcpy(stateAES, (void*)(MAIN_APP_START + offset), AES_BLOCK_SIZE);
 1016              		.loc 1 400 57
 1017 00fe D7F8D830 		ldr	r3, [r7, #216]
 1018 0102 03F10063 		add	r3, r3, #134217728
 1019 0106 03F58033 		add	r3, r3, #65536
 1020              		.loc 1 400 17
 1021 010a 07F11004 		add	r4, r7, #16
 1022 010e 1868     		ldr	r0, [r3]	@ unaligned
 1023 0110 5968     		ldr	r1, [r3, #4]	@ unaligned
 1024 0112 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1025 0114 DB68     		ldr	r3, [r3, #12]	@ unaligned
 1026 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 401:Core/src/main.c ****                 AES_CBC_MAC_Step(stateAES, previousStateAES, roundKeys);
 1027              		.loc 1 401 17
 1028 0118 07F12002 		add	r2, r7, #32
 1029 011c 3946     		mov	r1, r7
 1030 011e 07F11003 		add	r3, r7, #16
 1031 0122 1846     		mov	r0, r3
ARM GAS  /tmp/cc9XkHe1.s 			page 54


 1032 0124 FFF7FEFF 		bl	AES_CBC_MAC_Step
 402:Core/src/main.c **** 
 403:Core/src/main.c ****                 // memset(stateAES, bytesPadded, AES_BLOCK_SIZE);
 404:Core/src/main.c ****                 memset(stateAES, AES_BLOCK_SIZE, AES_BLOCK_SIZE);
 1033              		.loc 1 404 17
 1034 0128 07F11003 		add	r3, r7, #16
 1035 012c 1022     		movs	r2, #16
 1036 012e 1021     		movs	r1, #16
 1037 0130 1846     		mov	r0, r3
 1038 0132 FFF7FEFF 		bl	memset
 405:Core/src/main.c ****                 AES_CBC_MAC_Step(stateAES, previousStateAES, roundKeys);
 1039              		.loc 1 405 17
 1040 0136 07F12002 		add	r2, r7, #32
 1041 013a 3946     		mov	r1, r7
 1042 013c 07F11003 		add	r3, r7, #16
 1043 0140 1846     		mov	r0, r3
 1044 0142 FFF7FEFF 		bl	AES_CBC_MAC_Step
 1045 0146 27E0     		b	.L64
 1046              	.L65:
 406:Core/src/main.c ****             }
 407:Core/src/main.c ****             else
 408:Core/src/main.c ****             {
 409:Core/src/main.c ****                 memcpy(
 410:Core/src/main.c ****                     stateAES,
 411:Core/src/main.c ****                     (void*)(MAIN_APP_START + offset),
 1047              		.loc 1 411 44
 1048 0148 D7F8D830 		ldr	r3, [r7, #216]
 1049 014c 03F10063 		add	r3, r3, #134217728
 1050 0150 03F58033 		add	r3, r3, #65536
 409:Core/src/main.c ****                     stateAES,
 1051              		.loc 1 409 17
 1052 0154 1946     		mov	r1, r3
 412:Core/src/main.c ****                     (AES_BLOCK_SIZE - bytesPadded));
 1053              		.loc 1 412 37
 1054 0156 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 1055 015a C3F11003 		rsb	r3, r3, #16
 409:Core/src/main.c ****                     stateAES,
 1056              		.loc 1 409 17
 1057 015e 1A46     		mov	r2, r3
 1058 0160 07F11003 		add	r3, r7, #16
 1059 0164 1846     		mov	r0, r3
 1060 0166 FFF7FEFF 		bl	memcpy
 413:Core/src/main.c ****                 memset(
 414:Core/src/main.c ****                     (void*)(stateAES) + (AES_BLOCK_SIZE - bytesPadded),
 1061              		.loc 1 414 57
 1062 016a 97F8DF30 		ldrb	r3, [r7, #223]	@ zero_extendqisi2
 1063 016e C3F11003 		rsb	r3, r3, #16
 1064 0172 1A46     		mov	r2, r3
 413:Core/src/main.c ****                 memset(
 1065              		.loc 1 413 17
 1066 0174 07F11003 		add	r3, r7, #16
 1067 0178 1344     		add	r3, r3, r2
 1068 017a 97F8DF10 		ldrb	r1, [r7, #223]	@ zero_extendqisi2
 1069 017e 97F8DF20 		ldrb	r2, [r7, #223]	@ zero_extendqisi2
 1070 0182 1846     		mov	r0, r3
 1071 0184 FFF7FEFF 		bl	memset
 415:Core/src/main.c ****                     bytesPadded,
ARM GAS  /tmp/cc9XkHe1.s 			page 55


 416:Core/src/main.c ****                     bytesPadded);
 417:Core/src/main.c ****                 AES_CBC_MAC_Step(stateAES, previousStateAES, roundKeys);
 1072              		.loc 1 417 17
 1073 0188 07F12002 		add	r2, r7, #32
 1074 018c 3946     		mov	r1, r7
 1075 018e 07F11003 		add	r3, r7, #16
 1076 0192 1846     		mov	r0, r3
 1077 0194 FFF7FEFF 		bl	AES_CBC_MAC_Step
 1078              	.L64:
 418:Core/src/main.c ****             }
 419:Core/src/main.c ****         }
 420:Core/src/main.c ****         offset += AES_BLOCK_SIZE;
 1079              		.loc 1 420 16
 1080 0198 D7F8D830 		ldr	r3, [r7, #216]
 1081 019c 1033     		adds	r3, r3, #16
 1082 019e C7F8D830 		str	r3, [r7, #216]
 1083              	.L60:
 378:Core/src/main.c ****     {
 1084              		.loc 1 378 27
 1085 01a2 D7F8D430 		ldr	r3, [r7, #212]
 1086 01a6 DB68     		ldr	r3, [r3, #12]
 378:Core/src/main.c ****     {
 1087              		.loc 1 378 19
 1088 01a8 D7F8D820 		ldr	r2, [r7, #216]
 1089 01ac 9A42     		cmp	r2, r3
 1090 01ae FFF479AF 		bcc	.L66
 421:Core/src/main.c ****     }
 422:Core/src/main.c **** 
 423:Core/src/main.c ****     return memcmp(signature, stateAES, AES_BLOCK_SIZE) == 0;
 1091              		.loc 1 423 12
 1092 01b2 07F11003 		add	r3, r7, #16
 1093 01b6 1022     		movs	r2, #16
 1094 01b8 1946     		mov	r1, r3
 1095 01ba D7F8D000 		ldr	r0, [r7, #208]
 1096 01be FFF7FEFF 		bl	memcmp
 1097 01c2 0346     		mov	r3, r0
 1098              		.loc 1 423 56 discriminator 1
 1099 01c4 002B     		cmp	r3, #0
 1100 01c6 0CBF     		ite	eq
 1101 01c8 0123     		moveq	r3, #1
 1102 01ca 0023     		movne	r3, #0
 1103 01cc DBB2     		uxtb	r3, r3
 1104              	.L67:
 424:Core/src/main.c **** }
 1105              		.loc 1 424 1
 1106 01ce 1846     		mov	r0, r3
 1107 01d0 E437     		adds	r7, r7, #228
 1108              	.LCFI20:
 1109              		.cfi_def_cfa_offset 12
 1110 01d2 BD46     		mov	sp, r7
 1111              	.LCFI21:
 1112              		.cfi_def_cfa_register 13
 1113              		@ sp needed
 1114 01d4 90BD     		pop	{r4, r7, pc}
 1115              	.L69:
 1116 01d6 00BF     		.align	2
 1117              	.L68:
ARM GAS  /tmp/cc9XkHe1.s 			page 56


 1118 01d8 B0010108 		.word	134283696
 1119 01dc C0010108 		.word	134283712
 1120 01e0 DEC0ADDE 		.word	-559038242
 1121 01e4 00000000 		.word	secretKey
 1122              		.cfi_endproc
 1123              	.LFE116:
 1125              		.section	.text.Bootloader_Fail,"ax",%progbits
 1126              		.align	1
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1131              	Bootloader_Fail:
 1132              	.LFB117:
 425:Core/src/main.c **** 
 426:Core/src/main.c **** static void Bootloader_Fail(void)
 427:Core/src/main.c **** {
 1133              		.loc 1 427 1
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 1, uses_anonymous_args = 0
 1137 0000 80B5     		push	{r7, lr}
 1138              	.LCFI22:
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 7, -8
 1141              		.cfi_offset 14, -4
 1142 0002 00AF     		add	r7, sp, #0
 1143              	.LCFI23:
 1144              		.cfi_def_cfa_register 7
 428:Core/src/main.c ****     Comms_Create_Single_Byte_Packet(&tempPacket, BOOTLOADER_PACKET_NOT_ACKNOWLEDGE_DATA0);
 1145              		.loc 1 428 5
 1146 0004 5921     		movs	r1, #89
 1147 0006 0548     		ldr	r0, .L71
 1148 0008 FFF7FEFF 		bl	Comms_Create_Single_Byte_Packet
 429:Core/src/main.c ****     Comms_Write(&tempPacket);
 1149              		.loc 1 429 5
 1150 000c 0348     		ldr	r0, .L71
 1151 000e FFF7FEFF 		bl	Comms_Write
 430:Core/src/main.c ****     state = bootloaderDoneState;
 1152              		.loc 1 430 11
 1153 0012 034B     		ldr	r3, .L71+4
 1154 0014 0822     		movs	r2, #8
 1155 0016 1A70     		strb	r2, [r3]
 431:Core/src/main.c **** }
 1156              		.loc 1 431 1
 1157 0018 00BF     		nop
 1158 001a 80BD     		pop	{r7, pc}
 1159              	.L72:
 1160              		.align	2
 1161              	.L71:
 1162 001c 00000000 		.word	tempPacket
 1163 0020 00000000 		.word	state
 1164              		.cfi_endproc
 1165              	.LFE117:
 1167              		.section	.text.Check_Timeout,"ax",%progbits
 1168              		.align	1
 1169              		.syntax unified
 1170              		.thumb
ARM GAS  /tmp/cc9XkHe1.s 			page 57


 1171              		.thumb_func
 1173              	Check_Timeout:
 1174              	.LFB118:
 432:Core/src/main.c **** 
 433:Core/src/main.c **** static void Check_Timeout(void)
 434:Core/src/main.c **** {
 1175              		.loc 1 434 1
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179 0000 80B5     		push	{r7, lr}
 1180              	.LCFI24:
 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 00AF     		add	r7, sp, #0
 1185              	.LCFI25:
 1186              		.cfi_def_cfa_register 7
 435:Core/src/main.c ****     if (Simple_Timer_Elapsed(&timer))
 1187              		.loc 1 435 9
 1188 0004 0448     		ldr	r0, .L76
 1189 0006 FFF7FEFF 		bl	Simple_Timer_Elapsed
 1190 000a 0346     		mov	r3, r0
 1191              		.loc 1 435 8 discriminator 1
 1192 000c 002B     		cmp	r3, #0
 1193 000e 01D0     		beq	.L75
 436:Core/src/main.c ****     {
 437:Core/src/main.c ****         Bootloader_Fail();
 1194              		.loc 1 437 9
 1195 0010 FFF7FEFF 		bl	Bootloader_Fail
 1196              	.L75:
 438:Core/src/main.c ****     }
 439:Core/src/main.c **** }
 1197              		.loc 1 439 1
 1198 0014 00BF     		nop
 1199 0016 80BD     		pop	{r7, pc}
 1200              	.L77:
 1201              		.align	2
 1202              	.L76:
 1203 0018 00000000 		.word	timer
 1204              		.cfi_endproc
 1205              	.LFE118:
 1207              		.section	.text.Device_ID_Packet,"ax",%progbits
 1208              		.align	1
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1213              	Device_ID_Packet:
 1214              	.LFB119:
 440:Core/src/main.c **** 
 441:Core/src/main.c **** static bool Device_ID_Packet(const commsPacket_t* packet)
 442:Core/src/main.c **** {
 1215              		.loc 1 442 1
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 16
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
ARM GAS  /tmp/cc9XkHe1.s 			page 58


 1220 0000 80B4     		push	{r7}
 1221              	.LCFI26:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 85B0     		sub	sp, sp, #20
 1225              	.LCFI27:
 1226              		.cfi_def_cfa_offset 24
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI28:
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 443:Core/src/main.c ****     if (packet->length != 2)
 1231              		.loc 1 443 15
 1232 0008 7B68     		ldr	r3, [r7, #4]
 1233 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234              		.loc 1 443 8
 1235 000c 022B     		cmp	r3, #2
 1236 000e 01D0     		beq	.L79
 444:Core/src/main.c ****     {
 445:Core/src/main.c ****         return false;
 1237              		.loc 1 445 16
 1238 0010 0023     		movs	r3, #0
 1239 0012 17E0     		b	.L80
 1240              	.L79:
 446:Core/src/main.c ****     }
 447:Core/src/main.c **** 
 448:Core/src/main.c ****     if (packet->data[0] != BOOTLOADER_PACKET_DEVICE_ID_RESPONSE_DATA0)
 1241              		.loc 1 448 21
 1242 0014 7B68     		ldr	r3, [r7, #4]
 1243 0016 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1244              		.loc 1 448 8
 1245 0018 3F2B     		cmp	r3, #63
 1246 001a 01D0     		beq	.L81
 449:Core/src/main.c ****     {
 450:Core/src/main.c ****         return false;
 1247              		.loc 1 450 16
 1248 001c 0023     		movs	r3, #0
 1249 001e 11E0     		b	.L80
 1250              	.L81:
 1251              	.LBB15:
 451:Core/src/main.c ****     }
 452:Core/src/main.c **** 
 453:Core/src/main.c ****     for (uint8_t i = 2; i < PACKET_DATA_LENGTH; i++)
 1252              		.loc 1 453 18
 1253 0020 0223     		movs	r3, #2
 1254 0022 FB73     		strb	r3, [r7, #15]
 1255              		.loc 1 453 5
 1256 0024 0AE0     		b	.L82
 1257              	.L84:
 454:Core/src/main.c ****     {
 455:Core/src/main.c ****         if (packet->data[i] != 0xFF)
 1258              		.loc 1 455 25
 1259 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1260 0028 7A68     		ldr	r2, [r7, #4]
 1261 002a 1344     		add	r3, r3, r2
 1262 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1263              		.loc 1 455 12
ARM GAS  /tmp/cc9XkHe1.s 			page 59


 1264 002e FF2B     		cmp	r3, #255
 1265 0030 01D0     		beq	.L83
 456:Core/src/main.c ****         {
 457:Core/src/main.c ****             return false;
 1266              		.loc 1 457 20
 1267 0032 0023     		movs	r3, #0
 1268 0034 06E0     		b	.L80
 1269              	.L83:
 453:Core/src/main.c ****     {
 1270              		.loc 1 453 50 discriminator 2
 1271 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1272 0038 0133     		adds	r3, r3, #1
 1273 003a FB73     		strb	r3, [r7, #15]
 1274              	.L82:
 453:Core/src/main.c ****     {
 1275              		.loc 1 453 27 discriminator 1
 1276 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1277 003e 0F2B     		cmp	r3, #15
 1278 0040 F1D9     		bls	.L84
 1279              	.LBE15:
 458:Core/src/main.c ****         }
 459:Core/src/main.c ****     }
 460:Core/src/main.c **** 
 461:Core/src/main.c ****     return true;
 1280              		.loc 1 461 12
 1281 0042 0123     		movs	r3, #1
 1282              	.L80:
 462:Core/src/main.c **** }
 1283              		.loc 1 462 1
 1284 0044 1846     		mov	r0, r3
 1285 0046 1437     		adds	r7, r7, #20
 1286              	.LCFI29:
 1287              		.cfi_def_cfa_offset 4
 1288 0048 BD46     		mov	sp, r7
 1289              	.LCFI30:
 1290              		.cfi_def_cfa_register 13
 1291              		@ sp needed
 1292 004a 5DF8047B 		ldr	r7, [sp], #4
 1293              	.LCFI31:
 1294              		.cfi_restore 7
 1295              		.cfi_def_cfa_offset 0
 1296 004e 7047     		bx	lr
 1297              		.cfi_endproc
 1298              	.LFE119:
 1300              		.section	.text.FW_Length_Packet,"ax",%progbits
 1301              		.align	1
 1302              		.syntax unified
 1303              		.thumb
 1304              		.thumb_func
 1306              	FW_Length_Packet:
 1307              	.LFB120:
 463:Core/src/main.c **** 
 464:Core/src/main.c **** static bool FW_Length_Packet(const commsPacket_t* packet)
 465:Core/src/main.c **** {
 1308              		.loc 1 465 1
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cc9XkHe1.s 			page 60


 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313 0000 80B4     		push	{r7}
 1314              	.LCFI32:
 1315              		.cfi_def_cfa_offset 4
 1316              		.cfi_offset 7, -4
 1317 0002 85B0     		sub	sp, sp, #20
 1318              	.LCFI33:
 1319              		.cfi_def_cfa_offset 24
 1320 0004 00AF     		add	r7, sp, #0
 1321              	.LCFI34:
 1322              		.cfi_def_cfa_register 7
 1323 0006 7860     		str	r0, [r7, #4]
 466:Core/src/main.c ****     if (packet->length != 5)
 1324              		.loc 1 466 15
 1325 0008 7B68     		ldr	r3, [r7, #4]
 1326 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327              		.loc 1 466 8
 1328 000c 052B     		cmp	r3, #5
 1329 000e 01D0     		beq	.L86
 467:Core/src/main.c ****     {
 468:Core/src/main.c ****         return false;
 1330              		.loc 1 468 16
 1331 0010 0023     		movs	r3, #0
 1332 0012 17E0     		b	.L87
 1333              	.L86:
 469:Core/src/main.c ****     }
 470:Core/src/main.c **** 
 471:Core/src/main.c ****     if (packet->data[0] != BOOTLOADER_PACKET_FW_LENGTH_RESPONSE_DATA0)
 1334              		.loc 1 471 21
 1335 0014 7B68     		ldr	r3, [r7, #4]
 1336 0016 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1337              		.loc 1 471 8
 1338 0018 452B     		cmp	r3, #69
 1339 001a 01D0     		beq	.L88
 472:Core/src/main.c ****     {
 473:Core/src/main.c ****         return false;
 1340              		.loc 1 473 16
 1341 001c 0023     		movs	r3, #0
 1342 001e 11E0     		b	.L87
 1343              	.L88:
 1344              	.LBB16:
 474:Core/src/main.c ****     }
 475:Core/src/main.c **** 
 476:Core/src/main.c ****     for (uint8_t i = 5; i < PACKET_DATA_LENGTH; i++)
 1345              		.loc 1 476 18
 1346 0020 0523     		movs	r3, #5
 1347 0022 FB73     		strb	r3, [r7, #15]
 1348              		.loc 1 476 5
 1349 0024 0AE0     		b	.L89
 1350              	.L91:
 477:Core/src/main.c ****     {
 478:Core/src/main.c ****         if (packet->data[i] != 0xFF)
 1351              		.loc 1 478 25
 1352 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1353 0028 7A68     		ldr	r2, [r7, #4]
 1354 002a 1344     		add	r3, r3, r2
ARM GAS  /tmp/cc9XkHe1.s 			page 61


 1355 002c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1356              		.loc 1 478 12
 1357 002e FF2B     		cmp	r3, #255
 1358 0030 01D0     		beq	.L90
 479:Core/src/main.c ****         {
 480:Core/src/main.c ****             return false;
 1359              		.loc 1 480 20
 1360 0032 0023     		movs	r3, #0
 1361 0034 06E0     		b	.L87
 1362              	.L90:
 476:Core/src/main.c ****     {
 1363              		.loc 1 476 50 discriminator 2
 1364 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1365 0038 0133     		adds	r3, r3, #1
 1366 003a FB73     		strb	r3, [r7, #15]
 1367              	.L89:
 476:Core/src/main.c ****     {
 1368              		.loc 1 476 27 discriminator 1
 1369 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1370 003e 0F2B     		cmp	r3, #15
 1371 0040 F1D9     		bls	.L91
 1372              	.LBE16:
 481:Core/src/main.c ****         }
 482:Core/src/main.c ****     }
 483:Core/src/main.c **** 
 484:Core/src/main.c ****     return true;
 1373              		.loc 1 484 12
 1374 0042 0123     		movs	r3, #1
 1375              	.L87:
 485:Core/src/main.c **** }...
 1376              		.loc 1 485 1
 1377 0044 1846     		mov	r0, r3
 1378 0046 1437     		adds	r7, r7, #20
 1379              	.LCFI35:
 1380              		.cfi_def_cfa_offset 4
 1381 0048 BD46     		mov	sp, r7
 1382              	.LCFI36:
 1383              		.cfi_def_cfa_register 13
 1384              		@ sp needed
 1385 004a 5DF8047B 		ldr	r7, [sp], #4
 1386              	.LCFI37:
 1387              		.cfi_restore 7
 1388              		.cfi_def_cfa_offset 0
 1389 004e 7047     		bx	lr
 1390              		.cfi_endproc
 1391              	.LFE120:
 1393              		.text
 1394              	.Letext0:
 1395              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1396              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1397              		.file 6 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1398              		.file 7 "Core/inc/aes.h"
 1399              		.file 8 "Core/inc/comms.h"
 1400              		.file 9 "../Shared/inc/fw_info.h"
 1401              		.file 10 "../Shared/inc/ring_buffer.h"
 1402              		.file 11 "../Shared/inc/timer.h"
 1403              		.file 12 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/cc9XkHe1.s 			page 62


 1404              		.file 13 "/usr/arm-none-eabi/include/string.h"
 1405              		.file 14 "../Shared/inc/delay.h"
 1406              		.file 15 "../Shared/inc/rcc.h"
 1407              		.file 16 "../Shared/inc/gpio.h"
 1408              		.file 17 "../Shared/inc/usart.h"
 1409              		.file 18 "Core/inc/bootloaderflash.h"
ARM GAS  /tmp/cc9XkHe1.s 			page 63


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc9XkHe1.s:21     .text.NVIC_SystemReset:00000000 $t
     /tmp/cc9XkHe1.s:26     .text.NVIC_SystemReset:00000000 NVIC_SystemReset
     /tmp/cc9XkHe1.s:87     .text.NVIC_SystemReset:00000024 $d
     /tmp/cc9XkHe1.s:97     .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/cc9XkHe1.s:94     .data.SystemCoreClock:00000000 $d
     /tmp/cc9XkHe1.s:102    .bss.state:00000000 state
     /tmp/cc9XkHe1.s:103    .bss.state:00000000 $d
     /tmp/cc9XkHe1.s:105    .bss.fwLength:00000000 $d
     /tmp/cc9XkHe1.s:108    .bss.fwLength:00000000 fwLength
     /tmp/cc9XkHe1.s:111    .bss.bytesWritten:00000000 $d
     /tmp/cc9XkHe1.s:114    .bss.bytesWritten:00000000 bytesWritten
     /tmp/cc9XkHe1.s:117    .bss.syncSequence:00000000 $d
     /tmp/cc9XkHe1.s:120    .bss.syncSequence:00000000 syncSequence
     /tmp/cc9XkHe1.s:123    .bss.timer:00000000 $d
     /tmp/cc9XkHe1.s:126    .bss.timer:00000000 timer
     /tmp/cc9XkHe1.s:129    .bss.tempPacket:00000000 $d
     /tmp/cc9XkHe1.s:132    .bss.tempPacket:00000000 tempPacket
     /tmp/cc9XkHe1.s:135    .rodata.secretKey:00000000 $d
     /tmp/cc9XkHe1.s:138    .rodata.secretKey:00000000 secretKey
     /tmp/cc9XkHe1.s:146    .bss.dataBuffer:00000000 dataBuffer
     /tmp/cc9XkHe1.s:143    .bss.dataBuffer:00000000 $d
     /tmp/cc9XkHe1.s:153    .bss.ringBuffer:00000000 ringBuffer
     /tmp/cc9XkHe1.s:150    .bss.ringBuffer:00000000 $d
     /tmp/cc9XkHe1.s:156    .text.main:00000000 $t
     /tmp/cc9XkHe1.s:162    .text.main:00000000 main
     /tmp/cc9XkHe1.s:1173   .text.Check_Timeout:00000000 Check_Timeout
     /tmp/cc9XkHe1.s:366    .text.main:00000118 $d
     /tmp/cc9XkHe1.s:373    .text.main:00000134 $t
     /tmp/cc9XkHe1.s:1131   .text.Bootloader_Fail:00000000 Bootloader_Fail
     /tmp/cc9XkHe1.s:1213   .text.Device_ID_Packet:00000000 Device_ID_Packet
     /tmp/cc9XkHe1.s:1306   .text.FW_Length_Packet:00000000 FW_Length_Packet
     /tmp/cc9XkHe1.s:645    .text.main:000002d8 $d
     /tmp/cc9XkHe1.s:659    .text.main:00000304 $t
     /tmp/cc9XkHe1.s:871    .text.Validate_Firmware_Image:00000000 Validate_Firmware_Image
     /tmp/cc9XkHe1.s:735    .text.Jump_Application:00000000 Jump_Application
     /tmp/cc9XkHe1.s:723    .text.main:00000360 $d
     /tmp/cc9XkHe1.s:730    .text.Jump_Application:00000000 $t
     /tmp/cc9XkHe1.s:778    .text.Jump_Application:00000020 $d
     /tmp/cc9XkHe1.s:783    .text.AES_CBC_MAC_Step:00000000 $t
     /tmp/cc9XkHe1.s:788    .text.AES_CBC_MAC_Step:00000000 AES_CBC_MAC_Step
     /tmp/cc9XkHe1.s:866    .text.Validate_Firmware_Image:00000000 $t
     /tmp/cc9XkHe1.s:1118   .text.Validate_Firmware_Image:000001d8 $d
     /tmp/cc9XkHe1.s:1126   .text.Bootloader_Fail:00000000 $t
     /tmp/cc9XkHe1.s:1162   .text.Bootloader_Fail:0000001c $d
     /tmp/cc9XkHe1.s:1168   .text.Check_Timeout:00000000 $t
     /tmp/cc9XkHe1.s:1203   .text.Check_Timeout:00000018 $d
     /tmp/cc9XkHe1.s:1208   .text.Device_ID_Packet:00000000 $t
     /tmp/cc9XkHe1.s:1301   .text.FW_Length_Packet:00000000 $t
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4.stm32f4xx.h.54.f84a67a8e71ba9719846fdff1868826c
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.2eefb68b261e70563a8ac654e712169f
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
ARM GAS  /tmp/cc9XkHe1.s 			page 64


                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_conf.h.3.bc52e76ab6b5c9037500dbf5bb8f9be4
                           .group:00000000 wm4.misc.h.86.a3996e7f17199502fad3c7f62e5cdb3f
                           .group:00000000 wm4.stm32f4xx_adc.h.31.d96d805acd0f0c0392ec4633757dead3
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_cryp.h.31.94bbbb19b99df10306f31e78c333a77b
                           .group:00000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_hash.h.31.5c109425d30f0b9cc0a26ad38182d91f
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_usart.h.31.f8d29b14aa4d39de5495adcc92749d3c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.newlib.h.7.59e76574e8950a1900b83fbbda2ff693
                           .group:00000000 wm4.ieeefp.h.77.5ad60f72ea25fc152400b550ac118212
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4.stddef.h.185.cbb642e1ccd385e8aa504b15cb7fb086
                           .group:00000000 wm4.cdefs.h.49.56fd742369e655e7e8a7e365e706e208
                           .group:00000000 wm4.stddef.h.39.6817658cc6bc4c7c8354d2009e4a5777
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.7f0775353a33c852a1479c008f68cd03
                           .group:00000000 wm4.stdio.h.67.0cf8a9c281ab0b348aef5c02e7e48825
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.aes.h.6.03c4ff6935308a2ffae8392c08242867
                           .group:00000000 wm4.comms.h.3.ce1a4b9790b47ea3a0bb310b36c0a08a
                           .group:00000000 wm4.fw_info.h.3.61925831403ee6d7a74953142af67bb8
ARM GAS  /tmp/cc9XkHe1.s 			page 65


                           .group:00000000 wm4.ring_buffer.h.3.b015d811f8fc871f417b08e146713482
                           .group:00000000 wm4.usart.h.3.fc1d99af933c43d4470302f0a3425192

UNDEFINED SYMBOLS
SysTick_Setup
RCC_Setup
GPIO_Setup
VirtualCOMPort_Setup
Comms_Setup
Ring_Buffer_Setup
Simple_Timer_Setup
USART_Data_Available
USART_Read_Byte
Comms_Create_Single_Byte_Packet
Comms_Write
Simple_Timer_Reset
Comms_Update
Comms_Packets_Available
Comms_Read
Comms_Single_Byte_Packet
delayMS
Bootloader_FLASH_Erase_Main_App
Bootloader_FLASH_Write
delayUS
VirtualCOMPort_Teardown
GPIO_Teardown
RCC_Teardown
Systick_Teardown
AES_EncryptBlock
memcpy
AES_KeySchedule128
memset
memcmp
Simple_Timer_Elapsed
