ARM GAS  /tmp/ccsPm0Yr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c"
  20              		.section	.text.USART_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	USART_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	USART_DeInit:
  28              	.LFB110:
   1:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
   2:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
   3:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @file    stm32f4xx_usart.c
   4:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @author  MCD Application Team
   5:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @version V1.0.2
   6:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @date    05-March-2012
   7:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          transmitter (USART):           
  10:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Initialization and Configuration
  11:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Data transfers
  12:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Multi-Processor Communication
  13:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - LIN mode
  14:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Half-duplex mode
  15:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Smartcard mode
  16:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - IrDA mode
  17:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - DMA transfers management
  18:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           - Interrupts and flags management 
  19:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *           
  20:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  @verbatim
  21:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *      
  22:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          ===================================================================
  23:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                                 How to use this driver
  24:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          ===================================================================
  25:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          1. Enable peripheral clock using the follwoing functions
  26:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             RCC_APB2PeriphClockCmd(RCC_APB2Periph_USARTx, ENABLE) for USART1 and USART6 
  27:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE) for USART2, USART3, UART4 or 
  28:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  29:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          2.  According to the USART mode, enable the GPIO clocks using 
  30:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *              RCC_AHB1PeriphClockCmd() function. (The I/O can be TX, RX, CTS, 
ARM GAS  /tmp/ccsPm0Yr.s 			page 2


  31:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *              or/and SCLK). 
  32:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  33:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          3. Peripheral's alternate function: 
  34:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  35:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  36:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Configure the desired pin in alternate function by:
  37:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  38:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  39:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  40:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                 - Call GPIO_Init() function
  41:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        
  42:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          4. Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware 
  43:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             flow control and Mode(Receiver/Transmitter) using the USART_Init()
  44:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             function.
  45:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  46:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          5. For synchronous mode, enable the clock and program the polarity,
  47:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             phase and last bit using the USART_ClockInit() function.
  48:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  49:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          5. Enable the NVIC and the corresponding interrupt using the function 
  50:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *             USART_ITConfig() if you need to use interrupt mode. 
  51:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  52:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          6. When using the DMA mode 
  53:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   - Configure the DMA using DMA_Init() function
  54:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *                   - Active the needed channel Request using USART_DMACmd() function
  55:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * 
  56:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          7. Enable the USART using the USART_Cmd() function.
  57:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * 
  58:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          8. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  59:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  60:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  61:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          for more details
  62:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          
  63:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          In order to reach higher communication baudrates, it is possible to
  64:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          enable the oversampling by 8 mode using the function USART_OverSampling8Cmd().
  65:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This function should be called after enabling the USART clock (RCC_APBxPeriphClockCmd(
  66:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          and before calling the function USART_Init().
  67:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          
  68:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  @endverbatim
  69:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        
  70:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
  71:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @attention
  72:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  73:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  74:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  75:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  76:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may not use this file except in compliance with the License.
  77:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * You may obtain a copy of the License at:
  78:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  79:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  80:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  81:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  82:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  83:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  84:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * See the License for the specific language governing permissions and
  85:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * limitations under the License.
  86:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
  87:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ******************************************************************************
ARM GAS  /tmp/ccsPm0Yr.s 			page 3


  88:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */ 
  89:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  90:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Includes ------------------------------------------------------------------*/
  91:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_usart.h"
  92:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #include "stm32f4xx_rcc.h"
  93:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  94:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  95:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
  96:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
  97:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
  98:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART 
  99:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief USART driver modules
 100:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 101:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 102:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private typedef -----------------------------------------------------------*/
 104:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private define ------------------------------------------------------------*/
 105:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 106:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR1 register clear Mask ((~(uint16_t)0xE9F3)) */
 107:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR1_CLEAR_MASK            ((uint16_t)(USART_CR1_M | USART_CR1_PCE | \
 108:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
 109:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR1_RE))
 110:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 111:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint16_t)0xF0FF)) */
 112:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint16_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 113:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 114:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 115:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART CR3 register clear Mask ((~(uint16_t)0xFCFF)) */
 116:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define CR3_CLEAR_MASK            ((uint16_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 117:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 118:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*!< USART Interrupts mask */
 119:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** #define IT_MASK                   ((uint16_t)0x001F)
 120:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private macro -------------------------------------------------------------*/
 122:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private variables ---------------------------------------------------------*/
 123:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private function prototypes -----------------------------------------------*/
 124:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /* Private functions ---------------------------------------------------------*/
 125:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 126:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Private_Functions
 127:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 128:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 129:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 130:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 131:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Initialization and Configuration functions 
 132:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 133:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 134:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 135:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                   Initialization and Configuration functions
 136:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 137:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 138:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to initialize the USART 
 139:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   in asynchronous and in synchronous modes.
 140:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    - For the asynchronous mode only these parameters can be configured: 
 141:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Baud Rate
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Word Length 
 143:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Stop Bit
 144:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Parity: If the parity is enabled, then the MSB bit of the data written
ARM GAS  /tmp/ccsPm0Yr.s 			page 4


 145:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           in the data register is transmitted but is changed by the parity bit.
 146:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           Depending on the frame length defined by the M bit (8-bits or 9-bits),
 147:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****           the possible USART frame formats are as listed in the following table:
 148:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+     
 149:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
 150:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------------------|---------------------------------------|             
 151:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 152:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 153:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 154:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 155:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 156:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |---------|-----------|---------------------------------------|  
 157:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 158:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****    +-------------------------------------------------------------+            
 159:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Hardware flow control
 160:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Receiver/transmitter modes
 161:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 162:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART_Init() function follows the USART  asynchronous configuration procedure
 163:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   (details for the procedure are available in reference manual (RM0090)).
 164:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 165:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   - For the synchronous mode in addition to the asynchronous mode parameters these 
 166:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     parameters should be also configured:
 167:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Clock Enabled
 168:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART polarity
 169:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART phase
 170:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART LastBit
 171:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 172:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   These parameters can be configured using the USART_ClockInit() function.
 173:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 174:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 175:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 176:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 177:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 178:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 179:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 180:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 181:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 182:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 183:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 184:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 185:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
  29              		.loc 1 185 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccsPm0Yr.s 			page 5


 186:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 187:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 188:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 189:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USARTx == USART1)
  45              		.loc 1 189 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 2C4A     		ldr	r2, .L9
  48 000c 9342     		cmp	r3, r2
  49 000e 08D1     		bne	.L2
 190:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 191:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  50              		.loc 1 191 5
  51 0010 0121     		movs	r1, #1
  52 0012 1020     		movs	r0, #16
  53 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 192:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  54              		.loc 1 192 5
  55 0018 0021     		movs	r1, #0
  56 001a 1020     		movs	r0, #16
  57 001c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 193:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART2)
 195:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 198:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == USART3)
 200:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 203:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
 204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART4)
 205:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 208:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (USARTx == UART5)
 210:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 214:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 215:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     if (USARTx == USART6)
 217:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     { 
 218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, ENABLE);
 219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 220:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
 221:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 222:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
  58              		.loc 1 222 1
  59 0020 47E0     		b	.L8
  60              	.L2:
 194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
  61              		.loc 1 194 11
  62 0022 7B68     		ldr	r3, [r7, #4]
  63 0024 264A     		ldr	r2, .L9+4
ARM GAS  /tmp/ccsPm0Yr.s 			page 6


  64 0026 9342     		cmp	r3, r2
  65 0028 0AD1     		bne	.L4
 196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
  66              		.loc 1 196 5
  67 002a 0121     		movs	r1, #1
  68 002c 4FF40030 		mov	r0, #131072
  69 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
  70              		.loc 1 197 5
  71 0034 0021     		movs	r1, #0
  72 0036 4FF40030 		mov	r0, #131072
  73 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  74              		.loc 1 222 1
  75 003e 38E0     		b	.L8
  76              	.L4:
 199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
  77              		.loc 1 199 11
  78 0040 7B68     		ldr	r3, [r7, #4]
  79 0042 204A     		ldr	r2, .L9+8
  80 0044 9342     		cmp	r3, r2
  81 0046 0AD1     		bne	.L5
 201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
  82              		.loc 1 201 5
  83 0048 0121     		movs	r1, #1
  84 004a 4FF48020 		mov	r0, #262144
  85 004e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }    
  86              		.loc 1 202 5
  87 0052 0021     		movs	r1, #0
  88 0054 4FF48020 		mov	r0, #262144
  89 0058 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              		.loc 1 222 1
  91 005c 29E0     		b	.L8
  92              	.L5:
 204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
  93              		.loc 1 204 11
  94 005e 7B68     		ldr	r3, [r7, #4]
  95 0060 194A     		ldr	r2, .L9+12
  96 0062 9342     		cmp	r3, r2
  97 0064 0AD1     		bne	.L6
 206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
  98              		.loc 1 206 5
  99 0066 0121     		movs	r1, #1
 100 0068 4FF40020 		mov	r0, #524288
 101 006c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 102              		.loc 1 207 5
 103 0070 0021     		movs	r1, #0
 104 0072 4FF40020 		mov	r0, #524288
 105 0076 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 106              		.loc 1 222 1
 107 007a 1AE0     		b	.L8
 108              	.L6:
 209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 109              		.loc 1 209 11
 110 007c 7B68     		ldr	r3, [r7, #4]
 111 007e 134A     		ldr	r2, .L9+16
ARM GAS  /tmp/ccsPm0Yr.s 			page 7


 112 0080 9342     		cmp	r3, r2
 113 0082 0AD1     		bne	.L7
 211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 114              		.loc 1 211 5
 115 0084 0121     		movs	r1, #1
 116 0086 4FF48010 		mov	r0, #1048576
 117 008a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }     
 118              		.loc 1 212 5
 119 008e 0021     		movs	r1, #0
 120 0090 4FF48010 		mov	r0, #1048576
 121 0094 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 122              		.loc 1 222 1
 123 0098 0BE0     		b	.L8
 124              	.L7:
 216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     { 
 125              		.loc 1 216 8
 126 009a 7B68     		ldr	r3, [r7, #4]
 127 009c 0C4A     		ldr	r2, .L9+20
 128 009e 9342     		cmp	r3, r2
 129 00a0 07D1     		bne	.L8
 218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART6, DISABLE);
 130              		.loc 1 218 7
 131 00a2 0121     		movs	r1, #1
 132 00a4 2020     		movs	r0, #32
 133 00a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     }
 134              		.loc 1 219 7
 135 00aa 0021     		movs	r1, #0
 136 00ac 2020     		movs	r0, #32
 137 00ae FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 138              	.L8:
 139              		.loc 1 222 1
 140 00b2 00BF     		nop
 141 00b4 0837     		adds	r7, r7, #8
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 8
 144 00b6 BD46     		mov	sp, r7
 145              	.LCFI4:
 146              		.cfi_def_cfa_register 13
 147              		@ sp needed
 148 00b8 80BD     		pop	{r7, pc}
 149              	.L10:
 150 00ba 00BF     		.align	2
 151              	.L9:
 152 00bc 00100140 		.word	1073811456
 153 00c0 00440040 		.word	1073759232
 154 00c4 00480040 		.word	1073760256
 155 00c8 004C0040 		.word	1073761280
 156 00cc 00500040 		.word	1073762304
 157 00d0 00140140 		.word	1073812480
 158              		.cfi_endproc
 159              	.LFE110:
 161              		.section	.text.USART_Init,"ax",%progbits
 162              		.align	1
 163              		.global	USART_Init
 164              		.syntax unified
ARM GAS  /tmp/ccsPm0Yr.s 			page 8


 165              		.thumb
 166              		.thumb_func
 168              	USART_Init:
 169              	.LFB111:
 223:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 224:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 225:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 226:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         parameters in the USART_InitStruct .
 227:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 228:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 229:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure that contains
 230:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         the configuration information for the specified USART peripheral.
 231:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 232:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 233:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 234:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 170              		.loc 1 234 1
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 40
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174 0000 80B5     		push	{r7, lr}
 175              	.LCFI5:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 8AB0     		sub	sp, sp, #40
 180              	.LCFI6:
 181              		.cfi_def_cfa_offset 48
 182 0004 00AF     		add	r7, sp, #0
 183              	.LCFI7:
 184              		.cfi_def_cfa_register 7
 185 0006 7860     		str	r0, [r7, #4]
 186 0008 3960     		str	r1, [r7]
 235:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00, apbclock = 0x00;
 187              		.loc 1 235 12
 188 000a 0023     		movs	r3, #0
 189 000c 7B62     		str	r3, [r7, #36]
 190              		.loc 1 235 27
 191 000e 0023     		movs	r3, #0
 192 0010 3B62     		str	r3, [r7, #32]
 236:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t integerdivider = 0x00;
 193              		.loc 1 236 12
 194 0012 0023     		movs	r3, #0
 195 0014 FB61     		str	r3, [r7, #28]
 237:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t fractionaldivider = 0x00;
 196              		.loc 1 237 12
 197 0016 0023     		movs	r3, #0
 198 0018 BB61     		str	r3, [r7, #24]
 238:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 240:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 241:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 242:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 243:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 244:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 246:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
ARM GAS  /tmp/ccsPm0Yr.s 			page 9


 247:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 248:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 249:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 250:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 251:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 252:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
 253:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 254:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 255:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 199              		.loc 1 256 18
 200 001a 7B68     		ldr	r3, [r7, #4]
 201 001c 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 202 001e 9BB2     		uxth	r3, r3
 203              		.loc 1 256 10
 204 0020 7B62     		str	r3, [r7, #36]
 257:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 258:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear STOP[13:12] bits */
 259:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 205              		.loc 1 259 10
 206 0022 7B6A     		ldr	r3, [r7, #36]
 207 0024 23F44053 		bic	r3, r3, #12288
 208 0028 7B62     		str	r3, [r7, #36]
 260:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 261:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit :
 262:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set STOP[13:12] bits according to USART_StopBits value */
 263:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 209              		.loc 1 263 39
 210 002a 3B68     		ldr	r3, [r7]
 211 002c DB88     		ldrh	r3, [r3, #6]
 212              		.loc 1 263 13
 213 002e 1A46     		mov	r2, r3
 214              		.loc 1 263 10
 215 0030 7B6A     		ldr	r3, [r7, #36]
 216 0032 1343     		orrs	r3, r3, r2
 217 0034 7B62     		str	r3, [r7, #36]
 264:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 265:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 266:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 218              		.loc 1 266 17
 219 0036 7B6A     		ldr	r3, [r7, #36]
 220 0038 9AB2     		uxth	r2, r3
 221              		.loc 1 266 15
 222 003a 7B68     		ldr	r3, [r7, #4]
 223 003c 1A82     		strh	r2, [r3, #16]	@ movhi
 267:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR1 Configuration -----------------------*/
 269:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR1;
 224              		.loc 1 269 18
 225 003e 7B68     		ldr	r3, [r7, #4]
 226 0040 9B89     		ldrh	r3, [r3, #12]	@ movhi
 227 0042 9BB2     		uxth	r3, r3
 228              		.loc 1 269 10
 229 0044 7B62     		str	r3, [r7, #36]
 270:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 271:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 272:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
ARM GAS  /tmp/ccsPm0Yr.s 			page 10


 230              		.loc 1 272 10
 231 0046 7B6A     		ldr	r3, [r7, #36]
 232 0048 23F4B053 		bic	r3, r3, #5632
 233 004c 23F00C03 		bic	r3, r3, #12
 234 0050 7B62     		str	r3, [r7, #36]
 273:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 274:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Word Length, Parity and mode: 
 275:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set the M bits according to USART_WordLength value 
 276:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set PCE and PS bits according to USART_Parity value
 277:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      Set TE and RE bits according to USART_Mode value */
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 235              		.loc 1 278 39
 236 0052 3B68     		ldr	r3, [r7]
 237 0054 9A88     		ldrh	r2, [r3, #4]
 238              		.loc 1 278 76
 239 0056 3B68     		ldr	r3, [r7]
 240 0058 1B89     		ldrh	r3, [r3, #8]
 241              		.loc 1 278 91
 242 005a 1343     		orrs	r3, r3, r2
 243 005c 9AB2     		uxth	r2, r3
 279:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 244              		.loc 1 279 29
 245 005e 3B68     		ldr	r3, [r7]
 246 0060 5B89     		ldrh	r3, [r3, #10]
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 247              		.loc 1 278 91
 248 0062 1343     		orrs	r3, r3, r2
 249 0064 9BB2     		uxth	r3, r3
 250 0066 1A46     		mov	r2, r3
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****             USART_InitStruct->USART_Mode;
 251              		.loc 1 278 10
 252 0068 7B6A     		ldr	r3, [r7, #36]
 253 006a 1343     		orrs	r3, r3, r2
 254 006c 7B62     		str	r3, [r7, #36]
 280:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 281:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR1 */
 282:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 = (uint16_t)tmpreg;
 255              		.loc 1 282 17
 256 006e 7B6A     		ldr	r3, [r7, #36]
 257 0070 9AB2     		uxth	r2, r3
 258              		.loc 1 282 15
 259 0072 7B68     		ldr	r3, [r7, #4]
 260 0074 9A81     		strh	r2, [r3, #12]	@ movhi
 283:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 284:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR3 Configuration -----------------------*/  
 285:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR3;
 261              		.loc 1 285 18
 262 0076 7B68     		ldr	r3, [r7, #4]
 263 0078 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 264 007a 9BB2     		uxth	r3, r3
 265              		.loc 1 285 10
 266 007c 7B62     		str	r3, [r7, #36]
 286:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 287:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CTSE and RTSE bits */
 288:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 267              		.loc 1 288 10
 268 007e 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/ccsPm0Yr.s 			page 11


 269 0080 23F44073 		bic	r3, r3, #768
 270 0084 7B62     		str	r3, [r7, #36]
 289:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 290:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART HFC : 
 291:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 292:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 271              		.loc 1 292 29
 272 0086 3B68     		ldr	r3, [r7]
 273 0088 9B89     		ldrh	r3, [r3, #12]
 274 008a 1A46     		mov	r2, r3
 275              		.loc 1 292 10
 276 008c 7B6A     		ldr	r3, [r7, #36]
 277 008e 1343     		orrs	r3, r3, r2
 278 0090 7B62     		str	r3, [r7, #36]
 293:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 294:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR3 */
 295:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 = (uint16_t)tmpreg;
 279              		.loc 1 295 17
 280 0092 7B6A     		ldr	r3, [r7, #36]
 281 0094 9AB2     		uxth	r2, r3
 282              		.loc 1 295 15
 283 0096 7B68     		ldr	r3, [r7, #4]
 284 0098 9A82     		strh	r2, [r3, #20]	@ movhi
 296:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 297:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART BRR Configuration -----------------------*/
 298:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Baud Rate */
 299:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 285              		.loc 1 299 3
 286 009a 07F10803 		add	r3, r7, #8
 287 009e 1846     		mov	r0, r3
 288 00a0 FFF7FEFF 		bl	RCC_GetClocksFreq
 300:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 301:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx == USART1) || (USARTx == USART6))
 289              		.loc 1 301 6
 290 00a4 7B68     		ldr	r3, [r7, #4]
 291 00a6 304A     		ldr	r2, .L19
 292 00a8 9342     		cmp	r3, r2
 293 00aa 03D0     		beq	.L12
 294              		.loc 1 301 26 discriminator 1
 295 00ac 7B68     		ldr	r3, [r7, #4]
 296 00ae 2F4A     		ldr	r2, .L19+4
 297 00b0 9342     		cmp	r3, r2
 298 00b2 02D1     		bne	.L13
 299              	.L12:
 302:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 303:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 300              		.loc 1 303 14
 301 00b4 7B69     		ldr	r3, [r7, #20]
 302 00b6 3B62     		str	r3, [r7, #32]
 303 00b8 01E0     		b	.L14
 304              	.L13:
 304:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 305:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 306:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 307:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 305              		.loc 1 307 14
 306 00ba 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccsPm0Yr.s 			page 12


 307 00bc 3B62     		str	r3, [r7, #32]
 308              	.L14:
 308:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 309:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 310:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the integer part */
 311:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 309              		.loc 1 311 14
 310 00be 7B68     		ldr	r3, [r7, #4]
 311 00c0 9B89     		ldrh	r3, [r3, #12]	@ movhi
 312 00c2 9BB2     		uxth	r3, r3
 313              		.loc 1 311 39
 314 00c4 1BB2     		sxth	r3, r3
 315              		.loc 1 311 6
 316 00c6 002B     		cmp	r3, #0
 317 00c8 0CDA     		bge	.L15
 312:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 313:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 8 Samples */
 314:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
 318              		.loc 1 314 27
 319 00ca 3A6A     		ldr	r2, [r7, #32]
 320 00cc 1346     		mov	r3, r2
 321 00ce 9B00     		lsls	r3, r3, #2
 322 00d0 1344     		add	r3, r3, r2
 323 00d2 9A00     		lsls	r2, r3, #2
 324 00d4 1A44     		add	r2, r2, r3
 325              		.loc 1 314 63
 326 00d6 3B68     		ldr	r3, [r7]
 327 00d8 1B68     		ldr	r3, [r3]
 328              		.loc 1 314 44
 329 00da 5B00     		lsls	r3, r3, #1
 330              		.loc 1 314 20
 331 00dc B2FBF3F3 		udiv	r3, r2, r3
 332 00e0 FB61     		str	r3, [r7, #28]
 333 00e2 0BE0     		b	.L16
 334              	.L15:
 315:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 316:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 317:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 318:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Integer part computing in case Oversampling mode is 16 Samples */
 319:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
 335              		.loc 1 319 27
 336 00e4 3A6A     		ldr	r2, [r7, #32]
 337 00e6 1346     		mov	r3, r2
 338 00e8 9B00     		lsls	r3, r3, #2
 339 00ea 1344     		add	r3, r3, r2
 340 00ec 9A00     		lsls	r2, r3, #2
 341 00ee 1A44     		add	r2, r2, r3
 342              		.loc 1 319 63
 343 00f0 3B68     		ldr	r3, [r7]
 344 00f2 1B68     		ldr	r3, [r3]
 345              		.loc 1 319 44
 346 00f4 9B00     		lsls	r3, r3, #2
 347              		.loc 1 319 20
 348 00f6 B2FBF3F3 		udiv	r3, r2, r3
 349 00fa FB61     		str	r3, [r7, #28]
 350              	.L16:
 320:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /tmp/ccsPm0Yr.s 			page 13


 321:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = (integerdivider / 100) << 4;
 351              		.loc 1 321 28
 352 00fc FB69     		ldr	r3, [r7, #28]
 353 00fe 1C4A     		ldr	r2, .L19+8
 354 0100 A2FB0323 		umull	r2, r3, r2, r3
 355 0104 5B09     		lsrs	r3, r3, #5
 356              		.loc 1 321 10
 357 0106 1B01     		lsls	r3, r3, #4
 358 0108 7B62     		str	r3, [r7, #36]
 322:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 323:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Determine the fractional part */
 324:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 359              		.loc 1 324 55
 360 010a 7B6A     		ldr	r3, [r7, #36]
 361 010c 1B09     		lsrs	r3, r3, #4
 362              		.loc 1 324 45
 363 010e 6422     		movs	r2, #100
 364 0110 02FB03F3 		mul	r3, r2, r3
 365              		.loc 1 324 21
 366 0114 FA69     		ldr	r2, [r7, #28]
 367 0116 D31A     		subs	r3, r2, r3
 368 0118 BB61     		str	r3, [r7, #24]
 325:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 326:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Implement the fractional part in the register */
 327:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 369              		.loc 1 327 14
 370 011a 7B68     		ldr	r3, [r7, #4]
 371 011c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 372 011e 9BB2     		uxth	r3, r3
 373              		.loc 1 327 39
 374 0120 1BB2     		sxth	r3, r3
 375              		.loc 1 327 6
 376 0122 002B     		cmp	r3, #0
 377 0124 0CDA     		bge	.L17
 328:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 329:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 378              		.loc 1 329 37
 379 0126 BB69     		ldr	r3, [r7, #24]
 380 0128 DB00     		lsls	r3, r3, #3
 381              		.loc 1 329 42
 382 012a 3233     		adds	r3, r3, #50
 383              		.loc 1 329 48
 384 012c 104A     		ldr	r2, .L19+8
 385 012e A2FB0323 		umull	r2, r3, r2, r3
 386 0132 5B09     		lsrs	r3, r3, #5
 387              		.loc 1 329 56
 388 0134 03F00703 		and	r3, r3, #7
 389              		.loc 1 329 12
 390 0138 7A6A     		ldr	r2, [r7, #36]
 391 013a 1343     		orrs	r3, r3, r2
 392 013c 7B62     		str	r3, [r7, #36]
 393 013e 0BE0     		b	.L18
 394              	.L17:
 330:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 331:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
 332:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 333:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
ARM GAS  /tmp/ccsPm0Yr.s 			page 14


 395              		.loc 1 333 37
 396 0140 BB69     		ldr	r3, [r7, #24]
 397 0142 1B01     		lsls	r3, r3, #4
 398              		.loc 1 333 43
 399 0144 3233     		adds	r3, r3, #50
 400              		.loc 1 333 49
 401 0146 0A4A     		ldr	r2, .L19+8
 402 0148 A2FB0323 		umull	r2, r3, r2, r3
 403 014c 5B09     		lsrs	r3, r3, #5
 404              		.loc 1 333 57
 405 014e 03F00F03 		and	r3, r3, #15
 406              		.loc 1 333 12
 407 0152 7A6A     		ldr	r2, [r7, #36]
 408 0154 1343     		orrs	r3, r3, r2
 409 0156 7B62     		str	r3, [r7, #36]
 410              	.L18:
 334:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 335:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 336:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART BRR register */
 337:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->BRR = (uint16_t)tmpreg;
 411              		.loc 1 337 17
 412 0158 7B6A     		ldr	r3, [r7, #36]
 413 015a 9AB2     		uxth	r2, r3
 414              		.loc 1 337 15
 415 015c 7B68     		ldr	r3, [r7, #4]
 416 015e 1A81     		strh	r2, [r3, #8]	@ movhi
 338:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 417              		.loc 1 338 1
 418 0160 00BF     		nop
 419 0162 2837     		adds	r7, r7, #40
 420              	.LCFI8:
 421              		.cfi_def_cfa_offset 8
 422 0164 BD46     		mov	sp, r7
 423              	.LCFI9:
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 0166 80BD     		pop	{r7, pc}
 427              	.L20:
 428              		.align	2
 429              	.L19:
 430 0168 00100140 		.word	1073811456
 431 016c 00140140 		.word	1073812480
 432 0170 1F85EB51 		.word	1374389535
 433              		.cfi_endproc
 434              	.LFE111:
 436              		.section	.text.USART_StructInit,"ax",%progbits
 437              		.align	1
 438              		.global	USART_StructInit
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 443              	USART_StructInit:
 444              	.LFB112:
 339:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 340:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 341:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 342:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure which will
ARM GAS  /tmp/ccsPm0Yr.s 			page 15


 343:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         be initialized.
 344:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 345:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 346:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 347:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 445              		.loc 1 347 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 8
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0000 80B4     		push	{r7}
 451              	.LCFI10:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              	.LCFI11:
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI12:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 348:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_InitStruct members default value */
 349:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 461              		.loc 1 349 36
 462 0008 7B68     		ldr	r3, [r7, #4]
 463 000a 4FF41652 		mov	r2, #9600
 464 000e 1A60     		str	r2, [r3]
 350:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 465              		.loc 1 350 38
 466 0010 7B68     		ldr	r3, [r7, #4]
 467 0012 0022     		movs	r2, #0
 468 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 351:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 469              		.loc 1 351 36
 470 0016 7B68     		ldr	r3, [r7, #4]
 471 0018 0022     		movs	r2, #0
 472 001a DA80     		strh	r2, [r3, #6]	@ movhi
 352:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 473              		.loc 1 352 34
 474 001c 7B68     		ldr	r3, [r7, #4]
 475 001e 0022     		movs	r2, #0
 476 0020 1A81     		strh	r2, [r3, #8]	@ movhi
 353:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 477              		.loc 1 353 32
 478 0022 7B68     		ldr	r3, [r7, #4]
 479 0024 0C22     		movs	r2, #12
 480 0026 5A81     		strh	r2, [r3, #10]	@ movhi
 354:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;  
 481              		.loc 1 354 47
 482 0028 7B68     		ldr	r3, [r7, #4]
 483 002a 0022     		movs	r2, #0
 484 002c 9A81     		strh	r2, [r3, #12]	@ movhi
 355:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 485              		.loc 1 355 1
 486 002e 00BF     		nop
 487 0030 0C37     		adds	r7, r7, #12
 488              	.LCFI13:
ARM GAS  /tmp/ccsPm0Yr.s 			page 16


 489              		.cfi_def_cfa_offset 4
 490 0032 BD46     		mov	sp, r7
 491              	.LCFI14:
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 0034 5DF8047B 		ldr	r7, [sp], #4
 495              	.LCFI15:
 496              		.cfi_restore 7
 497              		.cfi_def_cfa_offset 0
 498 0038 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE112:
 502              		.section	.text.USART_ClockInit,"ax",%progbits
 503              		.align	1
 504              		.global	USART_ClockInit
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 509              	USART_ClockInit:
 510              	.LFB113:
 356:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 357:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 358:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the 
 359:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         specified parameters in the USART_ClockInitStruct .
 360:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART peripheral.
 361:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure that
 362:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         contains the configuration information for the specified  USART peripheral.
 363:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The Smart Card and Synchronous modes are not available for UART4 and UART5.    
 364:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 365:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 366:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 367:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 511              		.loc 1 367 1
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 16
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516 0000 80B4     		push	{r7}
 517              	.LCFI16:
 518              		.cfi_def_cfa_offset 4
 519              		.cfi_offset 7, -4
 520 0002 85B0     		sub	sp, sp, #20
 521              	.LCFI17:
 522              		.cfi_def_cfa_offset 24
 523 0004 00AF     		add	r7, sp, #0
 524              	.LCFI18:
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 527 0008 3960     		str	r1, [r7]
 368:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t tmpreg = 0x00;
 528              		.loc 1 368 12
 529 000a 0023     		movs	r3, #0
 530 000c FB60     		str	r3, [r7, #12]
 369:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 370:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 371:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 372:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
ARM GAS  /tmp/ccsPm0Yr.s 			page 17


 373:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 374:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 375:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 376:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 377:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg = USARTx->CR2;
 531              		.loc 1 377 18
 532 000e 7B68     		ldr	r3, [r7, #4]
 533 0010 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 534 0012 9BB2     		uxth	r3, r3
 535              		.loc 1 377 10
 536 0014 FB60     		str	r3, [r7, #12]
 378:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear CLKEN, CPOL, CPHA and LBCL bits */
 379:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 537              		.loc 1 379 10
 538 0016 FB68     		ldr	r3, [r7, #12]
 539 0018 23F47063 		bic	r3, r3, #3840
 540 001c FB60     		str	r3, [r7, #12]
 380:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Configure the USART Clock, CPOL, CPHA and LastBit ------------*/
 381:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 382:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 383:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 384:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 385:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   tmpreg |= (uint32_t)USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 541              		.loc 1 385 44
 542 001e 3B68     		ldr	r3, [r7]
 543 0020 1A88     		ldrh	r2, [r3]
 544              		.loc 1 385 81
 545 0022 3B68     		ldr	r3, [r7]
 546 0024 5B88     		ldrh	r3, [r3, #2]
 386:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 547              		.loc 1 386 52
 548 0026 1343     		orrs	r3, r3, r2
 549 0028 9AB2     		uxth	r2, r3
 550              		.loc 1 386 39
 551 002a 3B68     		ldr	r3, [r7]
 552 002c 9B88     		ldrh	r3, [r3, #4]
 553              		.loc 1 386 52
 554 002e 1343     		orrs	r3, r3, r2
 555 0030 9AB2     		uxth	r2, r3
 556              		.loc 1 386 75
 557 0032 3B68     		ldr	r3, [r7]
 558 0034 DB88     		ldrh	r3, [r3, #6]
 559              		.loc 1 386 52
 560 0036 1343     		orrs	r3, r3, r2
 561 0038 9BB2     		uxth	r3, r3
 562 003a 1A46     		mov	r2, r3
 385:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                  USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit;
 563              		.loc 1 385 10
 564 003c FB68     		ldr	r3, [r7, #12]
 565 003e 1343     		orrs	r3, r3, r2
 566 0040 FB60     		str	r3, [r7, #12]
 387:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Write to USART CR2 */
 388:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 = (uint16_t)tmpreg;
 567              		.loc 1 388 17
 568 0042 FB68     		ldr	r3, [r7, #12]
 569 0044 9AB2     		uxth	r2, r3
 570              		.loc 1 388 15
ARM GAS  /tmp/ccsPm0Yr.s 			page 18


 571 0046 7B68     		ldr	r3, [r7, #4]
 572 0048 1A82     		strh	r2, [r3, #16]	@ movhi
 389:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 573              		.loc 1 389 1
 574 004a 00BF     		nop
 575 004c 1437     		adds	r7, r7, #20
 576              	.LCFI19:
 577              		.cfi_def_cfa_offset 4
 578 004e BD46     		mov	sp, r7
 579              	.LCFI20:
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0050 5DF8047B 		ldr	r7, [sp], #4
 583              	.LCFI21:
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 0054 7047     		bx	lr
 587              		.cfi_endproc
 588              	.LFE113:
 590              		.section	.text.USART_ClockStructInit,"ax",%progbits
 591              		.align	1
 592              		.global	USART_ClockStructInit
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 597              	USART_ClockStructInit:
 598              	.LFB114:
 390:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 391:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 392:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 393:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef structure
 394:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         which will be initialized.
 395:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 396:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 397:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 398:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 599              		.loc 1 398 1
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 8
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 80B4     		push	{r7}
 605              	.LCFI22:
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 0002 83B0     		sub	sp, sp, #12
 609              	.LCFI23:
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI24:
 613              		.cfi_def_cfa_register 7
 614 0006 7860     		str	r0, [r7, #4]
 399:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* USART_ClockInitStruct members default value */
 400:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 615              		.loc 1 400 38
 616 0008 7B68     		ldr	r3, [r7, #4]
 617 000a 0022     		movs	r2, #0
ARM GAS  /tmp/ccsPm0Yr.s 			page 19


 618 000c 1A80     		strh	r2, [r3]	@ movhi
 401:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 619              		.loc 1 401 37
 620 000e 7B68     		ldr	r3, [r7, #4]
 621 0010 0022     		movs	r2, #0
 622 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 402:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 623              		.loc 1 402 37
 624 0014 7B68     		ldr	r3, [r7, #4]
 625 0016 0022     		movs	r2, #0
 626 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 403:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 627              		.loc 1 403 40
 628 001a 7B68     		ldr	r3, [r7, #4]
 629 001c 0022     		movs	r2, #0
 630 001e DA80     		strh	r2, [r3, #6]	@ movhi
 404:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 631              		.loc 1 404 1
 632 0020 00BF     		nop
 633 0022 0C37     		adds	r7, r7, #12
 634              	.LCFI25:
 635              		.cfi_def_cfa_offset 4
 636 0024 BD46     		mov	sp, r7
 637              	.LCFI26:
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0026 5DF8047B 		ldr	r7, [sp], #4
 641              	.LCFI27:
 642              		.cfi_restore 7
 643              		.cfi_def_cfa_offset 0
 644 002a 7047     		bx	lr
 645              		.cfi_endproc
 646              	.LFE114:
 648              		.section	.text.USART_Cmd,"ax",%progbits
 649              		.align	1
 650              		.global	USART_Cmd
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	USART_Cmd:
 656              	.LFB115:
 405:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 406:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 407:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 408:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 409:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 410:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
 411:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 412:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 413:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 414:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 415:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 657              		.loc 1 415 1
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
ARM GAS  /tmp/ccsPm0Yr.s 			page 20


 662 0000 80B4     		push	{r7}
 663              	.LCFI28:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              	.LCFI29:
 668              		.cfi_def_cfa_offset 16
 669 0004 00AF     		add	r7, sp, #0
 670              	.LCFI30:
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 673 0008 0B46     		mov	r3, r1
 674 000a FB70     		strb	r3, [r7, #3]
 416:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 417:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 418:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 419:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 420:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 675              		.loc 1 420 6
 676 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 677 000e 002B     		cmp	r3, #0
 678 0010 08D0     		beq	.L25
 421:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 422:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 423:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 679              		.loc 1 423 11
 680 0012 7B68     		ldr	r3, [r7, #4]
 681 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 682 0016 9BB2     		uxth	r3, r3
 683              		.loc 1 423 17
 684 0018 43F40053 		orr	r3, r3, #8192
 685 001c 9AB2     		uxth	r2, r3
 686 001e 7B68     		ldr	r3, [r7, #4]
 687 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 424:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 425:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 426:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 427:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 428:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_UE);
 429:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 430:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 688              		.loc 1 430 1
 689 0022 07E0     		b	.L27
 690              	.L25:
 428:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 691              		.loc 1 428 11
 692 0024 7B68     		ldr	r3, [r7, #4]
 693 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 694 0028 9BB2     		uxth	r3, r3
 428:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 695              		.loc 1 428 17
 696 002a 23F40053 		bic	r3, r3, #8192
 697 002e 9AB2     		uxth	r2, r3
 698 0030 7B68     		ldr	r3, [r7, #4]
 699 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 700              	.L27:
 701              		.loc 1 430 1
ARM GAS  /tmp/ccsPm0Yr.s 			page 21


 702 0034 00BF     		nop
 703 0036 0C37     		adds	r7, r7, #12
 704              	.LCFI31:
 705              		.cfi_def_cfa_offset 4
 706 0038 BD46     		mov	sp, r7
 707              	.LCFI32:
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 003a 5DF8047B 		ldr	r7, [sp], #4
 711              	.LCFI33:
 712              		.cfi_restore 7
 713              		.cfi_def_cfa_offset 0
 714 003e 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE115:
 718              		.section	.text.USART_SetPrescaler,"ax",%progbits
 719              		.align	1
 720              		.global	USART_SetPrescaler
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	USART_SetPrescaler:
 726              	.LFB116:
 431:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 432:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 433:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the system clock prescaler.
 434:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 435:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 436:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock. 
 437:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   The function is used for IrDA mode with UART4 and UART5.   
 438:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 439:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 440:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 441:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** { 
 727              		.loc 1 441 1
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 8
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731              		@ link register save eliminated.
 732 0000 80B4     		push	{r7}
 733              	.LCFI34:
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 7, -4
 736 0002 83B0     		sub	sp, sp, #12
 737              	.LCFI35:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI36:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 743 0008 0B46     		mov	r3, r1
 744 000a FB70     		strb	r3, [r7, #3]
 442:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 443:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 444:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 445:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART prescaler */
 446:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
ARM GAS  /tmp/ccsPm0Yr.s 			page 22


 745              		.loc 1 446 9
 746 000c 7B68     		ldr	r3, [r7, #4]
 747 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 748 0010 9BB2     		uxth	r3, r3
 749              		.loc 1 446 16
 750 0012 23F0FF03 		bic	r3, r3, #255
 751 0016 9AB2     		uxth	r2, r3
 752 0018 7B68     		ldr	r3, [r7, #4]
 753 001a 1A83     		strh	r2, [r3, #24]	@ movhi
 447:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART prescaler */
 448:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 754              		.loc 1 448 9
 755 001c 7B68     		ldr	r3, [r7, #4]
 756 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 757 0020 9AB2     		uxth	r2, r3
 758              		.loc 1 448 16
 759 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 760 0024 9BB2     		uxth	r3, r3
 761 0026 1343     		orrs	r3, r3, r2
 762 0028 9AB2     		uxth	r2, r3
 763 002a 7B68     		ldr	r3, [r7, #4]
 764 002c 1A83     		strh	r2, [r3, #24]	@ movhi
 449:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 765              		.loc 1 449 1
 766 002e 00BF     		nop
 767 0030 0C37     		adds	r7, r7, #12
 768              	.LCFI37:
 769              		.cfi_def_cfa_offset 4
 770 0032 BD46     		mov	sp, r7
 771              	.LCFI38:
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 0034 5DF8047B 		ldr	r7, [sp], #4
 775              	.LCFI39:
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0038 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE116:
 782              		.section	.text.USART_OverSampling8Cmd,"ax",%progbits
 783              		.align	1
 784              		.global	USART_OverSampling8Cmd
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	USART_OverSampling8Cmd:
 790              	.LFB117:
 450:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 451:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 452:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 453:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   This function has to be called before calling USART_Init() function
 454:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         in order to have correct baudrate Divider value.
 455:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 456:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 457:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 458:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 459:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
ARM GAS  /tmp/ccsPm0Yr.s 			page 23


 460:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 461:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 462:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 791              		.loc 1 462 1
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 0000 80B4     		push	{r7}
 797              	.LCFI40:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 0002 83B0     		sub	sp, sp, #12
 801              	.LCFI41:
 802              		.cfi_def_cfa_offset 16
 803 0004 00AF     		add	r7, sp, #0
 804              	.LCFI42:
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 807 0008 0B46     		mov	r3, r1
 808 000a FB70     		strb	r3, [r7, #3]
 463:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 464:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 465:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 466:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 467:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 809              		.loc 1 467 6
 810 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 811 000e 002B     		cmp	r3, #0
 812 0010 0AD0     		beq	.L30
 468:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 469:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 470:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 813              		.loc 1 470 11
 814 0012 7B68     		ldr	r3, [r7, #4]
 815 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 816 0016 9BB2     		uxth	r3, r3
 817              		.loc 1 470 17
 818 0018 6FEA4343 		mvn	r3, r3, lsl #17
 819 001c 6FEA5343 		mvn	r3, r3, lsr #17
 820 0020 9AB2     		uxth	r2, r3
 821 0022 7B68     		ldr	r3, [r7, #4]
 822 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 471:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 472:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 473:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 474:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 475:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_OVER8);
 476:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 477:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }  
 823              		.loc 1 477 1
 824 0026 07E0     		b	.L32
 825              	.L30:
 475:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 826              		.loc 1 475 11
 827 0028 7B68     		ldr	r3, [r7, #4]
 828 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
ARM GAS  /tmp/ccsPm0Yr.s 			page 24


 829 002c 9BB2     		uxth	r3, r3
 475:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 830              		.loc 1 475 17
 831 002e C3F30E03 		ubfx	r3, r3, #0, #15
 832 0032 9AB2     		uxth	r2, r3
 833 0034 7B68     		ldr	r3, [r7, #4]
 834 0036 9A81     		strh	r2, [r3, #12]	@ movhi
 835              	.L32:
 836              		.loc 1 477 1
 837 0038 00BF     		nop
 838 003a 0C37     		adds	r7, r7, #12
 839              	.LCFI43:
 840              		.cfi_def_cfa_offset 4
 841 003c BD46     		mov	sp, r7
 842              	.LCFI44:
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 003e 5DF8047B 		ldr	r7, [sp], #4
 846              	.LCFI45:
 847              		.cfi_restore 7
 848              		.cfi_def_cfa_offset 0
 849 0042 7047     		bx	lr
 850              		.cfi_endproc
 851              	.LFE117:
 853              		.section	.text.USART_OneBitMethodCmd,"ax",%progbits
 854              		.align	1
 855              		.global	USART_OneBitMethodCmd
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 860              	USART_OneBitMethodCmd:
 861              	.LFB118:
 478:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 479:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 480:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 481:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 482:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 483:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 484:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 485:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 486:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 487:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 488:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 862              		.loc 1 488 1
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 8
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867 0000 80B4     		push	{r7}
 868              	.LCFI46:
 869              		.cfi_def_cfa_offset 4
 870              		.cfi_offset 7, -4
 871 0002 83B0     		sub	sp, sp, #12
 872              	.LCFI47:
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              	.LCFI48:
ARM GAS  /tmp/ccsPm0Yr.s 			page 25


 876              		.cfi_def_cfa_register 7
 877 0006 7860     		str	r0, [r7, #4]
 878 0008 0B46     		mov	r3, r1
 879 000a FB70     		strb	r3, [r7, #3]
 489:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 490:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 491:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 492:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 493:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 880              		.loc 1 493 6
 881 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 882 000e 002B     		cmp	r3, #0
 883 0010 08D0     		beq	.L34
 494:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 495:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 496:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 884              		.loc 1 496 11
 885 0012 7B68     		ldr	r3, [r7, #4]
 886 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 887 0016 9BB2     		uxth	r3, r3
 888              		.loc 1 496 17
 889 0018 43F40063 		orr	r3, r3, #2048
 890 001c 9AB2     		uxth	r2, r3
 891 001e 7B68     		ldr	r3, [r7, #4]
 892 0020 9A82     		strh	r2, [r3, #20]	@ movhi
 497:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 498:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 499:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 500:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 501:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_ONEBIT);
 502:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 503:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 893              		.loc 1 503 1
 894 0022 07E0     		b	.L36
 895              	.L34:
 501:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 896              		.loc 1 501 11
 897 0024 7B68     		ldr	r3, [r7, #4]
 898 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 899 0028 9BB2     		uxth	r3, r3
 501:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 900              		.loc 1 501 17
 901 002a 23F40063 		bic	r3, r3, #2048
 902 002e 9AB2     		uxth	r2, r3
 903 0030 7B68     		ldr	r3, [r7, #4]
 904 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 905              	.L36:
 906              		.loc 1 503 1
 907 0034 00BF     		nop
 908 0036 0C37     		adds	r7, r7, #12
 909              	.LCFI49:
 910              		.cfi_def_cfa_offset 4
 911 0038 BD46     		mov	sp, r7
 912              	.LCFI50:
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 003a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccsPm0Yr.s 			page 26


 916              	.LCFI51:
 917              		.cfi_restore 7
 918              		.cfi_def_cfa_offset 0
 919 003e 7047     		bx	lr
 920              		.cfi_endproc
 921              	.LFE118:
 923              		.section	.text.USART_SendData,"ax",%progbits
 924              		.align	1
 925              		.global	USART_SendData
 926              		.syntax unified
 927              		.thumb
 928              		.thumb_func
 930              	USART_SendData:
 931              	.LFB119:
 504:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 505:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 506:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 507:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 508:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 509:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group2 Data transfers functions
 510:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Data transfers functions 
 511:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 512:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 513:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 514:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                             Data transfers functions
 515:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 516:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 517:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART data 
 518:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   transfers.
 519:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 520:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   During an USART reception, data shifts in least significant bit first through 
 521:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the RX pin. In this mode, the USART_DR register consists of a buffer (RDR) 
 522:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   between the internal bus and the received shift register.
 523:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 524:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   When a transmission is taking place, a write instruction to the USART_DR register 
 525:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   stores the data in the TDR register and which is copied in the shift register 
 526:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   at the end of the current transmission.
 527:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 528:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The read access of the USART_DR register can be done using the USART_ReceiveData()
 529:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   function and returns the RDR buffered value. Whereas a write access to the USART_DR 
 530:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   can be done using USART_SendData() function and stores the written data into 
 531:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   TDR buffer.
 532:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 533:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 534:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 535:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 536:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 537:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 538:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 539:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 540:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 541:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  Data: the data to transmit.
 542:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 543:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 544:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 545:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 932              		.loc 1 545 1
ARM GAS  /tmp/ccsPm0Yr.s 			page 27


 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI52:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 83B0     		sub	sp, sp, #12
 942              	.LCFI53:
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              	.LCFI54:
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 0B46     		mov	r3, r1
 949 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 547:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 548:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 549:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 550:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Transmit Data */
 551:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->DR = (Data & (uint16_t)0x01FF);
 950              		.loc 1 551 22
 951 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 952 000e C3F30803 		ubfx	r3, r3, #0, #9
 953 0012 9AB2     		uxth	r2, r3
 954              		.loc 1 551 14
 955 0014 7B68     		ldr	r3, [r7, #4]
 956 0016 9A80     		strh	r2, [r3, #4]	@ movhi
 552:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 957              		.loc 1 552 1
 958 0018 00BF     		nop
 959 001a 0C37     		adds	r7, r7, #12
 960              	.LCFI55:
 961              		.cfi_def_cfa_offset 4
 962 001c BD46     		mov	sp, r7
 963              	.LCFI56:
 964              		.cfi_def_cfa_register 13
 965              		@ sp needed
 966 001e 5DF8047B 		ldr	r7, [sp], #4
 967              	.LCFI57:
 968              		.cfi_restore 7
 969              		.cfi_def_cfa_offset 0
 970 0022 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE119:
 974              		.section	.text.USART_ReceiveData,"ax",%progbits
 975              		.align	1
 976              		.global	USART_ReceiveData
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 981              	USART_ReceiveData:
 982              	.LFB120:
 553:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 554:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
ARM GAS  /tmp/ccsPm0Yr.s 			page 28


 555:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 556:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 557:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 558:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The received data.
 559:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 560:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 561:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 983              		.loc 1 561 1
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988 0000 80B4     		push	{r7}
 989              	.LCFI58:
 990              		.cfi_def_cfa_offset 4
 991              		.cfi_offset 7, -4
 992 0002 83B0     		sub	sp, sp, #12
 993              	.LCFI59:
 994              		.cfi_def_cfa_offset 16
 995 0004 00AF     		add	r7, sp, #0
 996              	.LCFI60:
 997              		.cfi_def_cfa_register 7
 998 0006 7860     		str	r0, [r7, #4]
 562:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 563:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 564:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 565:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Receive Data */
 566:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 999              		.loc 1 566 27
 1000 0008 7B68     		ldr	r3, [r7, #4]
 1001 000a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1002 000c 9BB2     		uxth	r3, r3
 1003              		.loc 1 566 10
 1004 000e C3F30803 		ubfx	r3, r3, #0, #9
 1005 0012 9BB2     		uxth	r3, r3
 567:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1006              		.loc 1 567 1
 1007 0014 1846     		mov	r0, r3
 1008 0016 0C37     		adds	r7, r7, #12
 1009              	.LCFI61:
 1010              		.cfi_def_cfa_offset 4
 1011 0018 BD46     		mov	sp, r7
 1012              	.LCFI62:
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 001a 5DF8047B 		ldr	r7, [sp], #4
 1016              	.LCFI63:
 1017              		.cfi_restore 7
 1018              		.cfi_def_cfa_offset 0
 1019 001e 7047     		bx	lr
 1020              		.cfi_endproc
 1021              	.LFE120:
 1023              		.section	.text.USART_SetAddress,"ax",%progbits
 1024              		.align	1
 1025              		.global	USART_SetAddress
 1026              		.syntax unified
 1027              		.thumb
ARM GAS  /tmp/ccsPm0Yr.s 			page 29


 1028              		.thumb_func
 1030              	USART_SetAddress:
 1031              	.LFB121:
 568:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 569:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 570:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 571:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 572:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 573:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group3 MultiProcessor Communication functions
 574:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Multi-Processor Communication functions 
 575:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 576:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 577:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 578:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                     Multi-Processor Communication functions
 579:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 580:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 581:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 582:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   multiprocessor communication.
 583:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 584:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   For instance one of the USARTs can be the master, its TX output is connected to 
 585:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the RX input of the other USART. The others are slaves, their respective TX outputs 
 586:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   are logically ANDed together and connected to the RX input of the master.
 587:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 588:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART multiprocessor communication is possible through the following procedure:
 589:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 9 bits, Stop bits, Parity, Mode transmitter 
 590:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 591:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 592:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 593:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the wake up method (USART_WakeUp_IdleLine or USART_WakeUp_AddressMark)
 594:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         using USART_WakeUpConfig() function only for the slaves.
 595:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the USART using the USART_Cmd() function.
 596:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() function.
 597:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 598:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART Slave exit from mute mode when receive the wake up condition.
 599:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 600:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 601:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 602:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 603:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 604:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 605:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the address of the USART node.
 606:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 607:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 608:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 609:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 610:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 611:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 612:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1032              		.loc 1 612 1
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 8
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              	.LCFI64:
 1039              		.cfi_def_cfa_offset 4
 1040              		.cfi_offset 7, -4
ARM GAS  /tmp/ccsPm0Yr.s 			page 30


 1041 0002 83B0     		sub	sp, sp, #12
 1042              	.LCFI65:
 1043              		.cfi_def_cfa_offset 16
 1044 0004 00AF     		add	r7, sp, #0
 1045              	.LCFI66:
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 1048 0008 0B46     		mov	r3, r1
 1049 000a FB70     		strb	r3, [r7, #3]
 613:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 614:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 615:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ADDRESS(USART_Address)); 
 616:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
 617:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART address */
 618:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_ADD);
 1050              		.loc 1 618 9
 1051 000c 7B68     		ldr	r3, [r7, #4]
 1052 000e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1053 0010 9BB2     		uxth	r3, r3
 1054              		.loc 1 618 15
 1055 0012 23F00F03 		bic	r3, r3, #15
 1056 0016 9AB2     		uxth	r2, r3
 1057 0018 7B68     		ldr	r3, [r7, #4]
 1058 001a 1A82     		strh	r2, [r3, #16]	@ movhi
 619:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART address node */
 620:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_Address;
 1059              		.loc 1 620 9
 1060 001c 7B68     		ldr	r3, [r7, #4]
 1061 001e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1062 0020 9AB2     		uxth	r2, r3
 1063              		.loc 1 620 15
 1064 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1065 0024 9BB2     		uxth	r3, r3
 1066 0026 1343     		orrs	r3, r3, r2
 1067 0028 9AB2     		uxth	r2, r3
 1068 002a 7B68     		ldr	r3, [r7, #4]
 1069 002c 1A82     		strh	r2, [r3, #16]	@ movhi
 621:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1070              		.loc 1 621 1
 1071 002e 00BF     		nop
 1072 0030 0C37     		adds	r7, r7, #12
 1073              	.LCFI67:
 1074              		.cfi_def_cfa_offset 4
 1075 0032 BD46     		mov	sp, r7
 1076              	.LCFI68:
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0034 5DF8047B 		ldr	r7, [sp], #4
 1080              	.LCFI69:
 1081              		.cfi_restore 7
 1082              		.cfi_def_cfa_offset 0
 1083 0038 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE121:
 1087              		.section	.text.USART_ReceiverWakeUpCmd,"ax",%progbits
 1088              		.align	1
 1089              		.global	USART_ReceiverWakeUpCmd
ARM GAS  /tmp/ccsPm0Yr.s 			page 31


 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1094              	USART_ReceiverWakeUpCmd:
 1095              	.LFB122:
 622:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 623:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 624:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Determines if the USART is in mute mode or not.
 625:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 626:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 627:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART mute mode.
 628:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 629:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 630:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 631:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ReceiverWakeUpCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 632:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1096              		.loc 1 632 1
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 8
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
 1101 0000 80B4     		push	{r7}
 1102              	.LCFI70:
 1103              		.cfi_def_cfa_offset 4
 1104              		.cfi_offset 7, -4
 1105 0002 83B0     		sub	sp, sp, #12
 1106              	.LCFI71:
 1107              		.cfi_def_cfa_offset 16
 1108 0004 00AF     		add	r7, sp, #0
 1109              	.LCFI72:
 1110              		.cfi_def_cfa_register 7
 1111 0006 7860     		str	r0, [r7, #4]
 1112 0008 0B46     		mov	r3, r1
 1113 000a FB70     		strb	r3, [r7, #3]
 633:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 634:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 635:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 636:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 637:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1114              		.loc 1 637 6
 1115 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1116 000e 002B     		cmp	r3, #0
 1117 0010 08D0     		beq	.L42
 638:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 639:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
 640:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 |= USART_CR1_RWU;
 1118              		.loc 1 640 11
 1119 0012 7B68     		ldr	r3, [r7, #4]
 1120 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1121 0016 9BB2     		uxth	r3, r3
 1122              		.loc 1 640 17
 1123 0018 43F00203 		orr	r3, r3, #2
 1124 001c 9AB2     		uxth	r2, r3
 1125 001e 7B68     		ldr	r3, [r7, #4]
 1126 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 641:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 642:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
ARM GAS  /tmp/ccsPm0Yr.s 			page 32


 643:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 644:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
 645:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_RWU);
 646:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 647:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1127              		.loc 1 647 1
 1128 0022 07E0     		b	.L44
 1129              	.L42:
 645:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1130              		.loc 1 645 11
 1131 0024 7B68     		ldr	r3, [r7, #4]
 1132 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1133 0028 9BB2     		uxth	r3, r3
 645:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1134              		.loc 1 645 17
 1135 002a 23F00203 		bic	r3, r3, #2
 1136 002e 9AB2     		uxth	r2, r3
 1137 0030 7B68     		ldr	r3, [r7, #4]
 1138 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 1139              	.L44:
 1140              		.loc 1 647 1
 1141 0034 00BF     		nop
 1142 0036 0C37     		adds	r7, r7, #12
 1143              	.LCFI73:
 1144              		.cfi_def_cfa_offset 4
 1145 0038 BD46     		mov	sp, r7
 1146              	.LCFI74:
 1147              		.cfi_def_cfa_register 13
 1148              		@ sp needed
 1149 003a 5DF8047B 		ldr	r7, [sp], #4
 1150              	.LCFI75:
 1151              		.cfi_restore 7
 1152              		.cfi_def_cfa_offset 0
 1153 003e 7047     		bx	lr
 1154              		.cfi_endproc
 1155              	.LFE122:
 1157              		.section	.text.USART_WakeUpConfig,"ax",%progbits
 1158              		.align	1
 1159              		.global	USART_WakeUpConfig
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1164              	USART_WakeUpConfig:
 1165              	.LFB123:
 648:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 649:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Selects the USART WakeUp method.
 650:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 651:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 652:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
 653:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 654:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
 655:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_WakeUp_AddressMark: WakeUp by an address mark
 656:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 657:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 658:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_WakeUpConfig(USART_TypeDef* USARTx, uint16_t USART_WakeUp)
 659:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1166              		.loc 1 659 1
ARM GAS  /tmp/ccsPm0Yr.s 			page 33


 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 0000 80B4     		push	{r7}
 1172              	.LCFI76:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              	.LCFI77:
 1177              		.cfi_def_cfa_offset 16
 1178 0004 00AF     		add	r7, sp, #0
 1179              	.LCFI78:
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 1182 0008 0B46     		mov	r3, r1
 1183 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 660:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 661:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 662:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_WAKEUP(USART_WakeUp));
 663:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 664:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 &= (uint16_t)~((uint16_t)USART_CR1_WAKE);
 1184              		.loc 1 664 9
 1185 000c 7B68     		ldr	r3, [r7, #4]
 1186 000e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1187 0010 9BB2     		uxth	r3, r3
 1188              		.loc 1 664 15
 1189 0012 23F40063 		bic	r3, r3, #2048
 1190 0016 9AB2     		uxth	r2, r3
 1191 0018 7B68     		ldr	r3, [r7, #4]
 1192 001a 9A81     		strh	r2, [r3, #12]	@ movhi
 665:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 1193              		.loc 1 665 9
 1194 001c 7B68     		ldr	r3, [r7, #4]
 1195 001e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1196 0020 9AB2     		uxth	r2, r3
 1197              		.loc 1 665 15
 1198 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1199 0024 1343     		orrs	r3, r3, r2
 1200 0026 9AB2     		uxth	r2, r3
 1201 0028 7B68     		ldr	r3, [r7, #4]
 1202 002a 9A81     		strh	r2, [r3, #12]	@ movhi
 666:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1203              		.loc 1 666 1
 1204 002c 00BF     		nop
 1205 002e 0C37     		adds	r7, r7, #12
 1206              	.LCFI79:
 1207              		.cfi_def_cfa_offset 4
 1208 0030 BD46     		mov	sp, r7
 1209              	.LCFI80:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0032 5DF8047B 		ldr	r7, [sp], #4
 1213              	.LCFI81:
 1214              		.cfi_restore 7
 1215              		.cfi_def_cfa_offset 0
 1216 0036 7047     		bx	lr
ARM GAS  /tmp/ccsPm0Yr.s 			page 34


 1217              		.cfi_endproc
 1218              	.LFE123:
 1220              		.section	.text.USART_LINBreakDetectLengthConfig,"ax",%progbits
 1221              		.align	1
 1222              		.global	USART_LINBreakDetectLengthConfig
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1227              	USART_LINBreakDetectLengthConfig:
 1228              	.LFB124:
 667:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 668:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 669:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 670:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 671:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 672:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group4 LIN mode functions
 673:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   LIN mode functions 
 674:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 675:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 676:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 677:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                 LIN mode functions
 678:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 679:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 680:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART LIN 
 681:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Mode communication.
 682:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 683:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In LIN mode, 8-bit data format with 1 stop bit is required in accordance with 
 684:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the LIN standard.
 685:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 686:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Only this LIN Feature is supported by the USART IP:
 687:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     - LIN Master Synchronous Break send capability and LIN slave break detection
 688:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       capability :  13-bit break generation and 10/11 bit break detection
 689:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 690:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 691:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART LIN Master transmitter communication is possible through the following procedure:
 692:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 693:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 694:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_Init() function.
 695:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 696:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Enable the LIN mode using the USART_LINCmd() function.
 697:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Send the break character using USART_SendBreak() function.
 698:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 699:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART LIN Master receiver communication is possible through the following procedure:
 700:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
 701:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         Mode transmitter or Mode receiver and hardware flow control values using 
 702:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_Init() function.
 703:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 704:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the break detection length using the USART_LINBreakDetectLengthConfig()
 705:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 706:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the LIN mode using the USART_LINCmd() function.
 707:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 708:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 709:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In LIN mode, the following bits must be kept cleared:
 710:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - CLKEN in the USART_CR2 register,
 711:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
 712:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 713:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
ARM GAS  /tmp/ccsPm0Yr.s 			page 35


 714:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 715:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 716:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 717:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 718:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the USART LIN Break detection length.
 719:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 720:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 721:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
 722:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
 723:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_10b: 10-bit break detection
 724:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_LINBreakDetectLength_11b: 11-bit break detection
 725:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 726:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 727:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint16_t USART_LINBreakDetectLength)
 728:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1229              		.loc 1 728 1
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 8
 1232              		@ frame_needed = 1, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
 1234 0000 80B4     		push	{r7}
 1235              	.LCFI82:
 1236              		.cfi_def_cfa_offset 4
 1237              		.cfi_offset 7, -4
 1238 0002 83B0     		sub	sp, sp, #12
 1239              	.LCFI83:
 1240              		.cfi_def_cfa_offset 16
 1241 0004 00AF     		add	r7, sp, #0
 1242              	.LCFI84:
 1243              		.cfi_def_cfa_register 7
 1244 0006 7860     		str	r0, [r7, #4]
 1245 0008 0B46     		mov	r3, r1
 1246 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 729:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 730:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 731:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 732:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 733:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LBDL);
 1247              		.loc 1 733 9
 1248 000c 7B68     		ldr	r3, [r7, #4]
 1249 000e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1250 0010 9BB2     		uxth	r3, r3
 1251              		.loc 1 733 15
 1252 0012 23F02003 		bic	r3, r3, #32
 1253 0016 9AB2     		uxth	r2, r3
 1254 0018 7B68     		ldr	r3, [r7, #4]
 1255 001a 1A82     		strh	r2, [r3, #16]	@ movhi
 734:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 1256              		.loc 1 734 9
 1257 001c 7B68     		ldr	r3, [r7, #4]
 1258 001e 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1259 0020 9AB2     		uxth	r2, r3
 1260              		.loc 1 734 15
 1261 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1262 0024 1343     		orrs	r3, r3, r2
 1263 0026 9AB2     		uxth	r2, r3
 1264 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccsPm0Yr.s 			page 36


 1265 002a 1A82     		strh	r2, [r3, #16]	@ movhi
 735:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1266              		.loc 1 735 1
 1267 002c 00BF     		nop
 1268 002e 0C37     		adds	r7, r7, #12
 1269              	.LCFI85:
 1270              		.cfi_def_cfa_offset 4
 1271 0030 BD46     		mov	sp, r7
 1272              	.LCFI86:
 1273              		.cfi_def_cfa_register 13
 1274              		@ sp needed
 1275 0032 5DF8047B 		ldr	r7, [sp], #4
 1276              	.LCFI87:
 1277              		.cfi_restore 7
 1278              		.cfi_def_cfa_offset 0
 1279 0036 7047     		bx	lr
 1280              		.cfi_endproc
 1281              	.LFE124:
 1283              		.section	.text.USART_LINCmd,"ax",%progbits
 1284              		.align	1
 1285              		.global	USART_LINCmd
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1290              	USART_LINCmd:
 1291              	.LFB125:
 736:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 737:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 738:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
 739:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 740:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 741:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART LIN mode.
 742:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 743:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 744:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 745:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 746:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1292              		.loc 1 746 1
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 8
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 0000 80B4     		push	{r7}
 1298              	.LCFI88:
 1299              		.cfi_def_cfa_offset 4
 1300              		.cfi_offset 7, -4
 1301 0002 83B0     		sub	sp, sp, #12
 1302              	.LCFI89:
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              	.LCFI90:
 1306              		.cfi_def_cfa_register 7
 1307 0006 7860     		str	r0, [r7, #4]
 1308 0008 0B46     		mov	r3, r1
 1309 000a FB70     		strb	r3, [r7, #3]
 747:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 748:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
ARM GAS  /tmp/ccsPm0Yr.s 			page 37


 749:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 750:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 751:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1310              		.loc 1 751 6
 1311 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1312 000e 002B     		cmp	r3, #0
 1313 0010 08D0     		beq	.L48
 752:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 753:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 754:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 1314              		.loc 1 754 11
 1315 0012 7B68     		ldr	r3, [r7, #4]
 1316 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1317 0016 9BB2     		uxth	r3, r3
 1318              		.loc 1 754 17
 1319 0018 43F48043 		orr	r3, r3, #16384
 1320 001c 9AB2     		uxth	r2, r3
 1321 001e 7B68     		ldr	r3, [r7, #4]
 1322 0020 1A82     		strh	r2, [r3, #16]	@ movhi
 755:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 756:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 757:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 758:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
 759:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR2 &= (uint16_t)~((uint16_t)USART_CR2_LINEN);
 760:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 761:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1323              		.loc 1 761 1
 1324 0022 07E0     		b	.L50
 1325              	.L48:
 759:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1326              		.loc 1 759 11
 1327 0024 7B68     		ldr	r3, [r7, #4]
 1328 0026 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1329 0028 9BB2     		uxth	r3, r3
 759:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1330              		.loc 1 759 17
 1331 002a 23F48043 		bic	r3, r3, #16384
 1332 002e 9AB2     		uxth	r2, r3
 1333 0030 7B68     		ldr	r3, [r7, #4]
 1334 0032 1A82     		strh	r2, [r3, #16]	@ movhi
 1335              	.L50:
 1336              		.loc 1 761 1
 1337 0034 00BF     		nop
 1338 0036 0C37     		adds	r7, r7, #12
 1339              	.LCFI91:
 1340              		.cfi_def_cfa_offset 4
 1341 0038 BD46     		mov	sp, r7
 1342              	.LCFI92:
 1343              		.cfi_def_cfa_register 13
 1344              		@ sp needed
 1345 003a 5DF8047B 		ldr	r7, [sp], #4
 1346              	.LCFI93:
 1347              		.cfi_restore 7
 1348              		.cfi_def_cfa_offset 0
 1349 003e 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE125:
ARM GAS  /tmp/ccsPm0Yr.s 			page 38


 1353              		.section	.text.USART_SendBreak,"ax",%progbits
 1354              		.align	1
 1355              		.global	USART_SendBreak
 1356              		.syntax unified
 1357              		.thumb
 1358              		.thumb_func
 1360              	USART_SendBreak:
 1361              	.LFB126:
 762:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 763:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 764:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Transmits break characters.
 765:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 766:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 767:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 768:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 769:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SendBreak(USART_TypeDef* USARTx)
 770:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1362              		.loc 1 770 1
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 8
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 0000 80B4     		push	{r7}
 1368              	.LCFI94:
 1369              		.cfi_def_cfa_offset 4
 1370              		.cfi_offset 7, -4
 1371 0002 83B0     		sub	sp, sp, #12
 1372              	.LCFI95:
 1373              		.cfi_def_cfa_offset 16
 1374 0004 00AF     		add	r7, sp, #0
 1375              	.LCFI96:
 1376              		.cfi_def_cfa_register 7
 1377 0006 7860     		str	r0, [r7, #4]
 771:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 772:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 773:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 774:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Send break characters */
 775:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR1 |= USART_CR1_SBK;
 1378              		.loc 1 775 9
 1379 0008 7B68     		ldr	r3, [r7, #4]
 1380 000a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1381 000c 9BB2     		uxth	r3, r3
 1382              		.loc 1 775 15
 1383 000e 43F00103 		orr	r3, r3, #1
 1384 0012 9AB2     		uxth	r2, r3
 1385 0014 7B68     		ldr	r3, [r7, #4]
 1386 0016 9A81     		strh	r2, [r3, #12]	@ movhi
 776:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1387              		.loc 1 776 1
 1388 0018 00BF     		nop
 1389 001a 0C37     		adds	r7, r7, #12
 1390              	.LCFI97:
 1391              		.cfi_def_cfa_offset 4
 1392 001c BD46     		mov	sp, r7
 1393              	.LCFI98:
 1394              		.cfi_def_cfa_register 13
 1395              		@ sp needed
ARM GAS  /tmp/ccsPm0Yr.s 			page 39


 1396 001e 5DF8047B 		ldr	r7, [sp], #4
 1397              	.LCFI99:
 1398              		.cfi_restore 7
 1399              		.cfi_def_cfa_offset 0
 1400 0022 7047     		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE126:
 1404              		.section	.text.USART_HalfDuplexCmd,"ax",%progbits
 1405              		.align	1
 1406              		.global	USART_HalfDuplexCmd
 1407              		.syntax unified
 1408              		.thumb
 1409              		.thumb_func
 1411              	USART_HalfDuplexCmd:
 1412              	.LFB127:
 777:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 778:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 779:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 780:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 781:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 782:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group5 Halfduplex mode function
 783:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Half-duplex mode function 
 784:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 785:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 786:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 787:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                          Half-duplex mode function
 788:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 789:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 790:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 791:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Half-duplex communication.
 792:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 793:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART can be configured to follow a single-wire half-duplex protocol where 
 794:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the TX and RX lines are internally connected.
 795:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 796:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USART Half duplex communication is possible through the following procedure:
 797:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
 798:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         or Mode receiver and hardware flow control values using the USART_Init()
 799:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function.
 800:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the USART address using the USART_SetAddress() function.
 801:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Enable the USART using the USART_Cmd() function.
 802:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Enable the half duplex mode using USART_HalfDuplexCmd() function.
 803:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 804:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 805:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note The RX pin is no longer used
 806:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In Half-duplex mode the following bits must be kept cleared:
 807:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN and CLKEN bits in the USART_CR2 register.
 808:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - SCEN and IREN bits in the USART_CR3 register.
 809:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 810:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 811:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 812:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 813:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 814:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 815:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
 816:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
 817:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 818:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the USART Communication.
ARM GAS  /tmp/ccsPm0Yr.s 			page 40


 819:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
 820:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 821:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 822:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 823:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1413              		.loc 1 823 1
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 8
 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
 1418 0000 80B4     		push	{r7}
 1419              	.LCFI100:
 1420              		.cfi_def_cfa_offset 4
 1421              		.cfi_offset 7, -4
 1422 0002 83B0     		sub	sp, sp, #12
 1423              	.LCFI101:
 1424              		.cfi_def_cfa_offset 16
 1425 0004 00AF     		add	r7, sp, #0
 1426              	.LCFI102:
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 1429 0008 0B46     		mov	r3, r1
 1430 000a FB70     		strb	r3, [r7, #3]
 824:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 825:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 826:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 827:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 828:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1431              		.loc 1 828 6
 1432 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1433 000e 002B     		cmp	r3, #0
 1434 0010 08D0     		beq	.L53
 829:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 830:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 831:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 1435              		.loc 1 831 11
 1436 0012 7B68     		ldr	r3, [r7, #4]
 1437 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1438 0016 9BB2     		uxth	r3, r3
 1439              		.loc 1 831 17
 1440 0018 43F00803 		orr	r3, r3, #8
 1441 001c 9AB2     		uxth	r2, r3
 1442 001e 7B68     		ldr	r3, [r7, #4]
 1443 0020 9A82     		strh	r2, [r3, #20]	@ movhi
 832:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 833:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 834:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 835:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
 836:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_HDSEL);
 837:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 838:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1444              		.loc 1 838 1
 1445 0022 07E0     		b	.L55
 1446              	.L53:
 836:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1447              		.loc 1 836 11
 1448 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccsPm0Yr.s 			page 41


 1449 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1450 0028 9BB2     		uxth	r3, r3
 836:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1451              		.loc 1 836 17
 1452 002a 23F00803 		bic	r3, r3, #8
 1453 002e 9AB2     		uxth	r2, r3
 1454 0030 7B68     		ldr	r3, [r7, #4]
 1455 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 1456              	.L55:
 1457              		.loc 1 838 1
 1458 0034 00BF     		nop
 1459 0036 0C37     		adds	r7, r7, #12
 1460              	.LCFI103:
 1461              		.cfi_def_cfa_offset 4
 1462 0038 BD46     		mov	sp, r7
 1463              	.LCFI104:
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 003a 5DF8047B 		ldr	r7, [sp], #4
 1467              	.LCFI105:
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 003e 7047     		bx	lr
 1471              		.cfi_endproc
 1472              	.LFE127:
 1474              		.section	.text.USART_SetGuardTime,"ax",%progbits
 1475              		.align	1
 1476              		.global	USART_SetGuardTime
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1481              	USART_SetGuardTime:
 1482              	.LFB128:
 839:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 840:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 841:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 842:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 843:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 844:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 845:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group6 Smartcard mode functions
 846:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Smartcard mode functions 
 847:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 848:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 849:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 850:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                Smartcard mode functions
 851:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 852:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 853:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 854:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Smartcard communication.
 855:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 856:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The Smartcard interface is designed to support asynchronous protocol Smartcards as
 857:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   defined in the ISO 7816-3 standard.
 858:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 859:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The USART can provide a clock to the smartcard through the SCLK output.
 860:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In smartcard mode, SCLK is not associated to the communication but is simply derived 
 861:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   from the internal peripheral input clock through a 5-bit prescaler.
 862:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
ARM GAS  /tmp/ccsPm0Yr.s 			page 42


 863:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Smartcard communication is possible through the following procedure:
 864:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Configures the Smartcard Prescaler using the USART_SetPrescaler() function.
 865:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Configures the Smartcard Guard Time using the USART_SetGuardTime() function.
 866:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Program the USART clock using the USART_ClockInit() function as following:
 867:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Clock enabled
 868:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART CPOL Low
 869:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART CPHA on first edge
 870:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - USART Last Bit Clock Enabled
 871:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Program the Smartcard interface using the USART_Init() function as following:
 872:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Word Length = 9 Bits
 873:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - 1.5 Stop Bit
 874:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Even parity
 875:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - BaudRate = 12096 baud
 876:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Hardware flow control disabled (RTS and CTS signals)
 877:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - Tx and Rx enabled
 878:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Optionally you can enable the parity error interrupt using the USART_ITConfig()
 879:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         function
 880:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. Enable the USART using the USART_Cmd() function.
 881:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. Enable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
 882:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. Enable the Smartcard interface using the USART_SmartCardCmd() function.
 883:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 884:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Please refer to the ISO 7816-3 specification for more details.
 885:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 886:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 887:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note It is also possible to choose 0.5 stop bit for receiving but it is recommended 
 888:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       to use 1.5 stop bits for both transmitting and receiving to avoid switching 
 889:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       between the two configurations.
 890:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In smartcard mode, the following bits must be kept cleared:
 891:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN bit in the USART_CR2 register.
 892:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - HDSEL and IREN bits in the USART_CR3 register.
 893:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note Smartcard mode is available on USART peripherals only (not available on UART4 
 894:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       and UART5 peripherals).
 895:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 896:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
 897:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
 898:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 899:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 900:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 901:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Sets the specified USART guard time.
 902:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 903:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 904:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_GuardTime: specifies the guard time.   
 905:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 906:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 907:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
 908:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {    
 1483              		.loc 1 908 1
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488 0000 80B4     		push	{r7}
 1489              	.LCFI106:
 1490              		.cfi_def_cfa_offset 4
 1491              		.cfi_offset 7, -4
 1492 0002 83B0     		sub	sp, sp, #12
 1493              	.LCFI107:
ARM GAS  /tmp/ccsPm0Yr.s 			page 43


 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI108:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
 1499 0008 0B46     		mov	r3, r1
 1500 000a FB70     		strb	r3, [r7, #3]
 909:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 910:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 911:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 912:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Clear the USART Guard time */
 913:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 1501              		.loc 1 913 9
 1502 000c 7B68     		ldr	r3, [r7, #4]
 1503 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1504 0010 9BB2     		uxth	r3, r3
 1505              		.loc 1 913 16
 1506 0012 DBB2     		uxtb	r3, r3
 1507 0014 9AB2     		uxth	r2, r3
 1508 0016 7B68     		ldr	r3, [r7, #4]
 1509 0018 1A83     		strh	r2, [r3, #24]	@ movhi
 914:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Set the USART guard time */
 915:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 1510              		.loc 1 915 9
 1511 001a 7B68     		ldr	r3, [r7, #4]
 1512 001c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1513 001e 9AB2     		uxth	r2, r3
 1514              		.loc 1 915 19
 1515 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1516 0022 9BB2     		uxth	r3, r3
 1517 0024 1B02     		lsls	r3, r3, #8
 1518 0026 9BB2     		uxth	r3, r3
 1519              		.loc 1 915 16
 1520 0028 1343     		orrs	r3, r3, r2
 1521 002a 9AB2     		uxth	r2, r3
 1522 002c 7B68     		ldr	r3, [r7, #4]
 1523 002e 1A83     		strh	r2, [r3, #24]	@ movhi
 916:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1524              		.loc 1 916 1
 1525 0030 00BF     		nop
 1526 0032 0C37     		adds	r7, r7, #12
 1527              	.LCFI109:
 1528              		.cfi_def_cfa_offset 4
 1529 0034 BD46     		mov	sp, r7
 1530              	.LCFI110:
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 0036 5DF8047B 		ldr	r7, [sp], #4
 1534              	.LCFI111:
 1535              		.cfi_restore 7
 1536              		.cfi_def_cfa_offset 0
 1537 003a 7047     		bx	lr
 1538              		.cfi_endproc
 1539              	.LFE128:
 1541              		.section	.text.USART_SmartCardCmd,"ax",%progbits
 1542              		.align	1
 1543              		.global	USART_SmartCardCmd
ARM GAS  /tmp/ccsPm0Yr.s 			page 44


 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1548              	USART_SmartCardCmd:
 1549              	.LFB129:
 917:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 918:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 919:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
 920:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 921:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 922:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the Smart Card mode.
 923:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.      
 924:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 925:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 926:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 927:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1550              		.loc 1 927 1
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 8
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554              		@ link register save eliminated.
 1555 0000 80B4     		push	{r7}
 1556              	.LCFI112:
 1557              		.cfi_def_cfa_offset 4
 1558              		.cfi_offset 7, -4
 1559 0002 83B0     		sub	sp, sp, #12
 1560              	.LCFI113:
 1561              		.cfi_def_cfa_offset 16
 1562 0004 00AF     		add	r7, sp, #0
 1563              	.LCFI114:
 1564              		.cfi_def_cfa_register 7
 1565 0006 7860     		str	r0, [r7, #4]
 1566 0008 0B46     		mov	r3, r1
 1567 000a FB70     		strb	r3, [r7, #3]
 928:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 929:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx));
 930:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 931:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1568              		.loc 1 931 6
 1569 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1570 000e 002B     		cmp	r3, #0
 1571 0010 08D0     		beq	.L58
 932:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 933:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
 934:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 1572              		.loc 1 934 11
 1573 0012 7B68     		ldr	r3, [r7, #4]
 1574 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1575 0016 9BB2     		uxth	r3, r3
 1576              		.loc 1 934 17
 1577 0018 43F02003 		orr	r3, r3, #32
 1578 001c 9AB2     		uxth	r2, r3
 1579 001e 7B68     		ldr	r3, [r7, #4]
 1580 0020 9A82     		strh	r2, [r3, #20]	@ movhi
 935:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 936:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 937:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
ARM GAS  /tmp/ccsPm0Yr.s 			page 45


 938:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
 939:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_SCEN);
 940:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 941:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1581              		.loc 1 941 1
 1582 0022 07E0     		b	.L60
 1583              	.L58:
 939:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1584              		.loc 1 939 11
 1585 0024 7B68     		ldr	r3, [r7, #4]
 1586 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1587 0028 9BB2     		uxth	r3, r3
 939:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1588              		.loc 1 939 17
 1589 002a 23F02003 		bic	r3, r3, #32
 1590 002e 9AB2     		uxth	r2, r3
 1591 0030 7B68     		ldr	r3, [r7, #4]
 1592 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 1593              	.L60:
 1594              		.loc 1 941 1
 1595 0034 00BF     		nop
 1596 0036 0C37     		adds	r7, r7, #12
 1597              	.LCFI115:
 1598              		.cfi_def_cfa_offset 4
 1599 0038 BD46     		mov	sp, r7
 1600              	.LCFI116:
 1601              		.cfi_def_cfa_register 13
 1602              		@ sp needed
 1603 003a 5DF8047B 		ldr	r7, [sp], #4
 1604              	.LCFI117:
 1605              		.cfi_restore 7
 1606              		.cfi_def_cfa_offset 0
 1607 003e 7047     		bx	lr
 1608              		.cfi_endproc
 1609              	.LFE129:
 1611              		.section	.text.USART_SmartCardNACKCmd,"ax",%progbits
 1612              		.align	1
 1613              		.global	USART_SmartCardNACKCmd
 1614              		.syntax unified
 1615              		.thumb
 1616              		.thumb_func
 1618              	USART_SmartCardNACKCmd:
 1619              	.LFB130:
 942:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 943:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 944:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables NACK transmission.
 945:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3 or 6 to select the USART or 
 946:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
 947:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the NACK transmission.
 948:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.  
 949:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
 950:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 951:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 952:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1620              		.loc 1 952 1
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccsPm0Yr.s 			page 46


 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
 1625 0000 80B4     		push	{r7}
 1626              	.LCFI118:
 1627              		.cfi_def_cfa_offset 4
 1628              		.cfi_offset 7, -4
 1629 0002 83B0     		sub	sp, sp, #12
 1630              	.LCFI119:
 1631              		.cfi_def_cfa_offset 16
 1632 0004 00AF     		add	r7, sp, #0
 1633              	.LCFI120:
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
 1636 0008 0B46     		mov	r3, r1
 1637 000a FB70     		strb	r3, [r7, #3]
 953:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
 954:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_1236_PERIPH(USARTx)); 
 955:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 956:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1638              		.loc 1 956 6
 1639 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1640 000e 002B     		cmp	r3, #0
 1641 0010 08D0     		beq	.L62
 957:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 958:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
 959:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 1642              		.loc 1 959 11
 1643 0012 7B68     		ldr	r3, [r7, #4]
 1644 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1645 0016 9BB2     		uxth	r3, r3
 1646              		.loc 1 959 17
 1647 0018 43F01003 		orr	r3, r3, #16
 1648 001c 9AB2     		uxth	r2, r3
 1649 001e 7B68     		ldr	r3, [r7, #4]
 1650 0020 9A82     		strh	r2, [r3, #20]	@ movhi
 960:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 961:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
 962:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
 963:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
 964:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_NACK);
 965:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 966:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1651              		.loc 1 966 1
 1652 0022 07E0     		b	.L64
 1653              	.L62:
 964:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1654              		.loc 1 964 11
 1655 0024 7B68     		ldr	r3, [r7, #4]
 1656 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1657 0028 9BB2     		uxth	r3, r3
 964:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1658              		.loc 1 964 17
 1659 002a 23F01003 		bic	r3, r3, #16
 1660 002e 9AB2     		uxth	r2, r3
 1661 0030 7B68     		ldr	r3, [r7, #4]
 1662 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 1663              	.L64:
ARM GAS  /tmp/ccsPm0Yr.s 			page 47


 1664              		.loc 1 966 1
 1665 0034 00BF     		nop
 1666 0036 0C37     		adds	r7, r7, #12
 1667              	.LCFI121:
 1668              		.cfi_def_cfa_offset 4
 1669 0038 BD46     		mov	sp, r7
 1670              	.LCFI122:
 1671              		.cfi_def_cfa_register 13
 1672              		@ sp needed
 1673 003a 5DF8047B 		ldr	r7, [sp], #4
 1674              	.LCFI123:
 1675              		.cfi_restore 7
 1676              		.cfi_def_cfa_offset 0
 1677 003e 7047     		bx	lr
 1678              		.cfi_endproc
 1679              	.LFE130:
 1681              		.section	.text.USART_IrDAConfig,"ax",%progbits
 1682              		.align	1
 1683              		.global	USART_IrDAConfig
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1688              	USART_IrDAConfig:
 1689              	.LFB131:
 967:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 968:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
 969:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
 970:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
 971:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 972:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group7 IrDA mode functions
 973:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   IrDA mode functions 
 974:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
 975:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
 976:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
 977:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                                 IrDA mode functions
 978:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
 979:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 980:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to manage the USART 
 981:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA communication.
 982:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
 983:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA is a half duplex communication protocol. If the Transmitter is busy, any data
 984:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   on the IrDA receive line will be ignored by the IrDA decoder and if the Receiver 
 985:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   is busy, data on the TX from the USART to IrDA will not be encoded by IrDA.
 986:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   While receiving data, transmission should be avoided as the data to be transmitted
 987:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   could be corrupted.
 988:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 989:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   IrDA communication is possible through the following procedure:
 990:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. Program the Baud rate, Word length = 8 bits, Stop bits, Parity, Transmitter/Receiver 
 991:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         modes and hardware flow control values using the USART_Init() function.
 992:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. Enable the USART using the USART_Cmd() function.
 993:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. Configures the IrDA pulse width by configuring the prescaler using  
 994:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         the USART_SetPrescaler() function.
 995:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal mode
 996:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         using the USART_IrDAConfig() function.
 997:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. Enable the IrDA using the USART_IrDACmd() function.
 998:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
 999:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note A pulse of width less than two and greater than one PSC period(s) may or may
ARM GAS  /tmp/ccsPm0Yr.s 			page 48


1000:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       not be rejected.
1001:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note The receiver set up time should be managed by software. The IrDA physical layer
1002:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       specification specifies a minimum of 10 ms delay between transmission and 
1003:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       reception (IrDA is a half duplex protocol).
1004:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note In IrDA mode, the following bits must be kept cleared:
1005:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - LINEN, STOP and CLKEN bits in the USART_CR2 register.
1006:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****         - SCEN and HDSEL bits in the USART_CR3 register.
1007:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1008:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1009:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1010:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1011:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1012:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1013:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Configures the USART's IrDA interface.
1014:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1015:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1016:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1017:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1018:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_LowPower
1019:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IrDAMode_Normal
1020:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1021:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1022:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint16_t USART_IrDAMode)
1023:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1690              		.loc 1 1023 1
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 8
 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694              		@ link register save eliminated.
 1695 0000 80B4     		push	{r7}
 1696              	.LCFI124:
 1697              		.cfi_def_cfa_offset 4
 1698              		.cfi_offset 7, -4
 1699 0002 83B0     		sub	sp, sp, #12
 1700              	.LCFI125:
 1701              		.cfi_def_cfa_offset 16
 1702 0004 00AF     		add	r7, sp, #0
 1703              	.LCFI126:
 1704              		.cfi_def_cfa_register 7
 1705 0006 7860     		str	r0, [r7, #4]
 1706 0008 0B46     		mov	r3, r1
 1707 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1024:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1025:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1026:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
1027:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1028:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IRLP);
 1708              		.loc 1 1028 9
 1709 000c 7B68     		ldr	r3, [r7, #4]
 1710 000e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1711 0010 9BB2     		uxth	r3, r3
 1712              		.loc 1 1028 15
 1713 0012 23F00403 		bic	r3, r3, #4
 1714 0016 9AB2     		uxth	r2, r3
 1715 0018 7B68     		ldr	r3, [r7, #4]
 1716 001a 9A82     		strh	r2, [r3, #20]	@ movhi
1029:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
ARM GAS  /tmp/ccsPm0Yr.s 			page 49


 1717              		.loc 1 1029 9
 1718 001c 7B68     		ldr	r3, [r7, #4]
 1719 001e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1720 0020 9AB2     		uxth	r2, r3
 1721              		.loc 1 1029 15
 1722 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1723 0024 1343     		orrs	r3, r3, r2
 1724 0026 9AB2     		uxth	r2, r3
 1725 0028 7B68     		ldr	r3, [r7, #4]
 1726 002a 9A82     		strh	r2, [r3, #20]	@ movhi
1030:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1727              		.loc 1 1030 1
 1728 002c 00BF     		nop
 1729 002e 0C37     		adds	r7, r7, #12
 1730              	.LCFI127:
 1731              		.cfi_def_cfa_offset 4
 1732 0030 BD46     		mov	sp, r7
 1733              	.LCFI128:
 1734              		.cfi_def_cfa_register 13
 1735              		@ sp needed
 1736 0032 5DF8047B 		ldr	r7, [sp], #4
 1737              	.LCFI129:
 1738              		.cfi_restore 7
 1739              		.cfi_def_cfa_offset 0
 1740 0036 7047     		bx	lr
 1741              		.cfi_endproc
 1742              	.LFE131:
 1744              		.section	.text.USART_IrDACmd,"ax",%progbits
 1745              		.align	1
 1746              		.global	USART_IrDACmd
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1751              	USART_IrDACmd:
 1752              	.LFB132:
1031:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1032:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1033:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's IrDA interface.
1034:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1035:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1036:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the IrDA mode.
1037:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1038:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1039:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1040:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1041:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1753              		.loc 1 1041 1
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 8
 1756              		@ frame_needed = 1, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758 0000 80B4     		push	{r7}
 1759              	.LCFI130:
 1760              		.cfi_def_cfa_offset 4
 1761              		.cfi_offset 7, -4
 1762 0002 83B0     		sub	sp, sp, #12
 1763              	.LCFI131:
ARM GAS  /tmp/ccsPm0Yr.s 			page 50


 1764              		.cfi_def_cfa_offset 16
 1765 0004 00AF     		add	r7, sp, #0
 1766              	.LCFI132:
 1767              		.cfi_def_cfa_register 7
 1768 0006 7860     		str	r0, [r7, #4]
 1769 0008 0B46     		mov	r3, r1
 1770 000a FB70     		strb	r3, [r7, #3]
1042:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1043:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1044:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1045:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1046:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1771              		.loc 1 1046 6
 1772 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1773 000e 002B     		cmp	r3, #0
 1774 0010 08D0     		beq	.L67
1047:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1048:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1049:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 1775              		.loc 1 1049 11
 1776 0012 7B68     		ldr	r3, [r7, #4]
 1777 0014 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1778 0016 9BB2     		uxth	r3, r3
 1779              		.loc 1 1049 17
 1780 0018 43F00203 		orr	r3, r3, #2
 1781 001c 9AB2     		uxth	r2, r3
 1782 001e 7B68     		ldr	r3, [r7, #4]
 1783 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1050:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1051:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1052:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1053:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1054:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~((uint16_t)USART_CR3_IREN);
1055:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1056:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1784              		.loc 1 1056 1
 1785 0022 07E0     		b	.L69
 1786              	.L67:
1054:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1787              		.loc 1 1054 11
 1788 0024 7B68     		ldr	r3, [r7, #4]
 1789 0026 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1790 0028 9BB2     		uxth	r3, r3
1054:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1791              		.loc 1 1054 17
 1792 002a 23F00203 		bic	r3, r3, #2
 1793 002e 9AB2     		uxth	r2, r3
 1794 0030 7B68     		ldr	r3, [r7, #4]
 1795 0032 9A82     		strh	r2, [r3, #20]	@ movhi
 1796              	.L69:
 1797              		.loc 1 1056 1
 1798 0034 00BF     		nop
 1799 0036 0C37     		adds	r7, r7, #12
 1800              	.LCFI133:
 1801              		.cfi_def_cfa_offset 4
 1802 0038 BD46     		mov	sp, r7
 1803              	.LCFI134:
ARM GAS  /tmp/ccsPm0Yr.s 			page 51


 1804              		.cfi_def_cfa_register 13
 1805              		@ sp needed
 1806 003a 5DF8047B 		ldr	r7, [sp], #4
 1807              	.LCFI135:
 1808              		.cfi_restore 7
 1809              		.cfi_def_cfa_offset 0
 1810 003e 7047     		bx	lr
 1811              		.cfi_endproc
 1812              	.LFE132:
 1814              		.section	.text.USART_DMACmd,"ax",%progbits
 1815              		.align	1
 1816              		.global	USART_DMACmd
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1821              	USART_DMACmd:
 1822              	.LFB133:
1057:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1058:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1059:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1060:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1061:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1062:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group8 DMA transfers management functions
1063:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   DMA transfers management functions
1064:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1065:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1066:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
1067:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                       DMA transfers management functions
1068:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1069:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1070:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1071:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1072:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1073:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1074:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1075:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1076:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1077:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1078:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1079:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1080:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Tx: USART DMA transmit request
1081:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_DMAReq_Rx: USART DMA receive request
1082:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1083:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.   
1084:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1085:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1086:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState)
1087:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1823              		.loc 1 1087 1
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 8
 1826              		@ frame_needed = 1, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
 1828 0000 80B4     		push	{r7}
 1829              	.LCFI136:
 1830              		.cfi_def_cfa_offset 4
 1831              		.cfi_offset 7, -4
ARM GAS  /tmp/ccsPm0Yr.s 			page 52


 1832 0002 83B0     		sub	sp, sp, #12
 1833              	.LCFI137:
 1834              		.cfi_def_cfa_offset 16
 1835 0004 00AF     		add	r7, sp, #0
 1836              	.LCFI138:
 1837              		.cfi_def_cfa_register 7
 1838 0006 7860     		str	r0, [r7, #4]
 1839 0008 0B46     		mov	r3, r1
 1840 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 1841 000c 1346     		mov	r3, r2
 1842 000e 7B70     		strb	r3, [r7, #1]
1088:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1089:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1090:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
1091:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
1092:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1093:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1843              		.loc 1 1093 6
 1844 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1845 0012 002B     		cmp	r3, #0
 1846 0014 08D0     		beq	.L71
1094:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1095:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1096:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1097:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 1847              		.loc 1 1097 11
 1848 0016 7B68     		ldr	r3, [r7, #4]
 1849 0018 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1850 001a 9AB2     		uxth	r2, r3
 1851              		.loc 1 1097 17
 1852 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1853 001e 1343     		orrs	r3, r3, r2
 1854 0020 9AB2     		uxth	r2, r3
 1855 0022 7B68     		ldr	r3, [r7, #4]
 1856 0024 9A82     		strh	r2, [r3, #20]	@ movhi
1098:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1099:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1100:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1101:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1102:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        DMAR bits in the USART CR3 register */
1103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     USARTx->CR3 &= (uint16_t)~USART_DMAReq;
1104:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1105:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1857              		.loc 1 1105 1
 1858 0026 09E0     		b	.L73
 1859              	.L71:
1103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1860              		.loc 1 1103 11
 1861 0028 7B68     		ldr	r3, [r7, #4]
 1862 002a 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1863 002c 9AB2     		uxth	r2, r3
1103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1864              		.loc 1 1103 20
 1865 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1866 0030 DB43     		mvns	r3, r3
 1867 0032 9BB2     		uxth	r3, r3
1103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /tmp/ccsPm0Yr.s 			page 53


 1868              		.loc 1 1103 17
 1869 0034 1340     		ands	r3, r3, r2
 1870 0036 9AB2     		uxth	r2, r3
 1871 0038 7B68     		ldr	r3, [r7, #4]
 1872 003a 9A82     		strh	r2, [r3, #20]	@ movhi
 1873              	.L73:
 1874              		.loc 1 1105 1
 1875 003c 00BF     		nop
 1876 003e 0C37     		adds	r7, r7, #12
 1877              	.LCFI139:
 1878              		.cfi_def_cfa_offset 4
 1879 0040 BD46     		mov	sp, r7
 1880              	.LCFI140:
 1881              		.cfi_def_cfa_register 13
 1882              		@ sp needed
 1883 0042 5DF8047B 		ldr	r7, [sp], #4
 1884              	.LCFI141:
 1885              		.cfi_restore 7
 1886              		.cfi_def_cfa_offset 0
 1887 0046 7047     		bx	lr
 1888              		.cfi_endproc
 1889              	.LFE133:
 1891              		.section	.text.USART_ITConfig,"ax",%progbits
 1892              		.align	1
 1893              		.global	USART_ITConfig
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1898              	USART_ITConfig:
 1899              	.LFB134:
1106:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1107:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1108:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @}
1109:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1110:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1111:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /** @defgroup USART_Group9 Interrupts and flags management functions
1112:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *  @brief   Interrupts and flags management functions 
1113:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  *
1114:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @verbatim   
1115:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================
1116:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                    Interrupts and flags management functions
1117:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****  ===============================================================================  
1118:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1119:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   This subsection provides a set of functions allowing to configure the USART 
1120:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupts sources, DMA channels requests and check or clear the flags or 
1121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   pending bits status.
1122:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   The user should identify which mode will be used in his application to manage 
1123:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
1124:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1125:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Polling Mode
1126:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   =============
1127:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In Polling Mode, the SPI communication can be managed by 10 flags:
1128:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_FLAG_TXE : to indicate the status of the transmit buffer register
1129:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_FLAG_RXNE : to indicate the status of the receive buffer register
1130:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_FLAG_TC : to indicate the status of the transmit operation
1131:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_FLAG_IDLE : to indicate the status of the Idle Line             
1132:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_FLAG_CTS : to indicate the status of the nCTS input
ARM GAS  /tmp/ccsPm0Yr.s 			page 54


1133:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_FLAG_LBD : to indicate the status of the LIN break detection
1134:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_FLAG_NE : to indicate if a noise error occur
1135:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_FLAG_FE : to indicate if a frame error occur
1136:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      9. USART_FLAG_PE : to indicate if a parity error occur
1137:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      10. USART_FLAG_ORE : to indicate if an Overrun error occur
1138:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1139:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1140:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       - FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1141:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****       - void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG);
1142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1143:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupt Mode
1144:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ===============
1145:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In Interrupt Mode, the USART communication can be managed by 8 interrupt sources
1146:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   and 10 pending bits: 
1147:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1148:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Pending Bits:
1149:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ------------- 
1150:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_IT_TXE : to indicate the status of the transmit buffer register
1151:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : to indicate the status of the receive buffer register
1152:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_IT_TC : to indicate the status of the transmit operation
1153:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : to indicate the status of the Idle Line             
1154:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_IT_CTS : to indicate the status of the nCTS input
1155:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_IT_LBD : to indicate the status of the LIN break detection
1156:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_IT_NE : to indicate if a noise error occur
1157:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_IT_FE : to indicate if a frame error occur
1158:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      9. USART_IT_PE : to indicate if a parity error occur
1159:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      10. USART_IT_ORE : to indicate if an Overrun error occur
1160:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1161:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   Interrupt Source:
1162:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   -----------------
1163:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_IT_TXE : specifies the interrupt source for the Tx buffer empty 
1164:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
1165:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_IT_RXNE : specifies the interrupt source for the Rx buffer not 
1166:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                         empty interrupt.
1167:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      3. USART_IT_TC : specifies the interrupt source for the Transmit complete 
1168:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
1169:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      4. USART_IT_IDLE : specifies the interrupt source for the Idle Line interrupt.             
1170:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      5. USART_IT_CTS : specifies the interrupt source for the CTS interrupt. 
1171:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      6. USART_IT_LBD : specifies the interrupt source for the LIN break detection
1172:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****                        interrupt. 
1173:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      7. USART_IT_PE : specifies the interrupt source for the parity error interrupt. 
1174:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      8. USART_IT_ERR :  specifies the interrupt source for the errors interrupt.
1175:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1176:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @note Some parameters are coded in order to use them as interrupt source or as pending bits.
1177:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1178:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following functions:
1179:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState);
1180:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT);
1181:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT);
1182:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1183:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   DMA Mode
1184:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ========
1185:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In DMA Mode, the USART communication can be managed by 2 DMA Channel requests:
1186:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      1. USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request
1187:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      2. USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request
1188:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1189:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   In this Mode it is advised to use the following function:
ARM GAS  /tmp/ccsPm0Yr.s 			page 55


1190:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****      - void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, FunctionalState NewState);
1191:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1192:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** @endverbatim
1193:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @{
1194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1195:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
1198:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1200:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt
1203:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1205:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1208:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1210:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be: ENABLE or DISABLE.
1212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1214:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
1215:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 1900              		.loc 1 1215 1
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 24
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905 0000 80B4     		push	{r7}
 1906              	.LCFI142:
 1907              		.cfi_def_cfa_offset 4
 1908              		.cfi_offset 7, -4
 1909 0002 87B0     		sub	sp, sp, #28
 1910              	.LCFI143:
 1911              		.cfi_def_cfa_offset 32
 1912 0004 00AF     		add	r7, sp, #0
 1913              	.LCFI144:
 1914              		.cfi_def_cfa_register 7
 1915 0006 7860     		str	r0, [r7, #4]
 1916 0008 0B46     		mov	r3, r1
 1917 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 1918 000c 1346     		mov	r3, r2
 1919 000e 7B70     		strb	r3, [r7, #1]
1216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
 1920              		.loc 1 1216 12
 1921 0010 0023     		movs	r3, #0
 1922 0012 3B61     		str	r3, [r7, #16]
 1923              		.loc 1 1216 29
 1924 0014 0023     		movs	r3, #0
 1925 0016 FB60     		str	r3, [r7, #12]
 1926              		.loc 1 1216 43
 1927 0018 0023     		movs	r3, #0
 1928 001a BB60     		str	r3, [r7, #8]
1217:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t usartxbase = 0x00;
ARM GAS  /tmp/ccsPm0Yr.s 			page 56


 1929              		.loc 1 1217 12
 1930 001c 0023     		movs	r3, #0
 1931 001e 7B61     		str	r3, [r7, #20]
1218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1220:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
1221:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1222:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1223:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1224:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
1225:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1226:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1227:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1228:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1229:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartxbase = (uint32_t)USARTx;
 1932              		.loc 1 1229 14
 1933 0020 7B68     		ldr	r3, [r7, #4]
 1934 0022 7B61     		str	r3, [r7, #20]
1230:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1231:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1232:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 1935              		.loc 1 1232 16
 1936 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1937 0026 DBB2     		uxtb	r3, r3
 1938              		.loc 1 1232 35
 1939 0028 5B09     		lsrs	r3, r3, #5
 1940 002a DBB2     		uxtb	r3, r3
 1941              		.loc 1 1232 12
 1942 002c 3B61     		str	r3, [r7, #16]
1233:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1234:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1235:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itpos = USART_IT & IT_MASK;
 1943              		.loc 1 1235 20
 1944 002e 7B88     		ldrh	r3, [r7, #2]
 1945              		.loc 1 1235 9
 1946 0030 03F01F03 		and	r3, r3, #31
 1947 0034 FB60     		str	r3, [r7, #12]
1236:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 1948              		.loc 1 1236 10
 1949 0036 0122     		movs	r2, #1
 1950 0038 FB68     		ldr	r3, [r7, #12]
 1951 003a 02FA03F3 		lsl	r3, r2, r3
 1952 003e BB60     		str	r3, [r7, #8]
1237:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1238:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT is in CR1 register */
 1953              		.loc 1 1238 6
 1954 0040 3B69     		ldr	r3, [r7, #16]
 1955 0042 012B     		cmp	r3, #1
 1956 0044 03D1     		bne	.L75
1239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1240:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x0C;
 1957              		.loc 1 1240 16
 1958 0046 7B69     		ldr	r3, [r7, #20]
 1959 0048 0C33     		adds	r3, r3, #12
 1960 004a 7B61     		str	r3, [r7, #20]
 1961 004c 09E0     		b	.L76
 1962              	.L75:
ARM GAS  /tmp/ccsPm0Yr.s 			page 57


1241:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1242:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT is in CR2 register */
 1963              		.loc 1 1242 11
 1964 004e 3B69     		ldr	r3, [r7, #16]
 1965 0050 022B     		cmp	r3, #2
 1966 0052 03D1     		bne	.L77
1243:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1244:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x10;
 1967              		.loc 1 1244 16
 1968 0054 7B69     		ldr	r3, [r7, #20]
 1969 0056 1033     		adds	r3, r3, #16
 1970 0058 7B61     		str	r3, [r7, #20]
 1971 005a 02E0     		b	.L76
 1972              	.L77:
1245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1246:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT is in CR3 register */
1247:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1248:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     usartxbase += 0x14; 
 1973              		.loc 1 1248 16
 1974 005c 7B69     		ldr	r3, [r7, #20]
 1975 005e 1433     		adds	r3, r3, #20
 1976 0060 7B61     		str	r3, [r7, #20]
 1977              	.L76:
1249:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1250:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (NewState != DISABLE)
 1978              		.loc 1 1250 6
 1979 0062 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1980 0064 002B     		cmp	r3, #0
 1981 0066 06D0     		beq	.L78
1251:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1252:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 1982              		.loc 1 1252 5
 1983 0068 7B69     		ldr	r3, [r7, #20]
 1984 006a 1968     		ldr	r1, [r3]
 1985 006c 7B69     		ldr	r3, [r7, #20]
 1986              		.loc 1 1252 34
 1987 006e BA68     		ldr	r2, [r7, #8]
 1988 0070 0A43     		orrs	r2, r2, r1
 1989 0072 1A60     		str	r2, [r3]
1253:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1254:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1255:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
1257:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1258:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 1990              		.loc 1 1258 1
 1991 0074 06E0     		b	.L80
 1992              	.L78:
1256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1993              		.loc 1 1256 5
 1994 0076 7B69     		ldr	r3, [r7, #20]
 1995 0078 1968     		ldr	r1, [r3]
1256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 1996              		.loc 1 1256 36
 1997 007a BB68     		ldr	r3, [r7, #8]
 1998 007c DA43     		mvns	r2, r3
1256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
ARM GAS  /tmp/ccsPm0Yr.s 			page 58


 1999              		.loc 1 1256 5
 2000 007e 7B69     		ldr	r3, [r7, #20]
1256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
 2001              		.loc 1 1256 33
 2002 0080 0A40     		ands	r2, r2, r1
 2003 0082 1A60     		str	r2, [r3]
 2004              	.L80:
 2005              		.loc 1 1258 1
 2006 0084 00BF     		nop
 2007 0086 1C37     		adds	r7, r7, #28
 2008              	.LCFI145:
 2009              		.cfi_def_cfa_offset 4
 2010 0088 BD46     		mov	sp, r7
 2011              	.LCFI146:
 2012              		.cfi_def_cfa_register 13
 2013              		@ sp needed
 2014 008a 5DF8047B 		ldr	r7, [sp], #4
 2015              	.LCFI147:
 2016              		.cfi_restore 7
 2017              		.cfi_def_cfa_offset 0
 2018 008e 7047     		bx	lr
 2019              		.cfi_endproc
 2020              	.LFE134:
 2022              		.section	.text.USART_GetFlagStatus,"ax",%progbits
 2023              		.align	1
 2024              		.global	USART_GetFlagStatus
 2025              		.syntax unified
 2026              		.thumb
 2027              		.thumb_func
 2029              	USART_GetFlagStatus:
 2030              	.LFB135:
1259:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1260:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1261:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1262:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1263:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1264:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1265:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1266:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5)
1267:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag
1268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TXE:  Transmit data register empty flag
1269:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag
1270:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag
1271:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_IDLE: Idle Line detection flag
1272:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_ORE:  OverRun Error flag
1273:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_NE:   Noise Error flag
1274:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_FE:   Framing Error flag
1275:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_PE:   Parity Error flag
1276:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1277:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1279:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 2031              		.loc 1 1279 1
 2032              		.cfi_startproc
 2033              		@ args = 0, pretend = 0, frame = 16
 2034              		@ frame_needed = 1, uses_anonymous_args = 0
 2035              		@ link register save eliminated.
ARM GAS  /tmp/ccsPm0Yr.s 			page 59


 2036 0000 80B4     		push	{r7}
 2037              	.LCFI148:
 2038              		.cfi_def_cfa_offset 4
 2039              		.cfi_offset 7, -4
 2040 0002 85B0     		sub	sp, sp, #20
 2041              	.LCFI149:
 2042              		.cfi_def_cfa_offset 24
 2043 0004 00AF     		add	r7, sp, #0
 2044              	.LCFI150:
 2045              		.cfi_def_cfa_register 7
 2046 0006 7860     		str	r0, [r7, #4]
 2047 0008 0B46     		mov	r3, r1
 2048 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1280:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   FlagStatus bitstatus = RESET;
 2049              		.loc 1 1280 14
 2050 000c 0023     		movs	r3, #0
 2051 000e FB73     		strb	r3, [r7, #15]
1281:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1282:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1283:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
1284:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1285:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1286:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_FLAG == USART_FLAG_CTS)
1287:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1288:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1289:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1290:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1291:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 2052              		.loc 1 1291 14
 2053 0010 7B68     		ldr	r3, [r7, #4]
 2054 0012 1B88     		ldrh	r3, [r3]	@ movhi
 2055 0014 9AB2     		uxth	r2, r3
 2056              		.loc 1 1291 33
 2057 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2058 0018 1340     		ands	r3, r3, r2
 2059 001a 9BB2     		uxth	r3, r3
 2060              		.loc 1 1291 6
 2061 001c 002B     		cmp	r3, #0
 2062 001e 02D0     		beq	.L82
1292:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1293:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
 2063              		.loc 1 1293 15
 2064 0020 0123     		movs	r3, #1
 2065 0022 FB73     		strb	r3, [r7, #15]
 2066 0024 01E0     		b	.L83
 2067              	.L82:
1294:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1295:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1296:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1297:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 2068              		.loc 1 1297 15
 2069 0026 0023     		movs	r3, #0
 2070 0028 FB73     		strb	r3, [r7, #15]
 2071              	.L83:
1298:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1299:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;
 2072              		.loc 1 1299 10
ARM GAS  /tmp/ccsPm0Yr.s 			page 60


 2073 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1300:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 2074              		.loc 1 1300 1
 2075 002c 1846     		mov	r0, r3
 2076 002e 1437     		adds	r7, r7, #20
 2077              	.LCFI151:
 2078              		.cfi_def_cfa_offset 4
 2079 0030 BD46     		mov	sp, r7
 2080              	.LCFI152:
 2081              		.cfi_def_cfa_register 13
 2082              		@ sp needed
 2083 0032 5DF8047B 		ldr	r7, [sp], #4
 2084              	.LCFI153:
 2085              		.cfi_restore 7
 2086              		.cfi_def_cfa_offset 0
 2087 0036 7047     		bx	lr
 2088              		.cfi_endproc
 2089              	.LFE135:
 2091              		.section	.text.USART_ClearFlag,"ax",%progbits
 2092              		.align	1
 2093              		.global	USART_ClearFlag
 2094              		.syntax unified
 2095              		.thumb
 2096              		.thumb_func
 2098              	USART_ClearFlag:
 2099              	.LFB136:
1301:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1302:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1303:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's pending flags.
1304:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1305:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1306:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1307:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be any combination of the following values:
1308:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_CTS:  CTS Change flag (not available for UART4 and UART5).
1309:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_LBD:  LIN Break detection flag.
1310:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_TC:   Transmission Complete flag.
1311:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_FLAG_RXNE: Receive data register not empty flag.
1312:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1313:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1314:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) flags are cleared by software 
1315:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          sequence: a read operation to USART_SR register (USART_GetFlagStatus()) 
1316:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          followed by a read operation to USART_DR register (USART_ReceiveData()).
1317:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE flag can be also cleared by a read to the USART_DR register 
1318:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1319:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC flag can be also cleared by software sequence: a read operation to 
1320:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          USART_SR register (USART_GetFlagStatus()) followed by a write operation
1321:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          to USART_DR register (USART_SendData()).
1322:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE flag is cleared only by a write to the USART_DR register 
1323:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1324:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *   
1325:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1326:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1327:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG)
1328:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 2100              		.loc 1 1328 1
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccsPm0Yr.s 			page 61


 2103              		@ frame_needed = 1, uses_anonymous_args = 0
 2104              		@ link register save eliminated.
 2105 0000 80B4     		push	{r7}
 2106              	.LCFI154:
 2107              		.cfi_def_cfa_offset 4
 2108              		.cfi_offset 7, -4
 2109 0002 83B0     		sub	sp, sp, #12
 2110              	.LCFI155:
 2111              		.cfi_def_cfa_offset 16
 2112 0004 00AF     		add	r7, sp, #0
 2113              	.LCFI156:
 2114              		.cfi_def_cfa_register 7
 2115 0006 7860     		str	r0, [r7, #4]
 2116 0008 0B46     		mov	r3, r1
 2117 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1329:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1330:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1331:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
1332:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1333:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS flag is not available for UART4 and UART5 */
1334:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((USART_FLAG & USART_FLAG_CTS) == USART_FLAG_CTS)
1335:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1336:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1337:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1338:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****        
1339:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~USART_FLAG;
 2118              		.loc 1 1339 16
 2119 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2120 000e DB43     		mvns	r3, r3
 2121 0010 9AB2     		uxth	r2, r3
 2122              		.loc 1 1339 14
 2123 0012 7B68     		ldr	r3, [r7, #4]
 2124 0014 1A80     		strh	r2, [r3]	@ movhi
1340:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 2125              		.loc 1 1340 1
 2126 0016 00BF     		nop
 2127 0018 0C37     		adds	r7, r7, #12
 2128              	.LCFI157:
 2129              		.cfi_def_cfa_offset 4
 2130 001a BD46     		mov	sp, r7
 2131              	.LCFI158:
 2132              		.cfi_def_cfa_register 13
 2133              		@ sp needed
 2134 001c 5DF8047B 		ldr	r7, [sp], #4
 2135              	.LCFI159:
 2136              		.cfi_restore 7
 2137              		.cfi_def_cfa_offset 0
 2138 0020 7047     		bx	lr
 2139              		.cfi_endproc
 2140              	.LFE136:
 2142              		.section	.text.USART_GetITStatus,"ax",%progbits
 2143              		.align	1
 2144              		.global	USART_GetITStatus
 2145              		.syntax unified
 2146              		.thumb
 2147              		.thumb_func
 2149              	USART_GetITStatus:
ARM GAS  /tmp/ccsPm0Yr.s 			page 62


 2150              	.LFB137:
1341:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1342:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1343:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1344:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1345:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1346:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1347:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1348:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1349:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
1350:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TXE:  Transmit Data Register empty interrupt
1351:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt
1352:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt
1353:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_IDLE: Idle line detection interrupt
1354:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_RX : OverRun Error interrupt if the RXNEIE bit is set
1355:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_ORE_ER : OverRun Error interrupt if the EIE bit is set  
1356:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_NE:   Noise Error interrupt
1357:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_FE:   Framing Error interrupt
1358:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_PE:   Parity Error interrupt
1359:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1360:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1361:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
1362:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 2151              		.loc 1 1362 1
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 24
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155              		@ link register save eliminated.
 2156 0000 80B4     		push	{r7}
 2157              	.LCFI160:
 2158              		.cfi_def_cfa_offset 4
 2159              		.cfi_offset 7, -4
 2160 0002 87B0     		sub	sp, sp, #28
 2161              	.LCFI161:
 2162              		.cfi_def_cfa_offset 32
 2163 0004 00AF     		add	r7, sp, #0
 2164              	.LCFI162:
 2165              		.cfi_def_cfa_register 7
 2166 0006 7860     		str	r0, [r7, #4]
 2167 0008 0B46     		mov	r3, r1
 2168 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1363:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
 2169              		.loc 1 1363 12
 2170 000c 0023     		movs	r3, #0
 2171 000e FB60     		str	r3, [r7, #12]
 2172              		.loc 1 1363 27
 2173 0010 0023     		movs	r3, #0
 2174 0012 7B61     		str	r3, [r7, #20]
 2175              		.loc 1 1363 42
 2176 0014 0023     		movs	r3, #0
 2177 0016 BB60     		str	r3, [r7, #8]
1364:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   ITStatus bitstatus = RESET;
 2178              		.loc 1 1364 12
 2179 0018 0023     		movs	r3, #0
 2180 001a FB74     		strb	r3, [r7, #19]
1365:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1366:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
ARM GAS  /tmp/ccsPm0Yr.s 			page 63


1367:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
1368:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1369:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */ 
1370:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
1371:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1372:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1373:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1374:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1375:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the USART register index */
1376:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   usartreg = (((uint8_t)USART_IT) >> 0x05);
 2181              		.loc 1 1376 16
 2182 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2183 001e DBB2     		uxtb	r3, r3
 2184              		.loc 1 1376 35
 2185 0020 5B09     		lsrs	r3, r3, #5
 2186 0022 DBB2     		uxtb	r3, r3
 2187              		.loc 1 1376 12
 2188 0024 BB60     		str	r3, [r7, #8]
1377:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Get the interrupt position */
1378:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = USART_IT & IT_MASK;
 2189              		.loc 1 1378 21
 2190 0026 7B88     		ldrh	r3, [r7, #2]
 2191              		.loc 1 1378 10
 2192 0028 03F01F03 		and	r3, r3, #31
 2193 002c 7B61     		str	r3, [r7, #20]
1379:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 2194              		.loc 1 1379 10
 2195 002e 0122     		movs	r2, #1
 2196 0030 7B69     		ldr	r3, [r7, #20]
 2197 0032 02FA03F3 		lsl	r3, r2, r3
 2198 0036 7B61     		str	r3, [r7, #20]
1380:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1381:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 2199              		.loc 1 1381 6
 2200 0038 BB68     		ldr	r3, [r7, #8]
 2201 003a 012B     		cmp	r3, #1
 2202 003c 07D1     		bne	.L87
1382:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1383:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR1;
 2203              		.loc 1 1383 21
 2204 003e 7B68     		ldr	r3, [r7, #4]
 2205 0040 9B89     		ldrh	r3, [r3, #12]	@ movhi
 2206 0042 9BB2     		uxth	r3, r3
 2207 0044 1A46     		mov	r2, r3
 2208              		.loc 1 1383 12
 2209 0046 7B69     		ldr	r3, [r7, #20]
 2210 0048 1340     		ands	r3, r3, r2
 2211 004a 7B61     		str	r3, [r7, #20]
 2212 004c 11E0     		b	.L88
 2213              	.L87:
1384:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1385:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 2214              		.loc 1 1385 11
 2215 004e BB68     		ldr	r3, [r7, #8]
 2216 0050 022B     		cmp	r3, #2
 2217 0052 07D1     		bne	.L89
1386:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
ARM GAS  /tmp/ccsPm0Yr.s 			page 64


1387:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR2;
 2218              		.loc 1 1387 21
 2219 0054 7B68     		ldr	r3, [r7, #4]
 2220 0056 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 2221 0058 9BB2     		uxth	r3, r3
 2222 005a 1A46     		mov	r2, r3
 2223              		.loc 1 1387 12
 2224 005c 7B69     		ldr	r3, [r7, #20]
 2225 005e 1340     		ands	r3, r3, r2
 2226 0060 7B61     		str	r3, [r7, #20]
 2227 0062 06E0     		b	.L88
 2228              	.L89:
1388:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1389:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else /* The IT  is in CR3 register */
1390:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1391:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     itmask &= USARTx->CR3;
 2229              		.loc 1 1391 21
 2230 0064 7B68     		ldr	r3, [r7, #4]
 2231 0066 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2232 0068 9BB2     		uxth	r3, r3
 2233 006a 1A46     		mov	r2, r3
 2234              		.loc 1 1391 12
 2235 006c 7B69     		ldr	r3, [r7, #20]
 2236 006e 1340     		ands	r3, r3, r2
 2237 0070 7B61     		str	r3, [r7, #20]
 2238              	.L88:
1392:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1393:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1394:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 2239              		.loc 1 1394 21
 2240 0072 7B88     		ldrh	r3, [r7, #2]
 2241 0074 1B0A     		lsrs	r3, r3, #8
 2242 0076 9BB2     		uxth	r3, r3
 2243              		.loc 1 1394 10
 2244 0078 FB60     		str	r3, [r7, #12]
1395:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 2245              		.loc 1 1395 10
 2246 007a 0122     		movs	r2, #1
 2247 007c FB68     		ldr	r3, [r7, #12]
 2248 007e 02FA03F3 		lsl	r3, r2, r3
 2249 0082 FB60     		str	r3, [r7, #12]
1396:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos &= USARTx->SR;
 2250              		.loc 1 1396 19
 2251 0084 7B68     		ldr	r3, [r7, #4]
 2252 0086 1B88     		ldrh	r3, [r3]	@ movhi
 2253 0088 9BB2     		uxth	r3, r3
 2254 008a 1A46     		mov	r2, r3
 2255              		.loc 1 1396 10
 2256 008c FB68     		ldr	r3, [r7, #12]
 2257 008e 1340     		ands	r3, r3, r2
 2258 0090 FB60     		str	r3, [r7, #12]
1397:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 2259              		.loc 1 1397 6
 2260 0092 7B69     		ldr	r3, [r7, #20]
 2261 0094 002B     		cmp	r3, #0
 2262 0096 05D0     		beq	.L90
 2263              		.loc 1 1397 34 discriminator 1
ARM GAS  /tmp/ccsPm0Yr.s 			page 65


 2264 0098 FB68     		ldr	r3, [r7, #12]
 2265 009a 002B     		cmp	r3, #0
 2266 009c 02D0     		beq	.L90
1398:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1399:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = SET;
 2267              		.loc 1 1399 15
 2268 009e 0123     		movs	r3, #1
 2269 00a0 FB74     		strb	r3, [r7, #19]
 2270 00a2 01E0     		b	.L91
 2271              	.L90:
1400:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1401:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   else
1402:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1403:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     bitstatus = RESET;
 2272              		.loc 1 1403 15
 2273 00a4 0023     		movs	r3, #0
 2274 00a6 FB74     		strb	r3, [r7, #19]
 2275              	.L91:
1404:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   }
1405:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   
1406:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   return bitstatus;  
 2276              		.loc 1 1406 10
 2277 00a8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1407:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 2278              		.loc 1 1407 1
 2279 00aa 1846     		mov	r0, r3
 2280 00ac 1C37     		adds	r7, r7, #28
 2281              	.LCFI163:
 2282              		.cfi_def_cfa_offset 4
 2283 00ae BD46     		mov	sp, r7
 2284              	.LCFI164:
 2285              		.cfi_def_cfa_register 13
 2286              		@ sp needed
 2287 00b0 5DF8047B 		ldr	r7, [sp], #4
 2288              	.LCFI165:
 2289              		.cfi_restore 7
 2290              		.cfi_def_cfa_offset 0
 2291 00b4 7047     		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE137:
 2295              		.section	.text.USART_ClearITPendingBit,"ax",%progbits
 2296              		.align	1
 2297              		.global	USART_ClearITPendingBit
 2298              		.syntax unified
 2299              		.thumb
 2300              		.thumb_func
 2302              	USART_ClearITPendingBit:
 2303              	.LFB138:
1408:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1409:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** /**
1410:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
1411:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USARTx: where x can be 1, 2, 3, 4, 5 or 6 to select the USART or 
1412:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *         UART peripheral.
1413:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
1414:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          This parameter can be one of the following values:
1415:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_CTS:  CTS change interrupt (not available for UART4 and UART5)
1416:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_LBD:  LIN Break detection interrupt
ARM GAS  /tmp/ccsPm0Yr.s 			page 66


1417:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_TC:   Transmission complete interrupt. 
1418:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *            @arg USART_IT_RXNE: Receive Data register not empty interrupt.
1419:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *
1420:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   PE (Parity error), FE (Framing error), NE (Noise error), ORE (OverRun 
1421:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          error) and IDLE (Idle line detected) pending bits are cleared by 
1422:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          software sequence: a read operation to USART_SR register 
1423:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_GetITStatus()) followed by a read operation to USART_DR register 
1424:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1425:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   RXNE pending bit can be also cleared by a read to the USART_DR register 
1426:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_ReceiveData()).
1427:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TC pending bit can be also cleared by software sequence: a read 
1428:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_SR register (USART_GetITStatus()) followed by a write 
1429:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          operation to USART_DR register (USART_SendData()).
1430:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @note   TXE pending bit is cleared only by a write to the USART_DR register 
1431:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *          (USART_SendData()).
1432:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   *  
1433:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   * @retval None
1434:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   */
1435:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
1436:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** {
 2304              		.loc 1 1436 1
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 16
 2307              		@ frame_needed = 1, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
 2309 0000 80B4     		push	{r7}
 2310              	.LCFI166:
 2311              		.cfi_def_cfa_offset 4
 2312              		.cfi_offset 7, -4
 2313 0002 85B0     		sub	sp, sp, #20
 2314              	.LCFI167:
 2315              		.cfi_def_cfa_offset 24
 2316 0004 00AF     		add	r7, sp, #0
 2317              	.LCFI168:
 2318              		.cfi_def_cfa_register 7
 2319 0006 7860     		str	r0, [r7, #4]
 2320 0008 0B46     		mov	r3, r1
 2321 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1437:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   uint16_t bitpos = 0x00, itmask = 0x00;
 2322              		.loc 1 1437 12
 2323 000c 0023     		movs	r3, #0
 2324 000e FB81     		strh	r3, [r7, #14]	@ movhi
 2325              		.loc 1 1437 27
 2326 0010 0023     		movs	r3, #0
 2327 0012 BB81     		strh	r3, [r7, #12]	@ movhi
1438:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* Check the parameters */
1439:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
1440:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
1441:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** 
1442:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   /* The CTS interrupt is not available for UART4 and UART5 */
1443:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   if (USART_IT == USART_IT_CTS)
1444:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   {
1445:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     assert_param(IS_USART_1236_PERIPH(USARTx));
1446:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   } 
1447:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****     
1448:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   bitpos = USART_IT >> 0x08;
 2328              		.loc 1 1448 10
ARM GAS  /tmp/ccsPm0Yr.s 			page 67


 2329 0014 7B88     		ldrh	r3, [r7, #2]
 2330 0016 1B0A     		lsrs	r3, r3, #8
 2331 0018 FB81     		strh	r3, [r7, #14]	@ movhi
1449:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 2332              		.loc 1 1449 31
 2333 001a FB89     		ldrh	r3, [r7, #14]
 2334              		.loc 1 1449 28
 2335 001c 0122     		movs	r2, #1
 2336 001e 02FA03F3 		lsl	r3, r2, r3
 2337              		.loc 1 1449 10
 2338 0022 BB81     		strh	r3, [r7, #12]	@ movhi
1450:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c ****   USARTx->SR = (uint16_t)~itmask;
 2339              		.loc 1 1450 16
 2340 0024 BB89     		ldrh	r3, [r7, #12]	@ movhi
 2341 0026 DB43     		mvns	r3, r3
 2342 0028 9AB2     		uxth	r2, r3
 2343              		.loc 1 1450 14
 2344 002a 7B68     		ldr	r3, [r7, #4]
 2345 002c 1A80     		strh	r2, [r3]	@ movhi
1451:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_usart.c **** }
 2346              		.loc 1 1451 1
 2347 002e 00BF     		nop
 2348 0030 1437     		adds	r7, r7, #20
 2349              	.LCFI169:
 2350              		.cfi_def_cfa_offset 4
 2351 0032 BD46     		mov	sp, r7
 2352              	.LCFI170:
 2353              		.cfi_def_cfa_register 13
 2354              		@ sp needed
 2355 0034 5DF8047B 		ldr	r7, [sp], #4
 2356              	.LCFI171:
 2357              		.cfi_restore 7
 2358              		.cfi_def_cfa_offset 0
 2359 0038 7047     		bx	lr
 2360              		.cfi_endproc
 2361              	.LFE138:
 2363              		.text
 2364              	.Letext0:
 2365              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2366              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2367              		.file 4 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2368              		.file 5 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 2369              		.file 6 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
ARM GAS  /tmp/ccsPm0Yr.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_usart.c
     /tmp/ccsPm0Yr.s:21     .text.USART_DeInit:00000000 $t
     /tmp/ccsPm0Yr.s:27     .text.USART_DeInit:00000000 USART_DeInit
     /tmp/ccsPm0Yr.s:152    .text.USART_DeInit:000000bc $d
     /tmp/ccsPm0Yr.s:162    .text.USART_Init:00000000 $t
     /tmp/ccsPm0Yr.s:168    .text.USART_Init:00000000 USART_Init
     /tmp/ccsPm0Yr.s:430    .text.USART_Init:00000168 $d
     /tmp/ccsPm0Yr.s:437    .text.USART_StructInit:00000000 $t
     /tmp/ccsPm0Yr.s:443    .text.USART_StructInit:00000000 USART_StructInit
     /tmp/ccsPm0Yr.s:503    .text.USART_ClockInit:00000000 $t
     /tmp/ccsPm0Yr.s:509    .text.USART_ClockInit:00000000 USART_ClockInit
     /tmp/ccsPm0Yr.s:591    .text.USART_ClockStructInit:00000000 $t
     /tmp/ccsPm0Yr.s:597    .text.USART_ClockStructInit:00000000 USART_ClockStructInit
     /tmp/ccsPm0Yr.s:649    .text.USART_Cmd:00000000 $t
     /tmp/ccsPm0Yr.s:655    .text.USART_Cmd:00000000 USART_Cmd
     /tmp/ccsPm0Yr.s:719    .text.USART_SetPrescaler:00000000 $t
     /tmp/ccsPm0Yr.s:725    .text.USART_SetPrescaler:00000000 USART_SetPrescaler
     /tmp/ccsPm0Yr.s:783    .text.USART_OverSampling8Cmd:00000000 $t
     /tmp/ccsPm0Yr.s:789    .text.USART_OverSampling8Cmd:00000000 USART_OverSampling8Cmd
     /tmp/ccsPm0Yr.s:854    .text.USART_OneBitMethodCmd:00000000 $t
     /tmp/ccsPm0Yr.s:860    .text.USART_OneBitMethodCmd:00000000 USART_OneBitMethodCmd
     /tmp/ccsPm0Yr.s:924    .text.USART_SendData:00000000 $t
     /tmp/ccsPm0Yr.s:930    .text.USART_SendData:00000000 USART_SendData
     /tmp/ccsPm0Yr.s:975    .text.USART_ReceiveData:00000000 $t
     /tmp/ccsPm0Yr.s:981    .text.USART_ReceiveData:00000000 USART_ReceiveData
     /tmp/ccsPm0Yr.s:1024   .text.USART_SetAddress:00000000 $t
     /tmp/ccsPm0Yr.s:1030   .text.USART_SetAddress:00000000 USART_SetAddress
     /tmp/ccsPm0Yr.s:1088   .text.USART_ReceiverWakeUpCmd:00000000 $t
     /tmp/ccsPm0Yr.s:1094   .text.USART_ReceiverWakeUpCmd:00000000 USART_ReceiverWakeUpCmd
     /tmp/ccsPm0Yr.s:1158   .text.USART_WakeUpConfig:00000000 $t
     /tmp/ccsPm0Yr.s:1164   .text.USART_WakeUpConfig:00000000 USART_WakeUpConfig
     /tmp/ccsPm0Yr.s:1221   .text.USART_LINBreakDetectLengthConfig:00000000 $t
     /tmp/ccsPm0Yr.s:1227   .text.USART_LINBreakDetectLengthConfig:00000000 USART_LINBreakDetectLengthConfig
     /tmp/ccsPm0Yr.s:1284   .text.USART_LINCmd:00000000 $t
     /tmp/ccsPm0Yr.s:1290   .text.USART_LINCmd:00000000 USART_LINCmd
     /tmp/ccsPm0Yr.s:1354   .text.USART_SendBreak:00000000 $t
     /tmp/ccsPm0Yr.s:1360   .text.USART_SendBreak:00000000 USART_SendBreak
     /tmp/ccsPm0Yr.s:1405   .text.USART_HalfDuplexCmd:00000000 $t
     /tmp/ccsPm0Yr.s:1411   .text.USART_HalfDuplexCmd:00000000 USART_HalfDuplexCmd
     /tmp/ccsPm0Yr.s:1475   .text.USART_SetGuardTime:00000000 $t
     /tmp/ccsPm0Yr.s:1481   .text.USART_SetGuardTime:00000000 USART_SetGuardTime
     /tmp/ccsPm0Yr.s:1542   .text.USART_SmartCardCmd:00000000 $t
     /tmp/ccsPm0Yr.s:1548   .text.USART_SmartCardCmd:00000000 USART_SmartCardCmd
     /tmp/ccsPm0Yr.s:1612   .text.USART_SmartCardNACKCmd:00000000 $t
     /tmp/ccsPm0Yr.s:1618   .text.USART_SmartCardNACKCmd:00000000 USART_SmartCardNACKCmd
     /tmp/ccsPm0Yr.s:1682   .text.USART_IrDAConfig:00000000 $t
     /tmp/ccsPm0Yr.s:1688   .text.USART_IrDAConfig:00000000 USART_IrDAConfig
     /tmp/ccsPm0Yr.s:1745   .text.USART_IrDACmd:00000000 $t
     /tmp/ccsPm0Yr.s:1751   .text.USART_IrDACmd:00000000 USART_IrDACmd
     /tmp/ccsPm0Yr.s:1815   .text.USART_DMACmd:00000000 $t
     /tmp/ccsPm0Yr.s:1821   .text.USART_DMACmd:00000000 USART_DMACmd
     /tmp/ccsPm0Yr.s:1892   .text.USART_ITConfig:00000000 $t
     /tmp/ccsPm0Yr.s:1898   .text.USART_ITConfig:00000000 USART_ITConfig
     /tmp/ccsPm0Yr.s:2023   .text.USART_GetFlagStatus:00000000 $t
     /tmp/ccsPm0Yr.s:2029   .text.USART_GetFlagStatus:00000000 USART_GetFlagStatus
     /tmp/ccsPm0Yr.s:2092   .text.USART_ClearFlag:00000000 $t
ARM GAS  /tmp/ccsPm0Yr.s 			page 69


     /tmp/ccsPm0Yr.s:2098   .text.USART_ClearFlag:00000000 USART_ClearFlag
     /tmp/ccsPm0Yr.s:2143   .text.USART_GetITStatus:00000000 $t
     /tmp/ccsPm0Yr.s:2149   .text.USART_GetITStatus:00000000 USART_GetITStatus
     /tmp/ccsPm0Yr.s:2296   .text.USART_ClearITPendingBit:00000000 $t
     /tmp/ccsPm0Yr.s:2302   .text.USART_ClearITPendingBit:00000000 USART_ClearITPendingBit
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4.stm32f4xx.h.54.f84a67a8e71ba9719846fdff1868826c
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.2eefb68b261e70563a8ac654e712169f
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_conf.h.3.bc52e76ab6b5c9037500dbf5bb8f9be4
                           .group:00000000 wm4.misc.h.86.a3996e7f17199502fad3c7f62e5cdb3f
                           .group:00000000 wm4.stm32f4xx_adc.h.31.d96d805acd0f0c0392ec4633757dead3
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_cryp.h.31.94bbbb19b99df10306f31e78c333a77b
                           .group:00000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_hash.h.31.5c109425d30f0b9cc0a26ad38182d91f
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stm32f4xx_usart.h.110.a393510ad6699d607f43463c3924b7f4

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
