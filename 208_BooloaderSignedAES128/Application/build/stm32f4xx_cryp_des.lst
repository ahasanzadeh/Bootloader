ARM GAS  /tmp/ccxMait7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_cryp_des.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c"
  20              		.section	.text.CRYP_DES_ECB,"ax",%progbits
  21              		.align	1
  22              		.global	CRYP_DES_ECB
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CRYP_DES_ECB:
  28              	.LFB110:
   1:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
   2:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
   3:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @file    stm32f4xx_cryp_des.c
   4:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @author  MCD Application Team
   5:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @version V1.0.2
   6:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @date    05-March-2012
   7:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          input message using DES in ECB/CBC modes.
   9:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          peripheral.
  11:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  12:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @verbatim
  13:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  14:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  15:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *                                   How to use this driver
  16:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  17:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          1. Enable The CRYP controller clock using 
  18:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  20:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          2. Encrypt and decrypt using DES in ECB Mode using CRYP_DES_ECB()
  21:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  22:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  23:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          3. Encrypt and decrypt using DES in CBC Mode using CRYP_DES_CBC()
  24:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  25:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  26:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @endverbatim
  27:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  28:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  29:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @attention
  30:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
ARM GAS  /tmp/ccxMait7.s 			page 2


  31:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  32:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  33:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  34:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may not use this file except in compliance with the License.
  35:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * You may obtain a copy of the License at:
  36:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  37:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  38:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  39:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * Unless required by applicable law or agreed to in writing, software 
  40:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  41:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  42:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * See the License for the specific language governing permissions and
  43:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * limitations under the License.
  44:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  45:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  46:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  47:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  48:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Includes ------------------------------------------------------------------*/
  49:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #include "stm32f4xx_cryp.h"
  50:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  51:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  52:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  53:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  54:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  55:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  56:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP 
  57:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief CRYP driver modules
  58:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  59:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  60:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  61:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private typedef -----------------------------------------------------------*/
  62:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private define ------------------------------------------------------------*/
  63:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #define DESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  64:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  65:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private macro -------------------------------------------------------------*/
  66:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private variables ---------------------------------------------------------*/
  67:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private function prototypes -----------------------------------------------*/
  68:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private functions ---------------------------------------------------------*/
  69:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  70:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  71:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Private_Functions
  72:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  73:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */ 
  74:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  75:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Group8 High Level DES functions
  76:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *  @brief   High Level DES functions 
  77:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *
  78:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim   
  79:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  80:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                           High Level DES functions
  81:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  82:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  83:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  84:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  85:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  86:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
  87:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in ECB Mode
ARM GAS  /tmp/ccxMait7.s 			page 3


  88:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
  89:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *           This parameter can be one of the following values:
  90:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
  91:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
  92:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
  93:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
  94:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
  95:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
  96:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
  97:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
  98:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
  99:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 100:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_ECB(uint8_t Mode, uint8_t Key[8], uint8_t *Input, 
 101:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint32_t Ilength, uint8_t *Output)
 102:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
  29              		.loc 1 102 1
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 104
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 90B5     		push	{r4, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 9BB0     		sub	sp, sp, #108
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 120
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 B960     		str	r1, [r7, #8]
  46 0008 7A60     		str	r2, [r7, #4]
  47 000a 3B60     		str	r3, [r7]
  48 000c 0346     		mov	r3, r0
  49 000e FB73     		strb	r3, [r7, #15]
 103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 104:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 105:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
  50              		.loc 1 105 17
  51 0010 0023     		movs	r3, #0
  52 0012 7B61     		str	r3, [r7, #20]
 106:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
  53              		.loc 1 106 12
  54 0014 0023     		movs	r3, #0
  55 0016 7B65     		str	r3, [r7, #84]
 107:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
  56              		.loc 1 107 15
  57 0018 0123     		movs	r3, #1
  58 001a 87F86730 		strb	r3, [r7, #103]
 108:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
  59              		.loc 1 108 12
  60 001e BB68     		ldr	r3, [r7, #8]
  61 0020 3B65     		str	r3, [r7, #80]
 109:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
  62              		.loc 1 109 12
  63 0022 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccxMait7.s 			page 4


  64 0024 3B66     		str	r3, [r7, #96]
 110:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
  65              		.loc 1 110 12
  66 0026 BB6F     		ldr	r3, [r7, #120]
  67 0028 FB65     		str	r3, [r7, #92]
 111:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
  68              		.loc 1 111 12
  69 002a 0023     		movs	r3, #0
  70 002c BB65     		str	r3, [r7, #88]
 112:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 113:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 114:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
  71              		.loc 1 114 3
  72 002e 07F11803 		add	r3, r7, #24
  73 0032 1846     		mov	r0, r3
  74 0034 FFF7FEFF 		bl	CRYP_KeyStructInit
 115:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 116:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 117:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if( Mode == MODE_ENCRYPT ) /* DES encryption */
  75              		.loc 1 117 5
  76 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  77 003a 012B     		cmp	r3, #1
  78 003c 02D1     		bne	.L2
 118:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 119:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
  79              		.loc 1 119 43
  80 003e 0023     		movs	r3, #0
  81 0040 3B87     		strh	r3, [r7, #56]	@ movhi
  82 0042 01E0     		b	.L3
  83              	.L2:
 120:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else/* if( Mode == MODE_DECRYPT )*/ /* DES decryption */
 122:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {      
 123:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
  84              		.loc 1 123 43
  85 0044 0423     		movs	r3, #4
  86 0046 3B87     		strh	r3, [r7, #56]	@ movhi
  87              	.L3:
 124:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 125:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 126:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
  88              		.loc 1 126 40
  89 0048 1023     		movs	r3, #16
  90 004a 7B87     		strh	r3, [r7, #58]	@ movhi
 127:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
  91              		.loc 1 127 40
  92 004c 8023     		movs	r3, #128
  93 004e BB87     		strh	r3, [r7, #60]	@ movhi
 128:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
  94              		.loc 1 128 3
  95 0050 07F13803 		add	r3, r7, #56
  96 0054 1846     		mov	r0, r3
  97 0056 FFF7FEFF 		bl	CRYP_Init
 129:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 130:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 131:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
  98              		.loc 1 131 52
ARM GAS  /tmp/ccxMait7.s 			page 5


  99 005a 3B6D     		ldr	r3, [r7, #80]
 100              		.loc 1 131 45
 101 005c 1B68     		ldr	r3, [r3]
 102 005e 7B64     		str	r3, [r7, #68]
 103              	.LBB14:
 104              	.LBB15:
 105              		.file 2 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h"
   1:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
   7:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @note
   8:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  10:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  11:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  15:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * @par
  16:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  *
  22:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  24:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  27:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  28:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   @{
  32:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** */
  33:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  34:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  37:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif
  40:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  41:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  42:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  44:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  46:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  48:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  49:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccxMait7.s 			page 6


  51:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  54:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  56:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  57:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  59:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  62:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  64:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  65:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  67:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  69:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  71:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  72:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  74:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  78:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  80:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  81:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  83:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  86:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  88:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  89:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  91:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
  94:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  96:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  97:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
  99:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 101:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 104:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 106:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 107:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
ARM GAS  /tmp/ccxMait7.s 			page 7


 108:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 109:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 111:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 114:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 116:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 119:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 120:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 121:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 123:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 125:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 128:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 130:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 133:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 134:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 135:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 137:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 139:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 141:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 144:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 146:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 147:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 149:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 151:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 154:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 156:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 157:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 159:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 161:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 164:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
ARM GAS  /tmp/ccxMait7.s 			page 8


 165:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 166:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 167:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 169:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 171:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 174:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 176:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 177:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 179:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 181:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 186:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 188:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 189:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 191:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 193:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 198:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 200:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 201:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 203:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 205:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 210:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 212:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 213:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 215:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 217:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 218:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 220:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 221:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
ARM GAS  /tmp/ccxMait7.s 			page 9


 222:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 223:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 225:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 229:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 231:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 232:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 234:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 236:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 240:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 242:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 243:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 245:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 247:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 250:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 252:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 254:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 255:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 256:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 259:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 261:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 262:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 265:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 267:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 269:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 271:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 273:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 274:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 275:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 277:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
ARM GAS  /tmp/ccxMait7.s 			page 10


 279:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 280:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 282:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 284:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 285:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 286:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 288:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 291:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 293:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 295:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 296:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 297:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 299:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 301:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 303:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 305:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 306:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 307:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 309:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 313:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 315:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 317:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 318:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 319:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 321:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 324:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 326:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 328:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 329:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 330:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 332:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 335:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
ARM GAS  /tmp/ccxMait7.s 			page 11


 336:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 337:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** }
 339:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 340:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 341:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 343:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** 
 345:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 347:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****  */
 348:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:../Shared/Libraries/CMSIS/Include/core_cmInstr.h **** {
 350:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 351:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 106              		.loc 2 352 3
 107 0060 7B6C     		ldr	r3, [r7, #68]
 108              		.syntax unified
 109              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 110 0062 1BBA     		rev r3, r3
 111              	@ 0 "" 2
 112              		.thumb
 113              		.syntax unified
 114 0064 3B64     		str	r3, [r7, #64]
 353:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 115              		.loc 2 353 9
 116 0066 3B6C     		ldr	r3, [r7, #64]
 117              	.LBE15:
 118              	.LBE14:
 119              		.loc 1 131 43 discriminator 1
 120 0068 3B62     		str	r3, [r7, #32]
 132:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 121              		.loc 1 132 10
 122 006a 3B6D     		ldr	r3, [r7, #80]
 123 006c 0433     		adds	r3, r3, #4
 124 006e 3B65     		str	r3, [r7, #80]
 133:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 125              		.loc 1 133 52
 126 0070 3B6D     		ldr	r3, [r7, #80]
 127              		.loc 1 133 45
 128 0072 1B68     		ldr	r3, [r3]
 129 0074 FB64     		str	r3, [r7, #76]
 130              	.LBB16:
 131              	.LBB17:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 132              		.loc 2 352 3
 133 0076 FB6C     		ldr	r3, [r7, #76]
 134              		.syntax unified
 135              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 136 0078 1BBA     		rev r3, r3
 137              	@ 0 "" 2
 138              		.thumb
 139              		.syntax unified
 140 007a BB64     		str	r3, [r7, #72]
 141              		.loc 2 353 9
ARM GAS  /tmp/ccxMait7.s 			page 12


 142 007c BB6C     		ldr	r3, [r7, #72]
 143              	.LBE17:
 144              	.LBE16:
 145              		.loc 1 133 43 discriminator 1
 146 007e 7B62     		str	r3, [r7, #36]
 134:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 147              		.loc 1 134 3
 148 0080 07F11803 		add	r3, r7, #24
 149 0084 1846     		mov	r0, r3
 150 0086 FFF7FEFF 		bl	CRYP_KeyInit
 135:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 136:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 137:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 151              		.loc 1 137 3
 152 008a FFF7FEFF 		bl	CRYP_FIFOFlush
 138:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 139:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 140:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 153              		.loc 1 140 3
 154 008e 0120     		movs	r0, #1
 155 0090 FFF7FEFF 		bl	CRYP_Cmd
 141:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 156              		.loc 1 142 8
 157 0094 0023     		movs	r3, #0
 158 0096 BB65     		str	r3, [r7, #88]
 159              		.loc 1 142 3
 160 0098 3AE0     		b	.L6
 161              	.L12:
 143:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 144:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 145:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 146:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 162              		.loc 1 146 18
 163 009a 3B6E     		ldr	r3, [r7, #96]
 164              		.loc 1 146 5
 165 009c 1B68     		ldr	r3, [r3]
 166 009e 1846     		mov	r0, r3
 167 00a0 FFF7FEFF 		bl	CRYP_DataIn
 147:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 168              		.loc 1 147 14
 169 00a4 3B6E     		ldr	r3, [r7, #96]
 170 00a6 0433     		adds	r3, r3, #4
 171 00a8 3B66     		str	r3, [r7, #96]
 148:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 172              		.loc 1 148 18
 173 00aa 3B6E     		ldr	r3, [r7, #96]
 174              		.loc 1 148 5
 175 00ac 1B68     		ldr	r3, [r3]
 176 00ae 1846     		mov	r0, r3
 177 00b0 FFF7FEFF 		bl	CRYP_DataIn
 149:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 178              		.loc 1 149 14
 179 00b4 3B6E     		ldr	r3, [r7, #96]
 180 00b6 0433     		adds	r3, r3, #4
 181 00b8 3B66     		str	r3, [r7, #96]
 150:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
ARM GAS  /tmp/ccxMait7.s 			page 13


 151:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Wait until the complete message has been processed */
 152:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 182              		.loc 1 152 13
 183 00ba 0023     		movs	r3, #0
 184 00bc 7B61     		str	r3, [r7, #20]
 185              	.L8:
 153:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 154:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 155:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 186              		.loc 1 155 20
 187 00be 1020     		movs	r0, #16
 188 00c0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 189 00c4 0346     		mov	r3, r0
 190              		.loc 1 155 18 discriminator 1
 191 00c6 7B65     		str	r3, [r7, #84]
 156:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 192              		.loc 1 156 14
 193 00c8 7B69     		ldr	r3, [r7, #20]
 194 00ca 0133     		adds	r3, r3, #1
 195 00cc 7B61     		str	r3, [r7, #20]
 157:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 196              		.loc 1 157 22 discriminator 2
 197 00ce 7B69     		ldr	r3, [r7, #20]
 198              		.loc 1 157 42 discriminator 2
 199 00d0 B3F5803F 		cmp	r3, #65536
 200 00d4 02D0     		beq	.L7
 201              		.loc 1 157 42 is_stmt 0 discriminator 1
 202 00d6 7B6D     		ldr	r3, [r7, #84]
 203 00d8 002B     		cmp	r3, #0
 204 00da F0D1     		bne	.L8
 205              	.L7:
 158:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 159:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 206              		.loc 1 159 8 is_stmt 1
 207 00dc 7B6D     		ldr	r3, [r7, #84]
 208 00de 002B     		cmp	r3, #0
 209 00e0 03D0     		beq	.L9
 160:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 161:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 210              		.loc 1 161 15
 211 00e2 0023     		movs	r3, #0
 212 00e4 87F86730 		strb	r3, [r7, #103]
 213 00e8 0FE0     		b	.L10
 214              	.L9:
 162:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 163:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 164:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 165:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 166:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 167:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 215              		.loc 1 167 8
 216 00ea FC6D     		ldr	r4, [r7, #92]
 217              		.loc 1 167 34
 218 00ec FFF7FEFF 		bl	CRYP_DataOut
 219 00f0 0346     		mov	r3, r0
 220              		.loc 1 167 32 discriminator 1
 221 00f2 2360     		str	r3, [r4]
ARM GAS  /tmp/ccxMait7.s 			page 14


 168:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 222              		.loc 1 168 17
 223 00f4 FB6D     		ldr	r3, [r7, #92]
 224 00f6 0433     		adds	r3, r3, #4
 225 00f8 FB65     		str	r3, [r7, #92]
 169:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 226              		.loc 1 169 8
 227 00fa FC6D     		ldr	r4, [r7, #92]
 228              		.loc 1 169 34
 229 00fc FFF7FEFF 		bl	CRYP_DataOut
 230 0100 0346     		mov	r3, r0
 231              		.loc 1 169 32 discriminator 1
 232 0102 2360     		str	r3, [r4]
 170:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 233              		.loc 1 170 17
 234 0104 FB6D     		ldr	r3, [r7, #92]
 235 0106 0433     		adds	r3, r3, #4
 236 0108 FB65     		str	r3, [r7, #92]
 237              	.L10:
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 238              		.loc 1 142 49 discriminator 2
 239 010a BB6D     		ldr	r3, [r7, #88]
 240 010c 0833     		adds	r3, r3, #8
 241 010e BB65     		str	r3, [r7, #88]
 242              	.L6:
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 243              		.loc 1 142 25 discriminator 1
 244 0110 BA6D     		ldr	r2, [r7, #88]
 245 0112 3B68     		ldr	r3, [r7]
 246 0114 9A42     		cmp	r2, r3
 247 0116 03D2     		bcs	.L11
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 248              		.loc 1 142 25 is_stmt 0 discriminator 3
 249 0118 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 250 011c 002B     		cmp	r3, #0
 251 011e BCD1     		bne	.L12
 252              	.L11:
 171:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 172:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 173:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 174:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 175:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 253              		.loc 1 175 3 is_stmt 1
 254 0120 0020     		movs	r0, #0
 255 0122 FFF7FEFF 		bl	CRYP_Cmd
 176:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 177:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 256              		.loc 1 177 10
 257 0126 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 178:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 258              		.loc 1 178 1
 259 012a 1846     		mov	r0, r3
 260 012c 6C37     		adds	r7, r7, #108
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 12
 263 012e BD46     		mov	sp, r7
 264              	.LCFI4:
ARM GAS  /tmp/ccxMait7.s 			page 15


 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 0130 90BD     		pop	{r4, r7, pc}
 268              		.cfi_endproc
 269              	.LFE110:
 271              		.section	.text.CRYP_DES_CBC,"ax",%progbits
 272              		.align	1
 273              		.global	CRYP_DES_CBC
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	CRYP_DES_CBC:
 279              	.LFB111:
 179:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 180:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
 181:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in CBC Mode
 182:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
 183:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          This parameter can be one of the following values:
 184:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
 185:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
 186:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
 187:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  InitVectors: Initialisation Vectors used for DES algorithm.
 188:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 189:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
 190:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
 191:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
 192:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
 193:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
 194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 195:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_CBC(uint8_t Mode, uint8_t Key[8], uint8_t InitVectors[8],
 196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 280              		.loc 1 197 1
 281              		.cfi_startproc
 282              		@ args = 8, pretend = 0, frame = 136
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 90B5     		push	{r4, r7, lr}
 285              	.LCFI5:
 286              		.cfi_def_cfa_offset 12
 287              		.cfi_offset 4, -12
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 A3B0     		sub	sp, sp, #140
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 152
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI7:
 295              		.cfi_def_cfa_register 7
 296 0006 B960     		str	r1, [r7, #8]
 297 0008 7A60     		str	r2, [r7, #4]
 298 000a 3B60     		str	r3, [r7]
 299 000c 0346     		mov	r3, r0
 300 000e FB73     		strb	r3, [r7, #15]
 198:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 200:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
 201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
ARM GAS  /tmp/ccxMait7.s 			page 16


 301              		.loc 1 201 17
 302 0010 0023     		movs	r3, #0
 303 0012 3B61     		str	r3, [r7, #16]
 202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
 304              		.loc 1 202 12
 305 0014 0023     		movs	r3, #0
 306 0016 7B67     		str	r3, [r7, #116]
 203:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 307              		.loc 1 203 15
 308 0018 0123     		movs	r3, #1
 309 001a 87F88730 		strb	r3, [r7, #135]
 204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 310              		.loc 1 204 12
 311 001e BB68     		ldr	r3, [r7, #8]
 312 0020 3B67     		str	r3, [r7, #112]
 205:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 313              		.loc 1 205 12
 314 0022 3B68     		ldr	r3, [r7]
 315 0024 C7F88030 		str	r3, [r7, #128]
 206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 316              		.loc 1 206 12
 317 0028 D7F89C30 		ldr	r3, [r7, #156]
 318 002c FB67     		str	r3, [r7, #124]
 207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 319              		.loc 1 207 12
 320 002e 7B68     		ldr	r3, [r7, #4]
 321 0030 FB66     		str	r3, [r7, #108]
 208:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 322              		.loc 1 208 12
 323 0032 0023     		movs	r3, #0
 324 0034 BB67     		str	r3, [r7, #120]
 209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 210:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 325              		.loc 1 211 3
 326 0036 07F12403 		add	r3, r7, #36
 327 003a 1846     		mov	r0, r3
 328 003c FFF7FEFF 		bl	CRYP_KeyStructInit
 212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 214:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(Mode == MODE_ENCRYPT) /* DES encryption */
 329              		.loc 1 214 5
 330 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 331 0042 012B     		cmp	r3, #1
 332 0044 03D1     		bne	.L15
 215:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 333              		.loc 1 216 43
 334 0046 0023     		movs	r3, #0
 335 0048 A7F84430 		strh	r3, [r7, #68]	@ movhi
 336 004c 02E0     		b	.L16
 337              	.L15:
 217:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* DES decryption */
 219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 220:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 338              		.loc 1 220 43
ARM GAS  /tmp/ccxMait7.s 			page 17


 339 004e 0423     		movs	r3, #4
 340 0050 A7F84430 		strh	r3, [r7, #68]	@ movhi
 341              	.L16:
 221:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 222:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 223:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
 342              		.loc 1 223 40
 343 0054 1823     		movs	r3, #24
 344 0056 A7F84630 		strh	r3, [r7, #70]	@ movhi
 224:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 345              		.loc 1 224 40
 346 005a 8023     		movs	r3, #128
 347 005c A7F84830 		strh	r3, [r7, #72]	@ movhi
 225:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 348              		.loc 1 225 3
 349 0060 07F14403 		add	r3, r7, #68
 350 0064 1846     		mov	r0, r3
 351 0066 FFF7FEFF 		bl	CRYP_Init
 226:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 227:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 228:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 352              		.loc 1 228 52
 353 006a 3B6F     		ldr	r3, [r7, #112]
 354              		.loc 1 228 45
 355 006c 1B68     		ldr	r3, [r3]
 356 006e 3B65     		str	r3, [r7, #80]
 357              	.LBB18:
 358              	.LBB19:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 359              		.loc 2 352 3
 360 0070 3B6D     		ldr	r3, [r7, #80]
 361              		.syntax unified
 362              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 363 0072 1BBA     		rev r3, r3
 364              	@ 0 "" 2
 365              		.thumb
 366              		.syntax unified
 367 0074 FB64     		str	r3, [r7, #76]
 368              		.loc 2 353 9
 369 0076 FB6C     		ldr	r3, [r7, #76]
 370              	.LBE19:
 371              	.LBE18:
 372              		.loc 1 228 43 discriminator 1
 373 0078 FB62     		str	r3, [r7, #44]
 229:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 374              		.loc 1 229 10
 375 007a 3B6F     		ldr	r3, [r7, #112]
 376 007c 0433     		adds	r3, r3, #4
 377 007e 3B67     		str	r3, [r7, #112]
 230:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 378              		.loc 1 230 52
 379 0080 3B6F     		ldr	r3, [r7, #112]
 380              		.loc 1 230 45
 381 0082 1B68     		ldr	r3, [r3]
 382 0084 BB65     		str	r3, [r7, #88]
 383              	.LBB20:
 384              	.LBB21:
ARM GAS  /tmp/ccxMait7.s 			page 18


 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 385              		.loc 2 352 3
 386 0086 BB6D     		ldr	r3, [r7, #88]
 387              		.syntax unified
 388              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 389 0088 1BBA     		rev r3, r3
 390              	@ 0 "" 2
 391              		.thumb
 392              		.syntax unified
 393 008a 7B65     		str	r3, [r7, #84]
 394              		.loc 2 353 9
 395 008c 7B6D     		ldr	r3, [r7, #84]
 396              	.LBE21:
 397              	.LBE20:
 398              		.loc 1 230 43 discriminator 1
 399 008e 3B63     		str	r3, [r7, #48]
 231:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 400              		.loc 1 231 3
 401 0090 07F12403 		add	r3, r7, #36
 402 0094 1846     		mov	r0, r3
 403 0096 FFF7FEFF 		bl	CRYP_KeyInit
 232:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 233:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Initialization Vectors */
 234:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 404              		.loc 1 234 50
 405 009a FB6E     		ldr	r3, [r7, #108]
 406              		.loc 1 234 43
 407 009c 1B68     		ldr	r3, [r3]
 408 009e 3B66     		str	r3, [r7, #96]
 409              	.LBB22:
 410              	.LBB23:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 411              		.loc 2 352 3
 412 00a0 3B6E     		ldr	r3, [r7, #96]
 413              		.syntax unified
 414              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 415 00a2 1BBA     		rev r3, r3
 416              	@ 0 "" 2
 417              		.thumb
 418              		.syntax unified
 419 00a4 FB65     		str	r3, [r7, #92]
 420              		.loc 2 353 9
 421 00a6 FB6D     		ldr	r3, [r7, #92]
 422              	.LBE23:
 423              	.LBE22:
 424              		.loc 1 234 41 discriminator 1
 425 00a8 7B61     		str	r3, [r7, #20]
 235:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ivaddr+=4;
 426              		.loc 1 235 9
 427 00aa FB6E     		ldr	r3, [r7, #108]
 428 00ac 0433     		adds	r3, r3, #4
 429 00ae FB66     		str	r3, [r7, #108]
 236:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 430              		.loc 1 236 50
 431 00b0 FB6E     		ldr	r3, [r7, #108]
 432              		.loc 1 236 43
 433 00b2 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccxMait7.s 			page 19


 434 00b4 BB66     		str	r3, [r7, #104]
 435              	.LBB24:
 436              	.LBB25:
 352:../Shared/Libraries/CMSIS/Include/core_cmInstr.h ****   return(result);
 437              		.loc 2 352 3
 438 00b6 BB6E     		ldr	r3, [r7, #104]
 439              		.syntax unified
 440              	@ 352 "../Shared/Libraries/CMSIS/Include/core_cmInstr.h" 1
 441 00b8 1BBA     		rev r3, r3
 442              	@ 0 "" 2
 443              		.thumb
 444              		.syntax unified
 445 00ba 7B66     		str	r3, [r7, #100]
 446              		.loc 2 353 9
 447 00bc 7B6E     		ldr	r3, [r7, #100]
 448              	.LBE25:
 449              	.LBE24:
 450              		.loc 1 236 41 discriminator 1
 451 00be BB61     		str	r3, [r7, #24]
 237:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInit(&DES_CRYP_IVInitStructure);
 452              		.loc 1 237 3
 453 00c0 07F11403 		add	r3, r7, #20
 454 00c4 1846     		mov	r0, r3
 455 00c6 FFF7FEFF 		bl	CRYP_IVInit
 238:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 240:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 456              		.loc 1 240 3
 457 00ca FFF7FEFF 		bl	CRYP_FIFOFlush
 241:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
 242:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 243:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 458              		.loc 1 243 3
 459 00ce 0120     		movs	r0, #1
 460 00d0 FFF7FEFF 		bl	CRYP_Cmd
 244:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 461              		.loc 1 245 8
 462 00d4 0023     		movs	r3, #0
 463 00d6 BB67     		str	r3, [r7, #120]
 464              		.loc 1 245 3
 465 00d8 40E0     		b	.L21
 466              	.L27:
 246:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 247:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 248:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 467              		.loc 1 248 18
 468 00da D7F88030 		ldr	r3, [r7, #128]
 469              		.loc 1 248 5
 470 00de 1B68     		ldr	r3, [r3]
 471 00e0 1846     		mov	r0, r3
 472 00e2 FFF7FEFF 		bl	CRYP_DataIn
 249:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 473              		.loc 1 249 14
 474 00e6 D7F88030 		ldr	r3, [r7, #128]
 475 00ea 0433     		adds	r3, r3, #4
 476 00ec C7F88030 		str	r3, [r7, #128]
ARM GAS  /tmp/ccxMait7.s 			page 20


 250:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 477              		.loc 1 250 18
 478 00f0 D7F88030 		ldr	r3, [r7, #128]
 479              		.loc 1 250 5
 480 00f4 1B68     		ldr	r3, [r3]
 481 00f6 1846     		mov	r0, r3
 482 00f8 FFF7FEFF 		bl	CRYP_DataIn
 251:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 483              		.loc 1 251 14
 484 00fc D7F88030 		ldr	r3, [r7, #128]
 485 0100 0433     		adds	r3, r3, #4
 486 0102 C7F88030 		str	r3, [r7, #128]
 252:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 253:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Wait until the complete message has been processed */
 254:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 487              		.loc 1 254 13
 488 0106 0023     		movs	r3, #0
 489 0108 3B61     		str	r3, [r7, #16]
 490              	.L23:
 255:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 257:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 491              		.loc 1 257 20
 492 010a 1020     		movs	r0, #16
 493 010c FFF7FEFF 		bl	CRYP_GetFlagStatus
 494 0110 0346     		mov	r3, r0
 495              		.loc 1 257 18 discriminator 1
 496 0112 7B67     		str	r3, [r7, #116]
 258:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 497              		.loc 1 258 14
 498 0114 3B69     		ldr	r3, [r7, #16]
 499 0116 0133     		adds	r3, r3, #1
 500 0118 3B61     		str	r3, [r7, #16]
 259:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 501              		.loc 1 259 22 discriminator 2
 502 011a 3B69     		ldr	r3, [r7, #16]
 503              		.loc 1 259 42 discriminator 2
 504 011c B3F5803F 		cmp	r3, #65536
 505 0120 02D0     		beq	.L22
 506              		.loc 1 259 42 is_stmt 0 discriminator 1
 507 0122 7B6F     		ldr	r3, [r7, #116]
 508 0124 002B     		cmp	r3, #0
 509 0126 F0D1     		bne	.L23
 510              	.L22:
 260:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 261:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 511              		.loc 1 261 8 is_stmt 1
 512 0128 7B6F     		ldr	r3, [r7, #116]
 513 012a 002B     		cmp	r3, #0
 514 012c 03D0     		beq	.L24
 262:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 263:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 515              		.loc 1 263 15
 516 012e 0023     		movs	r3, #0
 517 0130 87F88730 		strb	r3, [r7, #135]
 518 0134 0FE0     		b	.L25
 519              	.L24:
ARM GAS  /tmp/ccxMait7.s 			page 21


 264:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 265:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 266:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 267:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 520              		.loc 1 268 8
 521 0136 FC6F     		ldr	r4, [r7, #124]
 522              		.loc 1 268 34
 523 0138 FFF7FEFF 		bl	CRYP_DataOut
 524 013c 0346     		mov	r3, r0
 525              		.loc 1 268 32 discriminator 1
 526 013e 2360     		str	r3, [r4]
 269:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 527              		.loc 1 269 17
 528 0140 FB6F     		ldr	r3, [r7, #124]
 529 0142 0433     		adds	r3, r3, #4
 530 0144 FB67     		str	r3, [r7, #124]
 270:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 531              		.loc 1 270 8
 532 0146 FC6F     		ldr	r4, [r7, #124]
 533              		.loc 1 270 34
 534 0148 FFF7FEFF 		bl	CRYP_DataOut
 535 014c 0346     		mov	r3, r0
 536              		.loc 1 270 32 discriminator 1
 537 014e 2360     		str	r3, [r4]
 271:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 538              		.loc 1 271 17
 539 0150 FB6F     		ldr	r3, [r7, #124]
 540 0152 0433     		adds	r3, r3, #4
 541 0154 FB67     		str	r3, [r7, #124]
 542              	.L25:
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 543              		.loc 1 245 49 discriminator 2
 544 0156 BB6F     		ldr	r3, [r7, #120]
 545 0158 0833     		adds	r3, r3, #8
 546 015a BB67     		str	r3, [r7, #120]
 547              	.L21:
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 548              		.loc 1 245 25 discriminator 1
 549 015c BA6F     		ldr	r2, [r7, #120]
 550 015e D7F89830 		ldr	r3, [r7, #152]
 551 0162 9A42     		cmp	r2, r3
 552 0164 03D2     		bcs	.L26
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 553              		.loc 1 245 25 is_stmt 0 discriminator 3
 554 0166 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 555 016a 002B     		cmp	r3, #0
 556 016c B5D1     		bne	.L27
 557              	.L26:
 272:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 273:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 274:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 275:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 276:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 558              		.loc 1 276 3 is_stmt 1
 559 016e 0020     		movs	r0, #0
 560 0170 FFF7FEFF 		bl	CRYP_Cmd
ARM GAS  /tmp/ccxMait7.s 			page 22


 277:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 561              		.loc 1 278 10
 562 0174 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 279:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 563              		.loc 1 279 1
 564 0178 1846     		mov	r0, r3
 565 017a 8C37     		adds	r7, r7, #140
 566              	.LCFI8:
 567              		.cfi_def_cfa_offset 12
 568 017c BD46     		mov	sp, r7
 569              	.LCFI9:
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 017e 90BD     		pop	{r4, r7, pc}
 573              		.cfi_endproc
 574              	.LFE111:
 576              		.text
 577              	.Letext0:
 578              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 579              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 580              		.file 5 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 581              		.file 6 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
ARM GAS  /tmp/ccxMait7.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_des.c
     /tmp/ccxMait7.s:21     .text.CRYP_DES_ECB:00000000 $t
     /tmp/ccxMait7.s:27     .text.CRYP_DES_ECB:00000000 CRYP_DES_ECB
     /tmp/ccxMait7.s:272    .text.CRYP_DES_CBC:00000000 $t
     /tmp/ccxMait7.s:278    .text.CRYP_DES_CBC:00000000 CRYP_DES_CBC
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4.stm32f4xx.h.54.f84a67a8e71ba9719846fdff1868826c
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.2eefb68b261e70563a8ac654e712169f
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_conf.h.3.bc52e76ab6b5c9037500dbf5bb8f9be4
                           .group:00000000 wm4.misc.h.86.a3996e7f17199502fad3c7f62e5cdb3f
                           .group:00000000 wm4.stm32f4xx_adc.h.31.d96d805acd0f0c0392ec4633757dead3
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_hash.h.31.5c109425d30f0b9cc0a26ad38182d91f
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_usart.h.31.f8d29b14aa4d39de5495adcc92749d3c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.31.b45a80fa1ec64984adf786f7e489f31b
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stm32f4xx_cryp.h.125.59051ea0c9977c45a9bf7528170ecab2

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
ARM GAS  /tmp/ccxMait7.s 			page 24


