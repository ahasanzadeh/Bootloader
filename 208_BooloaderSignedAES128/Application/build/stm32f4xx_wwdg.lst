ARM GAS  /tmp/ccQ8MbHH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_wwdg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c"
  20              		.section	.text.WWDG_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	WWDG_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	WWDG_DeInit:
  28              	.LFB110:
   1:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
   2:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @version V1.0.2
   6:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @date    05-March-2012
   7:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Prescaler, Refresh window and Counter configuration
  10:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - WWDG activation
  11:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Interrupts and flags management
  12:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             
  13:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @verbatim
  14:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *    
  15:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  16:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                     WWDG features
  17:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  18:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                        
  19:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG generates a system reset on expiry of a programmed
  20:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          time period, unless the program refreshes the counter (downcounter) 
  21:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before to reach 0x3F value (i.e. a reset is generated when the counter
  22:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          value rolls over from 0x40 to 0x3F). 
  23:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          An MCU reset is also generated if the counter value is refreshed
  24:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before the counter has reached the refresh window value. This 
  25:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          implies that the counter must be refreshed in a limited window.
  26:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  27:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG cannot be disabled except by a system reset.                    
  28:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          
  29:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  30:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          reset occurs.
ARM GAS  /tmp/ccQ8MbHH.s 			page 2


  31:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  32:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          The WWDG counter input clock is derived from the APB clock divided 
  33:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          by a programmable prescaler.
  34:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *              
  35:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG counter clock = PCLK1 / Prescaler
  36:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG timeout = (WWDG counter clock) * (counter value)
  37:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                      
  38:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Min-max timeout value @42 MHz(PCLK1): ~97.5 us / ~49.9 ms
  39:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                            
  40:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  41:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                 How to use this driver
  42:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          =================================================================== 
  43:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          1. Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) functio
  44:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  45:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          2. Configure the WWDG prescaler using WWDG_SetPrescaler() function
  46:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                           
  47:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          3. Configure the WWDG refresh window using WWDG_SetWindowValue() function
  48:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  49:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          4. Set the WWDG counter value and start it using WWDG_Enable() function.
  50:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             When the WWDG is enabled the counter value should be configured to 
  51:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             a value greater than 0x40 to prevent generating an immediate reset.     
  52:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  53:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          5. Optionally you can enable the Early wakeup interrupt which is 
  54:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             generated when the counter reach 0x40.
  55:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             Once enabled this interrupt cannot be disabled except by a system reset.
  56:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                 
  57:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          6. Then the application program must refresh the WWDG counter at regular
  58:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  59:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             WWDG_SetCounter() function. This operation must occur only when
  60:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             the counter value is lower than the refresh window value, 
  61:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             programmed using WWDG_SetWindowValue().         
  62:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  63:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @endverbatim  
  64:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                             
  65:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  66:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @attention
  67:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  68:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  69:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  70:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  71:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * You may not use this file except in compliance with the License.
  72:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * You may obtain a copy of the License at:
  73:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  74:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  75:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  76:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * Unless required by applicable law or agreed to in writing, software 
  77:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  78:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  79:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * See the License for the specific language governing permissions and
  80:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * limitations under the License.
  81:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  82:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  83:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  84:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  85:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  86:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  87:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
ARM GAS  /tmp/ccQ8MbHH.s 			page 3


  88:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  89:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  90:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  91:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  92:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  93:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  94:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  95:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  96:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  97:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  98:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  99:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
 100:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 101:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
 102:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
 103:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
 104:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
 105:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
 106:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 107:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 108:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 109:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 110:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 111:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 112:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 113:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 114:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 115:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 116:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 117:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 118:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 119:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 120:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 121:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 122:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 123:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 124:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 125:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 126:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 127:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 128:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****           Prescaler, Refresh window and Counter configuration functions
 129:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 130:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 131:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 132:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 133:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 134:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 135:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 136:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 137:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 138:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 139:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 140:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 141:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  29              		.loc 1 141 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccQ8MbHH.s 			page 4


  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
 142:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
  41              		.loc 1 142 3
  42 0004 0121     		movs	r1, #1
  43 0006 4FF40060 		mov	r0, #2048
  44 000a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 143:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
  45              		.loc 1 143 3
  46 000e 0021     		movs	r1, #0
  47 0010 4FF40060 		mov	r0, #2048
  48 0014 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 144:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  49              		.loc 1 144 1
  50 0018 00BF     		nop
  51 001a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE110:
  55              		.section	.text.WWDG_SetPrescaler,"ax",%progbits
  56              		.align	1
  57              		.global	WWDG_SetPrescaler
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  62              	WWDG_SetPrescaler:
  63              	.LFB111:
 145:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 146:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 147:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 148:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 149:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 150:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 151:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 152:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 153:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 154:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 155:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 156:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 157:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
  64              		.loc 1 157 1
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 16
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69 0000 80B4     		push	{r7}
  70              	.LCFI2:
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 85B0     		sub	sp, sp, #20
  74              	.LCFI3:
ARM GAS  /tmp/ccQ8MbHH.s 			page 5


  75              		.cfi_def_cfa_offset 24
  76 0004 00AF     		add	r7, sp, #0
  77              	.LCFI4:
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]
 158:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
  80              		.loc 1 158 12
  81 0008 0023     		movs	r3, #0
  82 000a FB60     		str	r3, [r7, #12]
 159:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 160:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 161:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 162:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
  83              		.loc 1 162 16
  84 000c 084B     		ldr	r3, .L3
  85 000e 5B68     		ldr	r3, [r3, #4]
  86              		.loc 1 162 10
  87 0010 23F4C073 		bic	r3, r3, #384
  88 0014 FB60     		str	r3, [r7, #12]
 163:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 164:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
  89              		.loc 1 164 10
  90 0016 FA68     		ldr	r2, [r7, #12]
  91 0018 7B68     		ldr	r3, [r7, #4]
  92 001a 1343     		orrs	r3, r3, r2
  93 001c FB60     		str	r3, [r7, #12]
 165:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 166:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
  94              		.loc 1 166 7
  95 001e 044A     		ldr	r2, .L3
  96              		.loc 1 166 13
  97 0020 FB68     		ldr	r3, [r7, #12]
  98 0022 5360     		str	r3, [r2, #4]
 167:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
  99              		.loc 1 167 1
 100 0024 00BF     		nop
 101 0026 1437     		adds	r7, r7, #20
 102              	.LCFI5:
 103              		.cfi_def_cfa_offset 4
 104 0028 BD46     		mov	sp, r7
 105              	.LCFI6:
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 002a 5DF8047B 		ldr	r7, [sp], #4
 109              	.LCFI7:
 110              		.cfi_restore 7
 111              		.cfi_def_cfa_offset 0
 112 002e 7047     		bx	lr
 113              	.L4:
 114              		.align	2
 115              	.L3:
 116 0030 002C0040 		.word	1073753088
 117              		.cfi_endproc
 118              	.LFE111:
 120              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
 121              		.align	1
 122              		.global	WWDG_SetWindowValue
ARM GAS  /tmp/ccQ8MbHH.s 			page 6


 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	WWDG_SetWindowValue:
 128              	.LFB112:
 168:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 169:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 170:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 171:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 172:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 173:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 174:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 175:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 176:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 129              		.loc 1 176 1
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 16
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 80B4     		push	{r7}
 135              	.LCFI8:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 85B0     		sub	sp, sp, #20
 139              	.LCFI9:
 140              		.cfi_def_cfa_offset 24
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI10:
 143              		.cfi_def_cfa_register 7
 144 0006 0346     		mov	r3, r0
 145 0008 FB71     		strb	r3, [r7, #7]
 177:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 146              		.loc 1 177 17
 147 000a 0023     		movs	r3, #0
 148 000c FB60     		str	r3, [r7, #12]
 178:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 179:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 180:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 181:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 182:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 183:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 149              		.loc 1 183 16
 150 000e 0A4B     		ldr	r3, .L6
 151 0010 5B68     		ldr	r3, [r3, #4]
 152              		.loc 1 183 22
 153 0012 23F07F03 		bic	r3, r3, #127
 154              		.loc 1 183 10
 155 0016 FB60     		str	r3, [r7, #12]
 184:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 185:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 186:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 156              		.loc 1 186 25
 157 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 158 001a 03F07F02 		and	r2, r3, #127
 159              		.loc 1 186 10
 160 001e FB68     		ldr	r3, [r7, #12]
 161 0020 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccQ8MbHH.s 			page 7


 162 0022 FB60     		str	r3, [r7, #12]
 187:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 188:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 189:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 163              		.loc 1 189 7
 164 0024 044A     		ldr	r2, .L6
 165              		.loc 1 189 13
 166 0026 FB68     		ldr	r3, [r7, #12]
 167 0028 5360     		str	r3, [r2, #4]
 190:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 168              		.loc 1 190 1
 169 002a 00BF     		nop
 170 002c 1437     		adds	r7, r7, #20
 171              	.LCFI11:
 172              		.cfi_def_cfa_offset 4
 173 002e BD46     		mov	sp, r7
 174              	.LCFI12:
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0030 5DF8047B 		ldr	r7, [sp], #4
 178              	.LCFI13:
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 0034 7047     		bx	lr
 182              	.L7:
 183 0036 00BF     		.align	2
 184              	.L6:
 185 0038 002C0040 		.word	1073753088
 186              		.cfi_endproc
 187              	.LFE112:
 189              		.section	.text.WWDG_EnableIT,"ax",%progbits
 190              		.align	1
 191              		.global	WWDG_EnableIT
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	WWDG_EnableIT:
 197              	.LFB113:
 191:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 192:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 193:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 194:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 195:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 196:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 197:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 198:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 199:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 198              		.loc 1 199 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI14:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccQ8MbHH.s 			page 8


 208              	.LCFI15:
 209              		.cfi_def_cfa_register 7
 200:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 210              		.loc 1 200 3
 211 0004 034B     		ldr	r3, .L9
 212              		.loc 1 200 33
 213 0006 0122     		movs	r2, #1
 214 0008 1A60     		str	r2, [r3]
 201:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 215              		.loc 1 201 1
 216 000a 00BF     		nop
 217 000c BD46     		mov	sp, r7
 218              	.LCFI16:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 000e 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI17:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 0012 7047     		bx	lr
 226              	.L10:
 227              		.align	2
 228              	.L9:
 229 0014 A4800542 		.word	1107656868
 230              		.cfi_endproc
 231              	.LFE113:
 233              		.section	.text.WWDG_SetCounter,"ax",%progbits
 234              		.align	1
 235              		.global	WWDG_SetCounter
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	WWDG_SetCounter:
 241              	.LFB114:
 202:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 203:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 204:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 205:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 206:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 207:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 208:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 209:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 210:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 211:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 242              		.loc 1 211 1
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247 0000 80B4     		push	{r7}
 248              	.LCFI18:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 7, -4
 251 0002 83B0     		sub	sp, sp, #12
 252              	.LCFI19:
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccQ8MbHH.s 			page 9


 255              	.LCFI20:
 256              		.cfi_def_cfa_register 7
 257 0006 0346     		mov	r3, r0
 258 0008 FB71     		strb	r3, [r7, #7]
 212:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 213:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 214:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 215:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 216:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 259              		.loc 1 216 22
 260 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 261              		.loc 1 216 7
 262 000c 044A     		ldr	r2, .L12
 263              		.loc 1 216 22
 264 000e 03F07F03 		and	r3, r3, #127
 265              		.loc 1 216 12
 266 0012 1360     		str	r3, [r2]
 217:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 267              		.loc 1 217 1
 268 0014 00BF     		nop
 269 0016 0C37     		adds	r7, r7, #12
 270              	.LCFI21:
 271              		.cfi_def_cfa_offset 4
 272 0018 BD46     		mov	sp, r7
 273              	.LCFI22:
 274              		.cfi_def_cfa_register 13
 275              		@ sp needed
 276 001a 5DF8047B 		ldr	r7, [sp], #4
 277              	.LCFI23:
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 001e 7047     		bx	lr
 281              	.L13:
 282              		.align	2
 283              	.L12:
 284 0020 002C0040 		.word	1073753088
 285              		.cfi_endproc
 286              	.LFE114:
 288              		.section	.text.WWDG_Enable,"ax",%progbits
 289              		.align	1
 290              		.global	WWDG_Enable
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	WWDG_Enable:
 296              	.LFB115:
 218:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 219:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 220:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 221:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 222:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 223:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 224:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 225:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 226:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 227:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                        WWDG activation function
 228:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
ARM GAS  /tmp/ccQ8MbHH.s 			page 10


 229:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 230:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 231:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 232:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 233:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 234:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 235:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 236:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 237:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 238:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 239:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 240:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 241:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 242:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 297              		.loc 1 242 1
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              	.LCFI24:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 0002 83B0     		sub	sp, sp, #12
 307              	.LCFI25:
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              	.LCFI26:
 311              		.cfi_def_cfa_register 7
 312 0006 0346     		mov	r3, r0
 313 0008 FB71     		strb	r3, [r7, #7]
 243:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 244:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 245:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 314              		.loc 1 245 27
 315 000a FB79     		ldrb	r3, [r7, #7]
 316 000c 63F07F03 		orn	r3, r3, #127
 317 0010 DAB2     		uxtb	r2, r3
 318              		.loc 1 245 7
 319 0012 044B     		ldr	r3, .L15
 320              		.loc 1 245 12
 321 0014 1A60     		str	r2, [r3]
 246:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 322              		.loc 1 246 1
 323 0016 00BF     		nop
 324 0018 0C37     		adds	r7, r7, #12
 325              	.LCFI27:
 326              		.cfi_def_cfa_offset 4
 327 001a BD46     		mov	sp, r7
 328              	.LCFI28:
 329              		.cfi_def_cfa_register 13
 330              		@ sp needed
 331 001c 5DF8047B 		ldr	r7, [sp], #4
 332              	.LCFI29:
 333              		.cfi_restore 7
 334              		.cfi_def_cfa_offset 0
 335 0020 7047     		bx	lr
ARM GAS  /tmp/ccQ8MbHH.s 			page 11


 336              	.L16:
 337 0022 00BF     		.align	2
 338              	.L15:
 339 0024 002C0040 		.word	1073753088
 340              		.cfi_endproc
 341              	.LFE115:
 343              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 344              		.align	1
 345              		.global	WWDG_GetFlagStatus
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	WWDG_GetFlagStatus:
 351              	.LFB116:
 247:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 248:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 249:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 250:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 251:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 252:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 253:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 254:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 255:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 256:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                  Interrupts and flags management functions
 257:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 258:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 259:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 260:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 261:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 262:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 263:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 264:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 265:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 266:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 267:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 268:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 269:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 352              		.loc 1 269 1
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              	.LCFI30:
 359              		.cfi_def_cfa_offset 4
 360              		.cfi_offset 7, -4
 361 0002 83B0     		sub	sp, sp, #12
 362              	.LCFI31:
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              	.LCFI32:
 366              		.cfi_def_cfa_register 7
 270:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 367              		.loc 1 270 14
 368 0006 0023     		movs	r3, #0
 369 0008 FB71     		strb	r3, [r7, #7]
 271:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     
ARM GAS  /tmp/ccQ8MbHH.s 			page 12


 272:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 370              		.loc 1 272 12
 371 000a 084B     		ldr	r3, .L21
 372 000c 9B68     		ldr	r3, [r3, #8]
 373              		.loc 1 272 6
 374 000e 002B     		cmp	r3, #0
 375 0010 02D0     		beq	.L18
 273:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 274:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 376              		.loc 1 274 15
 377 0012 0123     		movs	r3, #1
 378 0014 FB71     		strb	r3, [r7, #7]
 379 0016 01E0     		b	.L19
 380              	.L18:
 275:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 276:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   else
 277:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 278:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 381              		.loc 1 278 15
 382 0018 0023     		movs	r3, #0
 383 001a FB71     		strb	r3, [r7, #7]
 384              	.L19:
 279:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 280:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   return bitstatus;
 385              		.loc 1 280 10
 386 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 281:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 387              		.loc 1 281 1
 388 001e 1846     		mov	r0, r3
 389 0020 0C37     		adds	r7, r7, #12
 390              	.LCFI33:
 391              		.cfi_def_cfa_offset 4
 392 0022 BD46     		mov	sp, r7
 393              	.LCFI34:
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 0024 5DF8047B 		ldr	r7, [sp], #4
 397              	.LCFI35:
 398              		.cfi_restore 7
 399              		.cfi_def_cfa_offset 0
 400 0028 7047     		bx	lr
 401              	.L22:
 402 002a 00BF     		.align	2
 403              	.L21:
 404 002c 002C0040 		.word	1073753088
 405              		.cfi_endproc
 406              	.LFE116:
 408              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 409              		.align	1
 410              		.global	WWDG_ClearFlag
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 415              	WWDG_ClearFlag:
 416              	.LFB117:
 282:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 283:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
ARM GAS  /tmp/ccQ8MbHH.s 			page 13


 284:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 285:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 286:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 287:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 288:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 289:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 417              		.loc 1 289 1
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              	.LCFI36:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              	.LCFI37:
 428              		.cfi_def_cfa_register 7
 290:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 429              		.loc 1 290 7
 430 0004 034B     		ldr	r3, .L24
 431              		.loc 1 290 12
 432 0006 0022     		movs	r2, #0
 433 0008 9A60     		str	r2, [r3, #8]
 291:../Shared/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 434              		.loc 1 291 1
 435 000a 00BF     		nop
 436 000c BD46     		mov	sp, r7
 437              	.LCFI38:
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 000e 5DF8047B 		ldr	r7, [sp], #4
 441              	.LCFI39:
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
 444 0012 7047     		bx	lr
 445              	.L25:
 446              		.align	2
 447              	.L24:
 448 0014 002C0040 		.word	1073753088
 449              		.cfi_endproc
 450              	.LFE117:
 452              		.text
 453              	.Letext0:
 454              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 455              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 456              		.file 4 "../Shared/Libraries/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 457              		.file 5 "../Shared/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
ARM GAS  /tmp/ccQ8MbHH.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
     /tmp/ccQ8MbHH.s:21     .text.WWDG_DeInit:00000000 $t
     /tmp/ccQ8MbHH.s:27     .text.WWDG_DeInit:00000000 WWDG_DeInit
     /tmp/ccQ8MbHH.s:56     .text.WWDG_SetPrescaler:00000000 $t
     /tmp/ccQ8MbHH.s:62     .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
     /tmp/ccQ8MbHH.s:116    .text.WWDG_SetPrescaler:00000030 $d
     /tmp/ccQ8MbHH.s:121    .text.WWDG_SetWindowValue:00000000 $t
     /tmp/ccQ8MbHH.s:127    .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
     /tmp/ccQ8MbHH.s:185    .text.WWDG_SetWindowValue:00000038 $d
     /tmp/ccQ8MbHH.s:190    .text.WWDG_EnableIT:00000000 $t
     /tmp/ccQ8MbHH.s:196    .text.WWDG_EnableIT:00000000 WWDG_EnableIT
     /tmp/ccQ8MbHH.s:229    .text.WWDG_EnableIT:00000014 $d
     /tmp/ccQ8MbHH.s:234    .text.WWDG_SetCounter:00000000 $t
     /tmp/ccQ8MbHH.s:240    .text.WWDG_SetCounter:00000000 WWDG_SetCounter
     /tmp/ccQ8MbHH.s:284    .text.WWDG_SetCounter:00000020 $d
     /tmp/ccQ8MbHH.s:289    .text.WWDG_Enable:00000000 $t
     /tmp/ccQ8MbHH.s:295    .text.WWDG_Enable:00000000 WWDG_Enable
     /tmp/ccQ8MbHH.s:339    .text.WWDG_Enable:00000024 $d
     /tmp/ccQ8MbHH.s:344    .text.WWDG_GetFlagStatus:00000000 $t
     /tmp/ccQ8MbHH.s:350    .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
     /tmp/ccQ8MbHH.s:404    .text.WWDG_GetFlagStatus:0000002c $d
     /tmp/ccQ8MbHH.s:409    .text.WWDG_ClearFlag:00000000 $t
     /tmp/ccQ8MbHH.s:415    .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
     /tmp/ccQ8MbHH.s:448    .text.WWDG_ClearFlag:00000014 $d
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4.stm32f4xx.h.54.f84a67a8e71ba9719846fdff1868826c
                           .group:00000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.features.h.33.2eefb68b261e70563a8ac654e712169f
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:00000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:00000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:00000000 wm4.stm32f4xx.h.289.fa68dcae75666a037ce29b5a1b57e3b3
                           .group:00000000 wm4.stm32f4xx_conf.h.3.bc52e76ab6b5c9037500dbf5bb8f9be4
                           .group:00000000 wm4.misc.h.86.a3996e7f17199502fad3c7f62e5cdb3f
                           .group:00000000 wm4.stm32f4xx_adc.h.31.d96d805acd0f0c0392ec4633757dead3
                           .group:00000000 wm4.stm32f4xx_can.h.31.3bb56c6436c7a6e6af1611046e81f48c
                           .group:00000000 wm4.stm32f4xx_cryp.h.31.94bbbb19b99df10306f31e78c333a77b
                           .group:00000000 wm4.stm32f4xx_dac.h.31.b8d45e7eaf71ee4bf01c1317dbc06f77
                           .group:00000000 wm4.stm32f4xx_dbgmcu.h.30.70a81ec54c2707baa9fca77391eeeaaa
                           .group:00000000 wm4.stm32f4xx_dcmi.h.30.9d0942d58c357d2eed15e044bf9b4a77
                           .group:00000000 wm4.stm32f4xx_dma.h.31.815bb924b30b1c776b3cd51113fdfe60
                           .group:00000000 wm4.stm32f4xx_exti.h.31.86bd18e979f97217bb1d3b80fde0231e
                           .group:00000000 wm4.stm32f4xx_flash.h.31.74f2ed42d890f144ca7eb5ae8172f0d0
                           .group:00000000 wm4.stm32f4xx_fsmc.h.31.ff58629e0c603fb2f9b3f00c0657fdfa
                           .group:00000000 wm4.stm32f4xx_gpio.h.31.d9aeae10cfa353d85d475c0d4900c452
                           .group:00000000 wm4.stm32f4xx_hash.h.31.5c109425d30f0b9cc0a26ad38182d91f
                           .group:00000000 wm4.stm32f4xx_i2c.h.31.edf5baa611075c49ae13f56be9040be3
                           .group:00000000 wm4.stm32f4xx_iwdg.h.31.30e376e6d8d424aab7fddd66cf691c7b
                           .group:00000000 wm4.stm32f4xx_pwr.h.31.bb774fc1b632cb8d2ecaec8c6524d2c0
                           .group:00000000 wm4.stm32f4xx_rcc.h.30.820e94551583d2b835c8cf3ad722e16c
                           .group:00000000 wm4.stm32f4xx_rng.h.31.1ec493d56b7a8e5a71238519cae6dea7
ARM GAS  /tmp/ccQ8MbHH.s 			page 15


                           .group:00000000 wm4.stm32f4xx_rtc.h.31.bddeb98c63c8fa06fac80b5dd8296471
                           .group:00000000 wm4.stm32f4xx_sdio.h.31.8c6dff42ffa718b444c3420717601ff2
                           .group:00000000 wm4.stm32f4xx_spi.h.31.fb1b2c8214b87a47d4457633b7c31c3c
                           .group:00000000 wm4.stm32f4xx_syscfg.h.31.5a680f88d55b7816ae613c20f199cbd9
                           .group:00000000 wm4.stm32f4xx_tim.h.31.b1d608fbde729347e4ccf70799e654d2
                           .group:00000000 wm4.stm32f4xx_usart.h.31.f8d29b14aa4d39de5495adcc92749d3c
                           .group:00000000 wm4.stm32f4xx.h.6975.cdbdae9d5de06f1ba6b770f59cbe4d6c
                           .group:00000000 wm4.stm32f4xx_wwdg.h.59.ac1b89570a3555c52815288d25877097

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
