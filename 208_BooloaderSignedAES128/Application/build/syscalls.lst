ARM GAS  /tmp/cc6JGwBn.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/src/syscalls.c"
  20              		.global	__env
  21              		.section	.bss.__env,"aw",%nobits
  22              		.align	2
  25              	__env:
  26 0000 00000000 		.space	4
  27              		.global	environ
  28              		.section	.data.environ,"aw"
  29              		.align	2
  32              	environ:
  33 0000 00000000 		.word	__env
  34              		.section	.text.initialise_monitor_handles,"ax",%progbits
  35              		.align	1
  36              		.global	initialise_monitor_handles
  37              		.syntax unified
  38              		.thumb
  39              		.thumb_func
  41              	initialise_monitor_handles:
  42              	.LFB25:
   1:Core/src/syscalls.c **** 
   2:Core/src/syscalls.c **** /**
   3:Core/src/syscalls.c **** *****************************************************************************
   4:Core/src/syscalls.c **** **
   5:Core/src/syscalls.c **** **  File        : syscalls.c
   6:Core/src/syscalls.c **** **
   7:Core/src/syscalls.c **** **  Author	    : Auto-generated by STM32CubeIDE
   8:Core/src/syscalls.c **** **
   9:Core/src/syscalls.c **** **  Abstract    : STM32CubeIDE Minimal System calls file
  10:Core/src/syscalls.c **** **
  11:Core/src/syscalls.c **** ** 		          For more information about which c-functions
  12:Core/src/syscalls.c **** **                need which of these lowlevel functions
  13:Core/src/syscalls.c **** **                please consult the Newlib libc-manual
  14:Core/src/syscalls.c **** **
  15:Core/src/syscalls.c **** **  Environment : STM32CubeIDE MCU
  16:Core/src/syscalls.c **** **
  17:Core/src/syscalls.c **** **  Distribution: The file is distributed as is, without any warranty
  18:Core/src/syscalls.c **** **                of any kind.
  19:Core/src/syscalls.c **** **
  20:Core/src/syscalls.c **** *****************************************************************************
ARM GAS  /tmp/cc6JGwBn.s 			page 2


  21:Core/src/syscalls.c **** **
  22:Core/src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2018 STMicroelectronics</center></h2>
  23:Core/src/syscalls.c **** **
  24:Core/src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/src/syscalls.c **** **      and/or other materials provided with the distribution.
  31:Core/src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Core/src/syscalls.c **** **      without specific prior written permission.
  34:Core/src/syscalls.c **** **
  35:Core/src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/src/syscalls.c **** **
  46:Core/src/syscalls.c **** **
  47:Core/src/syscalls.c **** *****************************************************************************
  48:Core/src/syscalls.c **** */
  49:Core/src/syscalls.c **** 
  50:Core/src/syscalls.c **** /* Includes */
  51:Core/src/syscalls.c **** #include <sys/stat.h>
  52:Core/src/syscalls.c **** #include <stdlib.h>
  53:Core/src/syscalls.c **** #include <errno.h>
  54:Core/src/syscalls.c **** #include <stdio.h>
  55:Core/src/syscalls.c **** #include <signal.h>
  56:Core/src/syscalls.c **** #include <time.h>
  57:Core/src/syscalls.c **** #include <sys/time.h>
  58:Core/src/syscalls.c **** #include <sys/times.h>
  59:Core/src/syscalls.c **** 
  60:Core/src/syscalls.c **** /* Variables */
  61:Core/src/syscalls.c **** //#undef errno
  62:Core/src/syscalls.c **** extern int errno;
  63:Core/src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Core/src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Core/src/syscalls.c **** 
  66:Core/src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Core/src/syscalls.c **** 
  68:Core/src/syscalls.c **** char *__env[1] = { 0 };
  69:Core/src/syscalls.c **** char **environ = __env;
  70:Core/src/syscalls.c **** 
  71:Core/src/syscalls.c **** 
  72:Core/src/syscalls.c **** 
  73:Core/src/syscalls.c **** /* Functions */
  74:Core/src/syscalls.c **** void initialise_monitor_handles()
  75:Core/src/syscalls.c **** {
  43              		.loc 1 75 1
  44              		.cfi_startproc
ARM GAS  /tmp/cc6JGwBn.s 			page 3


  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47              		@ link register save eliminated.
  48 0000 80B4     		push	{r7}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 4
  51              		.cfi_offset 7, -4
  52 0002 00AF     		add	r7, sp, #0
  53              	.LCFI1:
  54              		.cfi_def_cfa_register 7
  76:Core/src/syscalls.c **** }
  55              		.loc 1 76 1
  56 0004 00BF     		nop
  57 0006 BD46     		mov	sp, r7
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 13
  60              		@ sp needed
  61 0008 5DF8047B 		ldr	r7, [sp], #4
  62              	.LCFI3:
  63              		.cfi_restore 7
  64              		.cfi_def_cfa_offset 0
  65 000c 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE25:
  69              		.section	.text._getpid,"ax",%progbits
  70              		.align	1
  71              		.global	_getpid
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_getpid:
  77              	.LFB26:
  77:Core/src/syscalls.c **** 
  78:Core/src/syscalls.c **** int _getpid(void)
  79:Core/src/syscalls.c **** {
  78              		.loc 1 79 1
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI4:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              	.LCFI5:
  89              		.cfi_def_cfa_register 7
  80:Core/src/syscalls.c **** 	return 1;
  90              		.loc 1 80 9
  91 0004 0123     		movs	r3, #1
  81:Core/src/syscalls.c **** }
  92              		.loc 1 81 1
  93 0006 1846     		mov	r0, r3
  94 0008 BD46     		mov	sp, r7
  95              	.LCFI6:
  96              		.cfi_def_cfa_register 13
  97              		@ sp needed
ARM GAS  /tmp/cc6JGwBn.s 			page 4


  98 000a 5DF8047B 		ldr	r7, [sp], #4
  99              	.LCFI7:
 100              		.cfi_restore 7
 101              		.cfi_def_cfa_offset 0
 102 000e 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE26:
 106              		.section	.text._kill,"ax",%progbits
 107              		.align	1
 108              		.global	_kill
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	_kill:
 114              	.LFB27:
  82:Core/src/syscalls.c **** 
  83:Core/src/syscalls.c **** int _kill(int pid, int sig)
  84:Core/src/syscalls.c **** {
 115              		.loc 1 84 1
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI8:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 82B0     		sub	sp, sp, #8
 125              	.LCFI9:
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI10:
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
 131 0008 3960     		str	r1, [r7]
  85:Core/src/syscalls.c **** 	errno = EINVAL;
 132              		.loc 1 85 2
 133 000a FFF7FEFF 		bl	__errno
 134 000e 0346     		mov	r3, r0
 135              		.loc 1 85 8 discriminator 1
 136 0010 1622     		movs	r2, #22
 137 0012 1A60     		str	r2, [r3]
  86:Core/src/syscalls.c **** 	return -1;
 138              		.loc 1 86 9
 139 0014 4FF0FF33 		mov	r3, #-1
  87:Core/src/syscalls.c **** }
 140              		.loc 1 87 1
 141 0018 1846     		mov	r0, r3
 142 001a 0837     		adds	r7, r7, #8
 143              	.LCFI11:
 144              		.cfi_def_cfa_offset 8
 145 001c BD46     		mov	sp, r7
 146              	.LCFI12:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 001e 80BD     		pop	{r7, pc}
 150              		.cfi_endproc
ARM GAS  /tmp/cc6JGwBn.s 			page 5


 151              	.LFE27:
 153              		.section	.text._exit,"ax",%progbits
 154              		.align	1
 155              		.global	_exit
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	_exit:
 161              	.LFB28:
  88:Core/src/syscalls.c **** 
  89:Core/src/syscalls.c **** void _exit (int status)
  90:Core/src/syscalls.c **** {
 162              		.loc 1 90 1
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI13:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 82B0     		sub	sp, sp, #8
 172              	.LCFI14:
 173              		.cfi_def_cfa_offset 16
 174 0004 00AF     		add	r7, sp, #0
 175              	.LCFI15:
 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
  91:Core/src/syscalls.c **** 	_kill(status, -1);
 178              		.loc 1 91 2
 179 0008 4FF0FF31 		mov	r1, #-1
 180 000c 7868     		ldr	r0, [r7, #4]
 181 000e FFF7FEFF 		bl	_kill
 182              	.L7:
  92:Core/src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 183              		.loc 1 92 8
 184 0012 00BF     		nop
 185 0014 FDE7     		b	.L7
 186              		.cfi_endproc
 187              	.LFE28:
 189              		.section	.text._read,"ax",%progbits
 190              		.align	1
 191              		.weak	_read
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	_read:
 197              	.LFB29:
  93:Core/src/syscalls.c **** }
  94:Core/src/syscalls.c **** 
  95:Core/src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  96:Core/src/syscalls.c **** {
 198              		.loc 1 96 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 24
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cc6JGwBn.s 			page 6


 203              	.LCFI16:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 86B0     		sub	sp, sp, #24
 208              	.LCFI17:
 209              		.cfi_def_cfa_offset 32
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI18:
 212              		.cfi_def_cfa_register 7
 213 0006 F860     		str	r0, [r7, #12]
 214 0008 B960     		str	r1, [r7, #8]
 215 000a 7A60     		str	r2, [r7, #4]
  97:Core/src/syscalls.c **** 	int DataIdx;
  98:Core/src/syscalls.c **** 
  99:Core/src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 216              		.loc 1 99 15
 217 000c 0023     		movs	r3, #0
 218 000e 7B61     		str	r3, [r7, #20]
 219              		.loc 1 99 2
 220 0010 0AE0     		b	.L9
 221              	.L10:
 100:Core/src/syscalls.c **** 	{
 101:Core/src/syscalls.c **** 		*ptr++ = __io_getchar();
 222              		.loc 1 101 12
 223 0012 FFF7FEFF 		bl	__io_getchar
 224 0016 0146     		mov	r1, r0
 225              		.loc 1 101 7 discriminator 1
 226 0018 BB68     		ldr	r3, [r7, #8]
 227 001a 5A1C     		adds	r2, r3, #1
 228 001c BA60     		str	r2, [r7, #8]
 229              		.loc 1 101 10 discriminator 1
 230 001e CAB2     		uxtb	r2, r1
 231 0020 1A70     		strb	r2, [r3]
  99:Core/src/syscalls.c **** 	{
 232              		.loc 1 99 42 discriminator 3
 233 0022 7B69     		ldr	r3, [r7, #20]
 234 0024 0133     		adds	r3, r3, #1
 235 0026 7B61     		str	r3, [r7, #20]
 236              	.L9:
  99:Core/src/syscalls.c **** 	{
 237              		.loc 1 99 28 discriminator 1
 238 0028 7A69     		ldr	r2, [r7, #20]
 239 002a 7B68     		ldr	r3, [r7, #4]
 240 002c 9A42     		cmp	r2, r3
 241 002e F0DB     		blt	.L10
 102:Core/src/syscalls.c **** 	}
 103:Core/src/syscalls.c **** 
 104:Core/src/syscalls.c **** return len;
 242              		.loc 1 104 8
 243 0030 7B68     		ldr	r3, [r7, #4]
 105:Core/src/syscalls.c **** }
 244              		.loc 1 105 1
 245 0032 1846     		mov	r0, r3
 246 0034 1837     		adds	r7, r7, #24
 247              	.LCFI19:
 248              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc6JGwBn.s 			page 7


 249 0036 BD46     		mov	sp, r7
 250              	.LCFI20:
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0038 80BD     		pop	{r7, pc}
 254              		.cfi_endproc
 255              	.LFE29:
 257              		.section	.text._write,"ax",%progbits
 258              		.align	1
 259              		.weak	_write
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	_write:
 265              	.LFB30:
 106:Core/src/syscalls.c **** 
 107:Core/src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 108:Core/src/syscalls.c **** {
 266              		.loc 1 108 1
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 24
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              	.LCFI21:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 86B0     		sub	sp, sp, #24
 276              	.LCFI22:
 277              		.cfi_def_cfa_offset 32
 278 0004 00AF     		add	r7, sp, #0
 279              	.LCFI23:
 280              		.cfi_def_cfa_register 7
 281 0006 F860     		str	r0, [r7, #12]
 282 0008 B960     		str	r1, [r7, #8]
 283 000a 7A60     		str	r2, [r7, #4]
 109:Core/src/syscalls.c **** 	int DataIdx;
 110:Core/src/syscalls.c **** 
 111:Core/src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 284              		.loc 1 111 15
 285 000c 0023     		movs	r3, #0
 286 000e 7B61     		str	r3, [r7, #20]
 287              		.loc 1 111 2
 288 0010 09E0     		b	.L13
 289              	.L14:
 112:Core/src/syscalls.c **** 	{
 113:Core/src/syscalls.c **** 		__io_putchar(*ptr++);
 290              		.loc 1 113 20
 291 0012 BB68     		ldr	r3, [r7, #8]
 292 0014 5A1C     		adds	r2, r3, #1
 293 0016 BA60     		str	r2, [r7, #8]
 294              		.loc 1 113 16
 295 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296              		.loc 1 113 3
 297 001a 1846     		mov	r0, r3
 298 001c FFF7FEFF 		bl	__io_putchar
 111:Core/src/syscalls.c **** 	{
ARM GAS  /tmp/cc6JGwBn.s 			page 8


 299              		.loc 1 111 42 discriminator 3
 300 0020 7B69     		ldr	r3, [r7, #20]
 301 0022 0133     		adds	r3, r3, #1
 302 0024 7B61     		str	r3, [r7, #20]
 303              	.L13:
 111:Core/src/syscalls.c **** 	{
 304              		.loc 1 111 28 discriminator 1
 305 0026 7A69     		ldr	r2, [r7, #20]
 306 0028 7B68     		ldr	r3, [r7, #4]
 307 002a 9A42     		cmp	r2, r3
 308 002c F1DB     		blt	.L14
 114:Core/src/syscalls.c **** 		//ITM_SendChar(*ptr++);
 115:Core/src/syscalls.c **** 	}
 116:Core/src/syscalls.c **** 	return len;
 309              		.loc 1 116 9
 310 002e 7B68     		ldr	r3, [r7, #4]
 117:Core/src/syscalls.c **** }
 311              		.loc 1 117 1
 312 0030 1846     		mov	r0, r3
 313 0032 1837     		adds	r7, r7, #24
 314              	.LCFI24:
 315              		.cfi_def_cfa_offset 8
 316 0034 BD46     		mov	sp, r7
 317              	.LCFI25:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0036 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE30:
 324              		.section	.text._close,"ax",%progbits
 325              		.align	1
 326              		.global	_close
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	_close:
 332              	.LFB31:
 118:Core/src/syscalls.c **** 
 119:Core/src/syscalls.c **** int _close(int file)
 120:Core/src/syscalls.c **** {
 333              		.loc 1 120 1
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 8
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI26:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 83B0     		sub	sp, sp, #12
 343              	.LCFI27:
 344              		.cfi_def_cfa_offset 16
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI28:
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 121:Core/src/syscalls.c **** 	return -1;
ARM GAS  /tmp/cc6JGwBn.s 			page 9


 349              		.loc 1 121 9
 350 0008 4FF0FF33 		mov	r3, #-1
 122:Core/src/syscalls.c **** }
 351              		.loc 1 122 1
 352 000c 1846     		mov	r0, r3
 353 000e 0C37     		adds	r7, r7, #12
 354              	.LCFI29:
 355              		.cfi_def_cfa_offset 4
 356 0010 BD46     		mov	sp, r7
 357              	.LCFI30:
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 0012 5DF8047B 		ldr	r7, [sp], #4
 361              	.LCFI31:
 362              		.cfi_restore 7
 363              		.cfi_def_cfa_offset 0
 364 0016 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE31:
 368              		.section	.text._fstat,"ax",%progbits
 369              		.align	1
 370              		.global	_fstat
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	_fstat:
 376              	.LFB32:
 123:Core/src/syscalls.c **** 
 124:Core/src/syscalls.c **** 
 125:Core/src/syscalls.c **** int _fstat(int file, struct stat *st)
 126:Core/src/syscalls.c **** {
 377              		.loc 1 126 1
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              	.LCFI32:
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 7, -4
 386 0002 83B0     		sub	sp, sp, #12
 387              	.LCFI33:
 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI34:
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 393 0008 3960     		str	r1, [r7]
 127:Core/src/syscalls.c **** 	st->st_mode = S_IFCHR;
 394              		.loc 1 127 14
 395 000a 3B68     		ldr	r3, [r7]
 396 000c 4FF40052 		mov	r2, #8192
 397 0010 5A60     		str	r2, [r3, #4]
 128:Core/src/syscalls.c **** 	return 0;
 398              		.loc 1 128 9
 399 0012 0023     		movs	r3, #0
 129:Core/src/syscalls.c **** }
ARM GAS  /tmp/cc6JGwBn.s 			page 10


 400              		.loc 1 129 1
 401 0014 1846     		mov	r0, r3
 402 0016 0C37     		adds	r7, r7, #12
 403              	.LCFI35:
 404              		.cfi_def_cfa_offset 4
 405 0018 BD46     		mov	sp, r7
 406              	.LCFI36:
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 001a 5DF8047B 		ldr	r7, [sp], #4
 410              	.LCFI37:
 411              		.cfi_restore 7
 412              		.cfi_def_cfa_offset 0
 413 001e 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE32:
 417              		.section	.text._isatty,"ax",%progbits
 418              		.align	1
 419              		.global	_isatty
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	_isatty:
 425              	.LFB33:
 130:Core/src/syscalls.c **** 
 131:Core/src/syscalls.c **** int _isatty(int file)
 132:Core/src/syscalls.c **** {
 426              		.loc 1 132 1
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431 0000 80B4     		push	{r7}
 432              	.LCFI38:
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 7, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              	.LCFI39:
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI40:
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 133:Core/src/syscalls.c **** 	return 1;
 442              		.loc 1 133 9
 443 0008 0123     		movs	r3, #1
 134:Core/src/syscalls.c **** }
 444              		.loc 1 134 1
 445 000a 1846     		mov	r0, r3
 446 000c 0C37     		adds	r7, r7, #12
 447              	.LCFI41:
 448              		.cfi_def_cfa_offset 4
 449 000e BD46     		mov	sp, r7
 450              	.LCFI42:
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 0010 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cc6JGwBn.s 			page 11


 454              	.LCFI43:
 455              		.cfi_restore 7
 456              		.cfi_def_cfa_offset 0
 457 0014 7047     		bx	lr
 458              		.cfi_endproc
 459              	.LFE33:
 461              		.section	.text._lseek,"ax",%progbits
 462              		.align	1
 463              		.global	_lseek
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	_lseek:
 469              	.LFB34:
 135:Core/src/syscalls.c **** 
 136:Core/src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 137:Core/src/syscalls.c **** {
 470              		.loc 1 137 1
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 16
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              	.LCFI44:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 85B0     		sub	sp, sp, #20
 480              	.LCFI45:
 481              		.cfi_def_cfa_offset 24
 482 0004 00AF     		add	r7, sp, #0
 483              	.LCFI46:
 484              		.cfi_def_cfa_register 7
 485 0006 F860     		str	r0, [r7, #12]
 486 0008 B960     		str	r1, [r7, #8]
 487 000a 7A60     		str	r2, [r7, #4]
 138:Core/src/syscalls.c **** 	return 0;
 488              		.loc 1 138 9
 489 000c 0023     		movs	r3, #0
 139:Core/src/syscalls.c **** }
 490              		.loc 1 139 1
 491 000e 1846     		mov	r0, r3
 492 0010 1437     		adds	r7, r7, #20
 493              	.LCFI47:
 494              		.cfi_def_cfa_offset 4
 495 0012 BD46     		mov	sp, r7
 496              	.LCFI48:
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 0014 5DF8047B 		ldr	r7, [sp], #4
 500              	.LCFI49:
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0018 7047     		bx	lr
 504              		.cfi_endproc
 505              	.LFE34:
 507              		.section	.text._open,"ax",%progbits
 508              		.align	1
ARM GAS  /tmp/cc6JGwBn.s 			page 12


 509              		.global	_open
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	_open:
 515              	.LFB35:
 140:Core/src/syscalls.c **** 
 141:Core/src/syscalls.c **** int _open(char *path, int flags, ...)
 142:Core/src/syscalls.c **** {
 516              		.loc 1 142 1
 517              		.cfi_startproc
 518              		@ args = 4, pretend = 12, frame = 8
 519              		@ frame_needed = 1, uses_anonymous_args = 1
 520              		@ link register save eliminated.
 521 0000 0EB4     		push	{r1, r2, r3}
 522              	.LCFI50:
 523              		.cfi_def_cfa_offset 12
 524              		.cfi_offset 1, -12
 525              		.cfi_offset 2, -8
 526              		.cfi_offset 3, -4
 527 0002 80B4     		push	{r7}
 528              	.LCFI51:
 529              		.cfi_def_cfa_offset 16
 530              		.cfi_offset 7, -16
 531 0004 82B0     		sub	sp, sp, #8
 532              	.LCFI52:
 533              		.cfi_def_cfa_offset 24
 534 0006 00AF     		add	r7, sp, #0
 535              	.LCFI53:
 536              		.cfi_def_cfa_register 7
 537 0008 7860     		str	r0, [r7, #4]
 143:Core/src/syscalls.c **** 	/* Pretend like we always fail */
 144:Core/src/syscalls.c **** 	return -1;
 538              		.loc 1 144 9
 539 000a 4FF0FF33 		mov	r3, #-1
 145:Core/src/syscalls.c **** }
 540              		.loc 1 145 1
 541 000e 1846     		mov	r0, r3
 542 0010 0837     		adds	r7, r7, #8
 543              	.LCFI54:
 544              		.cfi_def_cfa_offset 16
 545 0012 BD46     		mov	sp, r7
 546              	.LCFI55:
 547              		.cfi_def_cfa_register 13
 548              		@ sp needed
 549 0014 5DF8047B 		ldr	r7, [sp], #4
 550              	.LCFI56:
 551              		.cfi_restore 7
 552              		.cfi_def_cfa_offset 12
 553 0018 03B0     		add	sp, sp, #12
 554              	.LCFI57:
 555              		.cfi_restore 3
 556              		.cfi_restore 2
 557              		.cfi_restore 1
 558              		.cfi_def_cfa_offset 0
 559 001a 7047     		bx	lr
 560              		.cfi_endproc
ARM GAS  /tmp/cc6JGwBn.s 			page 13


 561              	.LFE35:
 563              		.section	.text._wait,"ax",%progbits
 564              		.align	1
 565              		.global	_wait
 566              		.syntax unified
 567              		.thumb
 568              		.thumb_func
 570              	_wait:
 571              	.LFB36:
 146:Core/src/syscalls.c **** 
 147:Core/src/syscalls.c **** int _wait(int *status)
 148:Core/src/syscalls.c **** {
 572              		.loc 1 148 1
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576 0000 80B5     		push	{r7, lr}
 577              	.LCFI58:
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 82B0     		sub	sp, sp, #8
 582              	.LCFI59:
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              	.LCFI60:
 586              		.cfi_def_cfa_register 7
 587 0006 7860     		str	r0, [r7, #4]
 149:Core/src/syscalls.c **** 	errno = ECHILD;
 588              		.loc 1 149 2
 589 0008 FFF7FEFF 		bl	__errno
 590 000c 0346     		mov	r3, r0
 591              		.loc 1 149 8 discriminator 1
 592 000e 0A22     		movs	r2, #10
 593 0010 1A60     		str	r2, [r3]
 150:Core/src/syscalls.c **** 	return -1;
 594              		.loc 1 150 9
 595 0012 4FF0FF33 		mov	r3, #-1
 151:Core/src/syscalls.c **** }
 596              		.loc 1 151 1
 597 0016 1846     		mov	r0, r3
 598 0018 0837     		adds	r7, r7, #8
 599              	.LCFI61:
 600              		.cfi_def_cfa_offset 8
 601 001a BD46     		mov	sp, r7
 602              	.LCFI62:
 603              		.cfi_def_cfa_register 13
 604              		@ sp needed
 605 001c 80BD     		pop	{r7, pc}
 606              		.cfi_endproc
 607              	.LFE36:
 609              		.section	.text._unlink,"ax",%progbits
 610              		.align	1
 611              		.global	_unlink
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
ARM GAS  /tmp/cc6JGwBn.s 			page 14


 616              	_unlink:
 617              	.LFB37:
 152:Core/src/syscalls.c **** 
 153:Core/src/syscalls.c **** int _unlink(char *name)
 154:Core/src/syscalls.c **** {
 618              		.loc 1 154 1
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              	.LCFI63:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 7, -8
 626              		.cfi_offset 14, -4
 627 0002 82B0     		sub	sp, sp, #8
 628              	.LCFI64:
 629              		.cfi_def_cfa_offset 16
 630 0004 00AF     		add	r7, sp, #0
 631              	.LCFI65:
 632              		.cfi_def_cfa_register 7
 633 0006 7860     		str	r0, [r7, #4]
 155:Core/src/syscalls.c **** 	errno = ENOENT;
 634              		.loc 1 155 2
 635 0008 FFF7FEFF 		bl	__errno
 636 000c 0346     		mov	r3, r0
 637              		.loc 1 155 8 discriminator 1
 638 000e 0222     		movs	r2, #2
 639 0010 1A60     		str	r2, [r3]
 156:Core/src/syscalls.c **** 	return -1;
 640              		.loc 1 156 9
 641 0012 4FF0FF33 		mov	r3, #-1
 157:Core/src/syscalls.c **** }
 642              		.loc 1 157 1
 643 0016 1846     		mov	r0, r3
 644 0018 0837     		adds	r7, r7, #8
 645              	.LCFI66:
 646              		.cfi_def_cfa_offset 8
 647 001a BD46     		mov	sp, r7
 648              	.LCFI67:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 001c 80BD     		pop	{r7, pc}
 652              		.cfi_endproc
 653              	.LFE37:
 655              		.section	.text._times,"ax",%progbits
 656              		.align	1
 657              		.global	_times
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	_times:
 663              	.LFB38:
 158:Core/src/syscalls.c **** 
 159:Core/src/syscalls.c **** int _times(struct tms *buf)
 160:Core/src/syscalls.c **** {
 664              		.loc 1 160 1
 665              		.cfi_startproc
ARM GAS  /tmp/cc6JGwBn.s 			page 15


 666              		@ args = 0, pretend = 0, frame = 8
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              	.LCFI68:
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 83B0     		sub	sp, sp, #12
 674              	.LCFI69:
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI70:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 161:Core/src/syscalls.c **** 	return -1;
 680              		.loc 1 161 9
 681 0008 4FF0FF33 		mov	r3, #-1
 162:Core/src/syscalls.c **** }
 682              		.loc 1 162 1
 683 000c 1846     		mov	r0, r3
 684 000e 0C37     		adds	r7, r7, #12
 685              	.LCFI71:
 686              		.cfi_def_cfa_offset 4
 687 0010 BD46     		mov	sp, r7
 688              	.LCFI72:
 689              		.cfi_def_cfa_register 13
 690              		@ sp needed
 691 0012 5DF8047B 		ldr	r7, [sp], #4
 692              	.LCFI73:
 693              		.cfi_restore 7
 694              		.cfi_def_cfa_offset 0
 695 0016 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE38:
 699              		.section	.text._stat,"ax",%progbits
 700              		.align	1
 701              		.global	_stat
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	_stat:
 707              	.LFB39:
 163:Core/src/syscalls.c **** 
 164:Core/src/syscalls.c **** int _stat(char *file, struct stat *st)
 165:Core/src/syscalls.c **** {
 708              		.loc 1 165 1
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 8
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713 0000 80B4     		push	{r7}
 714              	.LCFI74:
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 7, -4
 717 0002 83B0     		sub	sp, sp, #12
 718              	.LCFI75:
 719              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc6JGwBn.s 			page 16


 720 0004 00AF     		add	r7, sp, #0
 721              	.LCFI76:
 722              		.cfi_def_cfa_register 7
 723 0006 7860     		str	r0, [r7, #4]
 724 0008 3960     		str	r1, [r7]
 166:Core/src/syscalls.c **** 	st->st_mode = S_IFCHR;
 725              		.loc 1 166 14
 726 000a 3B68     		ldr	r3, [r7]
 727 000c 4FF40052 		mov	r2, #8192
 728 0010 5A60     		str	r2, [r3, #4]
 167:Core/src/syscalls.c **** 	return 0;
 729              		.loc 1 167 9
 730 0012 0023     		movs	r3, #0
 168:Core/src/syscalls.c **** }
 731              		.loc 1 168 1
 732 0014 1846     		mov	r0, r3
 733 0016 0C37     		adds	r7, r7, #12
 734              	.LCFI77:
 735              		.cfi_def_cfa_offset 4
 736 0018 BD46     		mov	sp, r7
 737              	.LCFI78:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 001a 5DF8047B 		ldr	r7, [sp], #4
 741              	.LCFI79:
 742              		.cfi_restore 7
 743              		.cfi_def_cfa_offset 0
 744 001e 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE39:
 748              		.section	.text._link,"ax",%progbits
 749              		.align	1
 750              		.global	_link
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 755              	_link:
 756              	.LFB40:
 169:Core/src/syscalls.c **** 
 170:Core/src/syscalls.c **** int _link(char *old, char *new)
 171:Core/src/syscalls.c **** {
 757              		.loc 1 171 1
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 8
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761 0000 80B5     		push	{r7, lr}
 762              	.LCFI80:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              	.LCFI81:
 768              		.cfi_def_cfa_offset 16
 769 0004 00AF     		add	r7, sp, #0
 770              	.LCFI82:
 771              		.cfi_def_cfa_register 7
 772 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc6JGwBn.s 			page 17


 773 0008 3960     		str	r1, [r7]
 172:Core/src/syscalls.c **** 	errno = EMLINK;
 774              		.loc 1 172 2
 775 000a FFF7FEFF 		bl	__errno
 776 000e 0346     		mov	r3, r0
 777              		.loc 1 172 8 discriminator 1
 778 0010 1F22     		movs	r2, #31
 779 0012 1A60     		str	r2, [r3]
 173:Core/src/syscalls.c **** 	return -1;
 780              		.loc 1 173 9
 781 0014 4FF0FF33 		mov	r3, #-1
 174:Core/src/syscalls.c **** }
 782              		.loc 1 174 1
 783 0018 1846     		mov	r0, r3
 784 001a 0837     		adds	r7, r7, #8
 785              	.LCFI83:
 786              		.cfi_def_cfa_offset 8
 787 001c BD46     		mov	sp, r7
 788              	.LCFI84:
 789              		.cfi_def_cfa_register 13
 790              		@ sp needed
 791 001e 80BD     		pop	{r7, pc}
 792              		.cfi_endproc
 793              	.LFE40:
 795              		.section	.text._fork,"ax",%progbits
 796              		.align	1
 797              		.global	_fork
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 802              	_fork:
 803              	.LFB41:
 175:Core/src/syscalls.c **** 
 176:Core/src/syscalls.c **** int _fork(void)
 177:Core/src/syscalls.c **** {
 804              		.loc 1 177 1
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808 0000 80B5     		push	{r7, lr}
 809              	.LCFI85:
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 00AF     		add	r7, sp, #0
 814              	.LCFI86:
 815              		.cfi_def_cfa_register 7
 178:Core/src/syscalls.c **** 	errno = EAGAIN;
 816              		.loc 1 178 2
 817 0004 FFF7FEFF 		bl	__errno
 818 0008 0346     		mov	r3, r0
 819              		.loc 1 178 8 discriminator 1
 820 000a 0B22     		movs	r2, #11
 821 000c 1A60     		str	r2, [r3]
 179:Core/src/syscalls.c **** 	return -1;
 822              		.loc 1 179 9
 823 000e 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/cc6JGwBn.s 			page 18


 180:Core/src/syscalls.c **** }
 824              		.loc 1 180 1
 825 0012 1846     		mov	r0, r3
 826 0014 80BD     		pop	{r7, pc}
 827              		.cfi_endproc
 828              	.LFE41:
 830              		.section	.text._execve,"ax",%progbits
 831              		.align	1
 832              		.global	_execve
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	_execve:
 838              	.LFB42:
 181:Core/src/syscalls.c **** 
 182:Core/src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 183:Core/src/syscalls.c **** {
 839              		.loc 1 183 1
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 16
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843 0000 80B5     		push	{r7, lr}
 844              	.LCFI87:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 7, -8
 847              		.cfi_offset 14, -4
 848 0002 84B0     		sub	sp, sp, #16
 849              	.LCFI88:
 850              		.cfi_def_cfa_offset 24
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI89:
 853              		.cfi_def_cfa_register 7
 854 0006 F860     		str	r0, [r7, #12]
 855 0008 B960     		str	r1, [r7, #8]
 856 000a 7A60     		str	r2, [r7, #4]
 184:Core/src/syscalls.c **** 	errno = ENOMEM;
 857              		.loc 1 184 2
 858 000c FFF7FEFF 		bl	__errno
 859 0010 0346     		mov	r3, r0
 860              		.loc 1 184 8 discriminator 1
 861 0012 0C22     		movs	r2, #12
 862 0014 1A60     		str	r2, [r3]
 185:Core/src/syscalls.c **** 	return -1;
 863              		.loc 1 185 9
 864 0016 4FF0FF33 		mov	r3, #-1
 186:Core/src/syscalls.c **** }
 865              		.loc 1 186 1
 866 001a 1846     		mov	r0, r3
 867 001c 1037     		adds	r7, r7, #16
 868              	.LCFI90:
 869              		.cfi_def_cfa_offset 8
 870 001e BD46     		mov	sp, r7
 871              	.LCFI91:
 872              		.cfi_def_cfa_register 13
 873              		@ sp needed
 874 0020 80BD     		pop	{r7, pc}
 875              		.cfi_endproc
ARM GAS  /tmp/cc6JGwBn.s 			page 19


 876              	.LFE42:
 878              		.section	.text._sbrk,"ax",%progbits
 879              		.align	1
 880              		.global	_sbrk
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	_sbrk:
 886              	.LFB43:
 187:Core/src/syscalls.c **** 
 188:Core/src/syscalls.c **** 
 189:Core/src/syscalls.c **** 
 190:Core/src/syscalls.c **** /**
 191:Core/src/syscalls.c ****  _sbrk
 192:Core/src/syscalls.c ****  Increase program data space. Malloc and related functions depend on this
 193:Core/src/syscalls.c **** **/
 194:Core/src/syscalls.c **** caddr_t _sbrk(int incr)
 195:Core/src/syscalls.c **** {
 887              		.loc 1 195 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 16
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891 0000 80B5     		push	{r7, lr}
 892              	.LCFI92:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 7, -8
 895              		.cfi_offset 14, -4
 896 0002 84B0     		sub	sp, sp, #16
 897              	.LCFI93:
 898              		.cfi_def_cfa_offset 24
 899 0004 00AF     		add	r7, sp, #0
 900              	.LCFI94:
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 196:Core/src/syscalls.c **** 	extern char end asm("end");
 197:Core/src/syscalls.c **** 	static char *heap_end;
 198:Core/src/syscalls.c **** 	char *prev_heap_end;
 199:Core/src/syscalls.c **** 
 200:Core/src/syscalls.c **** 	if (heap_end == 0)
 903              		.loc 1 200 15
 904 0008 114B     		ldr	r3, .L44
 905 000a 1B68     		ldr	r3, [r3]
 906              		.loc 1 200 5
 907 000c 002B     		cmp	r3, #0
 908 000e 02D1     		bne	.L41
 201:Core/src/syscalls.c **** 		heap_end = &end;
 909              		.loc 1 201 12
 910 0010 0F4B     		ldr	r3, .L44
 911 0012 104A     		ldr	r2, .L44+4
 912 0014 1A60     		str	r2, [r3]
 913              	.L41:
 202:Core/src/syscalls.c **** 
 203:Core/src/syscalls.c **** 	prev_heap_end = heap_end;
 914              		.loc 1 203 16
 915 0016 0E4B     		ldr	r3, .L44
 916 0018 1B68     		ldr	r3, [r3]
 917 001a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cc6JGwBn.s 			page 20


 204:Core/src/syscalls.c **** 	if (heap_end + incr > stack_ptr)
 918              		.loc 1 204 15
 919 001c 0C4B     		ldr	r3, .L44
 920 001e 1A68     		ldr	r2, [r3]
 921 0020 7B68     		ldr	r3, [r7, #4]
 922 0022 1344     		add	r3, r3, r2
 923              		.loc 1 204 22
 924 0024 6A46     		mov	r2, sp
 925              		.loc 1 204 5
 926 0026 9342     		cmp	r3, r2
 927 0028 07D9     		bls	.L42
 205:Core/src/syscalls.c **** 	{
 206:Core/src/syscalls.c **** 		errno = ENOMEM;
 928              		.loc 1 206 3
 929 002a FFF7FEFF 		bl	__errno
 930 002e 0346     		mov	r3, r0
 931              		.loc 1 206 9 discriminator 1
 932 0030 0C22     		movs	r2, #12
 933 0032 1A60     		str	r2, [r3]
 207:Core/src/syscalls.c **** 		return (caddr_t) -1;
 934              		.loc 1 207 10
 935 0034 4FF0FF33 		mov	r3, #-1
 936 0038 06E0     		b	.L43
 937              	.L42:
 208:Core/src/syscalls.c **** 	}
 209:Core/src/syscalls.c **** 
 210:Core/src/syscalls.c **** 	heap_end += incr;
 938              		.loc 1 210 11
 939 003a 054B     		ldr	r3, .L44
 940 003c 1A68     		ldr	r2, [r3]
 941 003e 7B68     		ldr	r3, [r7, #4]
 942 0040 1344     		add	r3, r3, r2
 943 0042 034A     		ldr	r2, .L44
 944 0044 1360     		str	r3, [r2]
 211:Core/src/syscalls.c **** 
 212:Core/src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 945              		.loc 1 212 9
 946 0046 FB68     		ldr	r3, [r7, #12]
 947              	.L43:
 213:Core/src/syscalls.c **** }
 948              		.loc 1 213 1
 949 0048 1846     		mov	r0, r3
 950 004a 1037     		adds	r7, r7, #16
 951              	.LCFI95:
 952              		.cfi_def_cfa_offset 8
 953 004c BD46     		mov	sp, r7
 954              	.LCFI96:
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 004e 80BD     		pop	{r7, pc}
 958              	.L45:
 959              		.align	2
 960              	.L44:
 961 0050 00000000 		.word	heap_end.0
 962 0054 00000000 		.word	end
 963              		.cfi_endproc
 964              	.LFE43:
ARM GAS  /tmp/cc6JGwBn.s 			page 21


 966              		.section	.bss.heap_end.0,"aw",%nobits
 967              		.align	2
 970              	heap_end.0:
 971 0000 00000000 		.space	4
 972              		.weak	__io_putchar
 973              		.weak	__io_getchar
 974              		.text
 975              	.Letext0:
 976              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 977              		.file 3 "/usr/arm-none-eabi/include/sys/_types.h"
 978              		.file 4 "/usr/arm-none-eabi/include/sys/_timeval.h"
 979              		.file 5 "/usr/arm-none-eabi/include/sys/_timespec.h"
 980              		.file 6 "/usr/arm-none-eabi/include/sys/types.h"
 981              		.file 7 "/usr/arm-none-eabi/include/sys/stat.h"
 982              		.file 8 "/usr/arm-none-eabi/include/sys/times.h"
 983              		.file 9 "/usr/arm-none-eabi/include/sys/errno.h"
ARM GAS  /tmp/cc6JGwBn.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
     /tmp/cc6JGwBn.s:25     .bss.__env:00000000 __env
     /tmp/cc6JGwBn.s:22     .bss.__env:00000000 $d
     /tmp/cc6JGwBn.s:32     .data.environ:00000000 environ
     /tmp/cc6JGwBn.s:29     .data.environ:00000000 $d
     /tmp/cc6JGwBn.s:35     .text.initialise_monitor_handles:00000000 $t
     /tmp/cc6JGwBn.s:41     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
     /tmp/cc6JGwBn.s:70     .text._getpid:00000000 $t
     /tmp/cc6JGwBn.s:76     .text._getpid:00000000 _getpid
     /tmp/cc6JGwBn.s:107    .text._kill:00000000 $t
     /tmp/cc6JGwBn.s:113    .text._kill:00000000 _kill
     /tmp/cc6JGwBn.s:154    .text._exit:00000000 $t
     /tmp/cc6JGwBn.s:160    .text._exit:00000000 _exit
     /tmp/cc6JGwBn.s:190    .text._read:00000000 $t
     /tmp/cc6JGwBn.s:196    .text._read:00000000 _read
     /tmp/cc6JGwBn.s:258    .text._write:00000000 $t
     /tmp/cc6JGwBn.s:264    .text._write:00000000 _write
     /tmp/cc6JGwBn.s:325    .text._close:00000000 $t
     /tmp/cc6JGwBn.s:331    .text._close:00000000 _close
     /tmp/cc6JGwBn.s:369    .text._fstat:00000000 $t
     /tmp/cc6JGwBn.s:375    .text._fstat:00000000 _fstat
     /tmp/cc6JGwBn.s:418    .text._isatty:00000000 $t
     /tmp/cc6JGwBn.s:424    .text._isatty:00000000 _isatty
     /tmp/cc6JGwBn.s:462    .text._lseek:00000000 $t
     /tmp/cc6JGwBn.s:468    .text._lseek:00000000 _lseek
     /tmp/cc6JGwBn.s:508    .text._open:00000000 $t
     /tmp/cc6JGwBn.s:514    .text._open:00000000 _open
     /tmp/cc6JGwBn.s:564    .text._wait:00000000 $t
     /tmp/cc6JGwBn.s:570    .text._wait:00000000 _wait
     /tmp/cc6JGwBn.s:610    .text._unlink:00000000 $t
     /tmp/cc6JGwBn.s:616    .text._unlink:00000000 _unlink
     /tmp/cc6JGwBn.s:656    .text._times:00000000 $t
     /tmp/cc6JGwBn.s:662    .text._times:00000000 _times
     /tmp/cc6JGwBn.s:700    .text._stat:00000000 $t
     /tmp/cc6JGwBn.s:706    .text._stat:00000000 _stat
     /tmp/cc6JGwBn.s:749    .text._link:00000000 $t
     /tmp/cc6JGwBn.s:755    .text._link:00000000 _link
     /tmp/cc6JGwBn.s:796    .text._fork:00000000 $t
     /tmp/cc6JGwBn.s:802    .text._fork:00000000 _fork
     /tmp/cc6JGwBn.s:831    .text._execve:00000000 $t
     /tmp/cc6JGwBn.s:837    .text._execve:00000000 _execve
     /tmp/cc6JGwBn.s:879    .text._sbrk:00000000 $t
     /tmp/cc6JGwBn.s:885    .text._sbrk:00000000 _sbrk
     /tmp/cc6JGwBn.s:961    .text._sbrk:00000050 $d
     /tmp/cc6JGwBn.s:970    .bss.heap_end.0:00000000 heap_end.0
     /tmp/cc6JGwBn.s:967    .bss.heap_end.0:00000000 $d
                           .group:00000000 wm4.0.62e24ee945655210df7a12269291771b
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.newlib.h.27.f03ab22cfaa65f5233dc597b4a4aeaa2
                           .group:00000000 wm4.ieeefp.h.77.5ad60f72ea25fc152400b550ac118212
                           .group:00000000 wm4.features.h.22.4e5514d51694f64cae235f84d9e565a5
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.cdefs.h.49.56fd742369e655e7e8a7e365e706e208
ARM GAS  /tmp/cc6JGwBn.s 			page 23


                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.7f0775353a33c852a1479c008f68cd03
                           .group:00000000 wm4.time.h.14.849270cc7997ccc4e05edd146e568a9f
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:00000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:00000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.19.8f92964f85316d866d3bb193a38b5ac3
                           .group:00000000 wm4.types.h.51.e2a6e4379b4797ffcc4841f8498fd61b
                           .group:00000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:00000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:00000000 wm4.time.h.142.403dcded079b6de6a2d2f21a34c2ae96
                           .group:00000000 wm4.stat.h.54.5a9b823658423102e7a8de4ed089eedc
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4.errno.h.9.ae5ea2b0ff9ea6e39e585807e35200d3
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.1f5845210bb9053bbca9ed76fc4018da
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.signal.h.31.1e41f887ed1384065c2378e275de5bce
                           .group:00000000 wm4.signal.h.18.14c8d0c03fc1e06775633fad7399cfc7
                           .group:00000000 wm4.time.h.40.07bdef2e51e429b46276cd6f2246b78b

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
end
